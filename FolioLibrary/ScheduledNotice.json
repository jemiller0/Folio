{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Scheduled patron notice",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "id": {
      "description": "The UUID format string",
      "type": "string",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    },
    "loanId": {
      "$ref": "#/properties/id"
    },
    "requestId": {
      "$ref": "#/properties/id"
    },
    "feeFineActionId": {
      "$ref": "#/properties/id"
    },
    "recipientUserId": {
      "$ref": "#/properties/id"
    },
    "sessionId": {
      "$ref": "#/properties/id"
    },
    "nextRunTime": {
      "description": "Next run time",
      "type": "string",
      "format": "date-time"
    },
    "triggeringEvent": {
      "description": "Scheduled notice triggering event",
      "type": "string",
      "enum": [
        "Hold expiration",
        "Request expiration",
        "Due date",
        "Overdue fine returned",
        "Overdue fine renewed",
        "Due date - with reminder fee",
        "Aged to lost",
        "Aged to lost - fine charged",
        "Aged to lost & item returned - fine adjusted",
        "Aged to lost & item replaced - fine adjusted",
        "Title level request expiration"
      ]
    },
    "noticeConfig": {
      "description": "Scheduled notice configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "timing": {
          "description": "Timing represents when we need to send notice, before, at or after loan due date",
          "type": "string",
          "enum": [
            "Upon At",
            "Before",
            "After"
          ]
        },
        "recurringPeriod": {
          "description": "Time interval defined by its duration",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "duration": {
              "description": "Duration of the period, number of times the interval repeats",
              "type": "integer",
              "minimum": 1.0
            },
            "intervalId": {
              "description": "Interval for the period, e.g. hours, days or weeks",
              "type": "string",
              "enum": [
                "Minutes",
                "Hours",
                "Days",
                "Weeks",
                "Months"
              ]
            }
          },
          "required": [
            "duration",
            "intervalId"
          ]
        },
        "templateId": {
          "$ref": "#/properties/id"
        },
        "format": {
          "description": "Notice format",
          "type": "string",
          "enum": [
            "Email",
            "SMS",
            "Print"
          ]
        },
        "sendInRealTime": {
          "description": "Real time notice flag",
          "type": "boolean"
        }
      },
      "required": [
        "timing",
        "templateId",
        "format"
      ]
    },
    "metadata": {
      "title": "Metadata Schema",
      "description": "Metadata about creation and changes to records, provided by the server (client should not provide)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "createdDate": {
          "description": "Date and time when the record was created",
          "type": "string",
          "format": "date-time"
        },
        "createdByUserId": {
          "description": "ID of the user who created the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "createdByUsername": {
          "description": "Username of the user who created the record (when available)",
          "type": "string"
        },
        "updatedDate": {
          "description": "Date and time when the record was last updated",
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "description": "ID of the user who last updated the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "updatedByUsername": {
          "description": "Username of the user who last updated the record (when available)",
          "type": "string"
        }
      },
      "required": [
        "createdDate"
      ]
    }
  },
  "required": [
    "nextRunTime",
    "noticeConfig"
  ]
}