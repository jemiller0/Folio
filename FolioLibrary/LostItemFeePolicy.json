{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "CRUD lost item fee policy schema",
  "description": "CRUD to lost item fee policies",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "name": {
      "description": "Lost item fee policy name, is a required field",
      "type": "string"
    },
    "description": {
      "description": "Lost item fee policy description",
      "type": "string"
    },
    "itemAgedLostOverdue": {
      "description": "Period to lost item",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "duration": {
          "description": "Duration of the number of times the interval repeats",
          "type": "integer",
          "minimum": 1.0
        },
        "intervalId": {
          "description": "Interval for the period, e.g. Hours, Days or Weeks",
          "type": "string",
          "enum": [
            "Minutes",
            "Hours",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ]
        }
      }
    },
    "patronBilledAfterAgedLost": {
      "$ref": "#/properties/itemAgedLostOverdue"
    },
    "recalledItemAgedLostOverdue": {
      "$ref": "#/properties/itemAgedLostOverdue"
    },
    "patronBilledAfterRecalledItemAgedLost": {
      "$ref": "#/properties/itemAgedLostOverdue"
    },
    "chargeAmountItem": {
      "description": "Charge amount for item",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "chargeType": {
          "description": "Charge type amount for item may be Actual cost or an amount",
          "type": "string"
        },
        "amount": {
          "description": "Charge amount for item may be Actual cost or an amount",
          "javaType": "org.folio.rest.domain.MonetaryValue"
        }
      }
    },
    "lostItemProcessingFee": {
      "description": "Lost item processing fee, must be = 0 or > 0",
      "javaType": "org.folio.rest.domain.MonetaryValue"
    },
    "chargeAmountItemPatron": {
      "description": "A flag to determine charge lost item processing fee if item declared lost by patron must be Yes or No, with default set to Yes",
      "type": "boolean"
    },
    "chargeAmountItemSystem": {
      "description": "A flag to determine charge lost item processing fee if item aged to lost by system must be Yes or No, with default set to Yes",
      "type": "boolean"
    },
    "lostItemChargeFeeFine": {
      "$ref": "#/properties/itemAgedLostOverdue"
    },
    "returnedLostItemProcessingFee": {
      "description": "A flag to determine if lost item returned, remove lost item processing fee",
      "type": "boolean"
    },
    "replacedLostItemProcessingFee": {
      "description": "A flag to determine if lost item replaced, remove lost item processing fee",
      "type": "boolean"
    },
    "replacementProcessingFee": {
      "description": "Amount for replacement process fee",
      "javaType": "org.folio.rest.domain.MonetaryValue"
    },
    "replacementAllowed": {
      "description": "A flag to determine replacement allowed",
      "type": "boolean"
    },
    "lostItemReturned": {
      "description": "Option to lost item returned may be Charge overdues based on returned date up to maximum (if applicable) or Remove overdue fines, with a default of _Charge overdues based on returned date up to maximum (if applicable)",
      "type": "string"
    },
    "feesFinesShallRefunded": {
      "$ref": "#/properties/itemAgedLostOverdue"
    },
    "metadata": {
      "title": "Metadata Schema",
      "description": "Metadata about creation and changes to records, provided by the server (client should not provide)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "createdDate": {
          "description": "Date and time when the record was created",
          "type": "string",
          "format": "date-time"
        },
        "createdByUserId": {
          "description": "ID of the user who created the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "createdByUsername": {
          "description": "Username of the user who created the record (when available)",
          "type": "string"
        },
        "updatedDate": {
          "description": "Date and time when the record was last updated",
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "description": "ID of the user who last updated the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "updatedByUsername": {
          "description": "Username of the user who last updated the record (when available)",
          "type": "string"
        }
      },
      "required": [
        "createdDate"
      ]
    },
    "id": {
      "description": "The UUID format string",
      "type": "string",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
  },
  "required": [
    "name"
  ]
}