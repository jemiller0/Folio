using Dapper;
using Newtonsoft.Json;
using Npgsql;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.Common;
using System.Diagnostics;
using System.Linq;
using System.Text.RegularExpressions;

namespace FolioLibrary
{
    public class FolioDapperContext : IDisposable
    {
        private string connectionString;
        public int? CommandTimeout { get; set; } = 30;
        private DbConnection dbConnection;
        private DbTransaction dbTransaction;
        private string providerName;
        public readonly static TraceSource traceSource = new TraceSource("FolioLibrary", SourceLevels.Information);
        public readonly static JsonSerializerSettings LocalTimeJsonSerializationSettings = new JsonSerializerSettings { DateTimeZoneHandling = DateTimeZoneHandling.Local };
        public readonly static JsonSerializerSettings UniversalTimeJsonSerializationSettings = new JsonSerializerSettings { DateTimeZoneHandling = DateTimeZoneHandling.Utc, DateFormatString = "yyyy-MM-ddTHH:mm:ss.fff+00:00" };

        public bool IsMySql => providerName == "MySql.Data.MySqlClient";
        public bool IsPostgreSql => providerName == "Npgsql";
        public bool IsSqlServer => providerName == "System.Data.SqlClient";

        static FolioDapperContext() => AppContext.SetSwitch("Npgsql.EnableLegacyTimestampBehavior", true);

        public FolioDapperContext(string nameOrConnectionString = "FolioContext", string providerName = "Npgsql")
        {
            this.providerName = ConfigurationManager.ConnectionStrings[nameOrConnectionString]?.ProviderName ?? providerName ?? "Npgsql";
            connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString]?.ConnectionString ?? nameOrConnectionString;
        }

        private DbConnection Connection
        {
            get
            {
                if (dbConnection == null)
                {
                    dbConnection = DbProviderFactories.GetFactory(IsMySql ? "MySql.Data.MySqlClient2" : providerName).CreateConnection();
                    dbConnection.ConnectionString = connectionString;
                    dbConnection.Open();
                    if (IsMySql) dbConnection.Execute("SET SQL_MODE = 'ANSI'");
                }
                return dbConnection;
            }
        }

        private DbTransaction Transaction
        {
            get
            {
                if (dbTransaction == null) dbTransaction = Connection.BeginTransaction(IsolationLevel.ReadCommitted);
                return dbTransaction;
            }
        }

        public AcquisitionsUnit FindAcquisitionsUnit(Guid? id, bool load = false) => Query<AcquisitionsUnit>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit WHERE id = @id", new { id }).SingleOrDefault();
        public AcquisitionsUnit2 FindAcquisitionsUnit2(Guid? id, bool load = false)
        {
            var au2 = Query<AcquisitionsUnit2>($"SELECT id AS \"Id\", name AS \"Name\", is_deleted AS \"IsDeleted\", protect_create AS \"ProtectCreate\", protect_read AS \"ProtectRead\", protect_update AS \"ProtectUpdate\", protect_delete AS \"ProtectDelete\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (au2 == null) return null;
            if (load && au2.CreationUserId != null) au2.CreationUser = FindUser2(au2.CreationUserId);
            if (load && au2.LastWriteUserId != null) au2.LastWriteUser = FindUser2(au2.LastWriteUserId);
            return au2;
        }
        public Address FindAddress(Guid? id, bool load = false)
        {
            var a = Query<Address>($"SELECT id AS \"Id\", name AS \"Name\", content AS \"Content\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}addresses WHERE id = @id", new { id }).SingleOrDefault();
            if (a == null) return null;
            if (load && a.CreationUserId != null) a.CreationUser = FindUser2(a.CreationUserId);
            if (load && a.LastWriteUserId != null) a.LastWriteUser = FindUser2(a.LastWriteUserId);
            return a;
        }
        public AddressType FindAddressType(Guid? id, bool load = false) => Query<AddressType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype WHERE id = @id", new { id }).SingleOrDefault();
        public AddressType2 FindAddressType2(Guid? id, bool load = false)
        {
            var at2 = Query<AddressType2>($"SELECT id AS \"Id\", address_type AS \"Name\", \"desc\" AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}address_types WHERE id = @id", new { id }).SingleOrDefault();
            if (at2 == null) return null;
            if (load && at2.CreationUserId != null) at2.CreationUser = FindUser2(at2.CreationUserId);
            if (load && at2.LastWriteUserId != null) at2.LastWriteUser = FindUser2(at2.LastWriteUserId);
            return at2;
        }
        public Alert FindAlert(Guid? id, bool load = false) => Query<Alert>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert WHERE id = @id", new { id }).SingleOrDefault();
        public Alert2 FindAlert2(Guid? id, bool load = false) => Query<Alert2>($"SELECT id AS \"Id\", alert AS \"Alert\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alerts WHERE id = @id", new { id }).SingleOrDefault();
        public AllocatedFromFund FindAllocatedFromFund(string id, bool load = false)
        {
            var aff = Query<AllocatedFromFund>($"SELECT id AS \"Id\", fund_id AS \"FundId\", from_fund_id AS \"FromFundId\" FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds WHERE id = @id", new { id }).SingleOrDefault();
            if (aff == null) return null;
            if (load && aff.FundId != null) aff.Fund = FindFund2(aff.FundId);
            if (load && aff.FromFundId != null) aff.FromFund = FindFund2(aff.FromFundId);
            return aff;
        }
        public AllocatedToFund FindAllocatedToFund(string id, bool load = false)
        {
            var atf = Query<AllocatedToFund>($"SELECT id AS \"Id\", fund_id AS \"FundId\", to_fund_id AS \"ToFundId\" FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds WHERE id = @id", new { id }).SingleOrDefault();
            if (atf == null) return null;
            if (load && atf.FundId != null) atf.Fund = FindFund2(atf.FundId);
            if (load && atf.ToFundId != null) atf.ToFund = FindFund2(atf.ToFundId);
            return atf;
        }
        public AlternativeTitle FindAlternativeTitle(string id, Guid? instanceId, bool load = false)
        {
            var at = Query<AlternativeTitle>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", alternative_title_type_id AS \"AlternativeTitleTypeId\", alternative_title AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alternative_titles WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (at == null) return null;
            if (load && at.InstanceId != null) at.Instance = FindInstance2(at.InstanceId);
            if (load && at.AlternativeTitleTypeId != null) at.AlternativeTitleType = FindAlternativeTitleType2(at.AlternativeTitleTypeId);
            return at;
        }
        public AlternativeTitleType FindAlternativeTitleType(Guid? id, bool load = false) => Query<AlternativeTitleType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type WHERE id = @id", new { id }).SingleOrDefault();
        public AlternativeTitleType2 FindAlternativeTitleType2(Guid? id, bool load = false)
        {
            var att2 = Query<AlternativeTitleType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alternative_title_types WHERE id = @id", new { id }).SingleOrDefault();
            if (att2 == null) return null;
            if (load && att2.CreationUserId != null) att2.CreationUser = FindUser2(att2.CreationUserId);
            if (load && att2.LastWriteUserId != null) att2.LastWriteUser = FindUser2(att2.LastWriteUserId);
            return att2;
        }
        public AuthAttempt FindAuthAttempt(Guid? id, bool load = false) => Query<AuthAttempt>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts WHERE id = @id", new { id }).SingleOrDefault();
        public AuthAttempt2 FindAuthAttempt2(Guid? id, bool load = false)
        {
            var aa2 = Query<AuthAttempt2>($"SELECT id AS \"Id\", user_id AS \"UserId\", last_attempt AS \"LastAttempt\", attempt_count AS \"AttemptCount\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}auth_attempts WHERE id = @id", new { id }).SingleOrDefault();
            if (aa2 == null) return null;
            if (load && aa2.UserId != null) aa2.User = FindUser2(aa2.UserId);
            return aa2;
        }
        public AuthCredentialsHistory FindAuthCredentialsHistory(Guid? id, bool load = false) => Query<AuthCredentialsHistory>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history WHERE id = @id", new { id }).SingleOrDefault();
        public AuthCredentialsHistory2 FindAuthCredentialsHistory2(Guid? id, bool load = false)
        {
            var ach2 = Query<AuthCredentialsHistory2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hash AS \"Hash\", salt AS \"Salt\", date AS \"Date\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories WHERE id = @id", new { id }).SingleOrDefault();
            if (ach2 == null) return null;
            if (load && ach2.UserId != null) ach2.User = FindUser2(ach2.UserId);
            if (load && ach2.CreationUserId != null) ach2.CreationUser = FindUser2(ach2.CreationUserId);
            if (load && ach2.LastWriteUserId != null) ach2.LastWriteUser = FindUser2(ach2.LastWriteUserId);
            return ach2;
        }
        public AuthPasswordAction FindAuthPasswordAction(Guid? id, bool load = false) => Query<AuthPasswordAction>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action WHERE id = @id", new { id }).SingleOrDefault();
        public BatchGroup FindBatchGroup(Guid? id, bool load = false) => Query<BatchGroup>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups WHERE id = @id", new { id }).SingleOrDefault();
        public BatchGroup2 FindBatchGroup2(Guid? id, bool load = false)
        {
            var bg2 = Query<BatchGroup2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_groups WHERE id = @id", new { id }).SingleOrDefault();
            if (bg2 == null) return null;
            if (load && bg2.CreationUserId != null) bg2.CreationUser = FindUser2(bg2.CreationUserId);
            if (load && bg2.LastWriteUserId != null) bg2.LastWriteUser = FindUser2(bg2.LastWriteUserId);
            return bg2;
        }
        public BatchVoucher FindBatchVoucher(Guid? id, bool load = false) => Query<BatchVoucher>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers WHERE id = @id", new { id }).SingleOrDefault();
        public BatchVoucher2 FindBatchVoucher2(Guid? id, bool load = false) => Query<BatchVoucher2>($"SELECT id AS \"Id\", batch_group AS \"BatchGroup\", created AS \"Created\", start AS \"Start\", \"end\" AS \"End\", total_records AS \"TotalRecords\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_vouchers WHERE id = @id", new { id }).SingleOrDefault();
        public BatchVoucherBatchedVoucher FindBatchVoucherBatchedVoucher(string id, bool load = false)
        {
            var bvbv = Query<BatchVoucherBatchedVoucher>($"SELECT id AS \"Id\", batch_voucher_id AS \"BatchVoucherId\", accounting_code AS \"AccountingCode\", account_no AS \"AccountNumber\", amount AS \"Amount\", disbursement_number AS \"DisbursementNumber\", disbursement_date AS \"DisbursementDate\", disbursement_amount AS \"DisbursementAmount\", enclosure_needed AS \"Enclosure\", exchange_rate AS \"ExchangeRate\", folio_invoice_no AS \"FolioInvoiceNumber\", invoice_currency AS \"InvoiceCurrency\", invoice_note AS \"InvoiceNote\", status AS \"Status\", system_currency AS \"SystemCurrency\", type AS \"Type\", vendor_invoice_no AS \"VendorInvoiceNumber\", vendor_name AS \"VendorName\", voucher_date AS \"VoucherDate\", voucher_number AS \"VoucherNumber\", vendor_address_address_line1 AS \"VendorStreetAddress1\", vendor_address_address_line2 AS \"VendorStreetAddress2\", vendor_address_city AS \"VendorCity\", vendor_address_state_region AS \"VendorState\", vendor_address_zip_code AS \"VendorPostalCode\", vendor_address_country AS \"VendorCountryCode\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers WHERE id = @id", new { id }).SingleOrDefault();
            if (bvbv == null) return null;
            if (load && bvbv.BatchVoucherId != null) bvbv.BatchVoucher = FindBatchVoucher2(bvbv.BatchVoucherId);
            return bvbv;
        }
        public BatchVoucherBatchedVoucherBatchedVoucherLine FindBatchVoucherBatchedVoucherBatchedVoucherLine(string id, bool load = false)
        {
            var bvbvbvl = Query<BatchVoucherBatchedVoucherBatchedVoucherLine>($"SELECT id AS \"Id\", batch_voucher_batched_voucher_id AS \"BatchVoucherBatchedVoucherId\", amount AS \"Amount\", external_account_number AS \"AccountNumber\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines WHERE id = @id", new { id }).SingleOrDefault();
            if (bvbvbvl == null) return null;
            if (load && bvbvbvl.BatchVoucherBatchedVoucherId != null) bvbvbvl.BatchVoucherBatchedVoucher = FindBatchVoucherBatchedVoucher(bvbvbvl.BatchVoucherBatchedVoucherId);
            return bvbvbvl;
        }
        public BatchVoucherBatchedVoucherBatchedVoucherLineFundCode FindBatchVoucherBatchedVoucherBatchedVoucherLineFundCode(string id, bool load = false)
        {
            var bvbvbvlfc = Query<BatchVoucherBatchedVoucherBatchedVoucherLineFundCode>($"SELECT id AS \"Id\", batch_voucher_batched_voucher_batched_voucher_line_id AS \"BatchVoucherBatchedVoucherBatchedVoucherLineId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes WHERE id = @id", new { id }).SingleOrDefault();
            if (bvbvbvlfc == null) return null;
            if (load && bvbvbvlfc.BatchVoucherBatchedVoucherBatchedVoucherLineId != null) bvbvbvlfc.BatchVoucherBatchedVoucherBatchedVoucherLine = FindBatchVoucherBatchedVoucherBatchedVoucherLine(bvbvbvlfc.BatchVoucherBatchedVoucherBatchedVoucherLineId);
            return bvbvbvlfc;
        }
        public BatchVoucherExport FindBatchVoucherExport(Guid? id, bool load = false)
        {
            var bve = Query<BatchVoucherExport>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\", batchvoucherid AS \"Batchvoucherid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports WHERE id = @id", new { id }).SingleOrDefault();
            if (bve == null) return null;
            if (load && bve.Batchgroupid != null) bve.BatchGroup = FindBatchGroup(bve.Batchgroupid);
            if (load && bve.Batchvoucherid != null) bve.BatchVoucher = FindBatchVoucher(bve.Batchvoucherid);
            return bve;
        }
        public BatchVoucherExport2 FindBatchVoucherExport2(Guid? id, bool load = false)
        {
            var bve2 = Query<BatchVoucherExport2>($"SELECT id AS \"Id\", status AS \"Status\", message AS \"Message\", batch_group_id AS \"BatchGroupId\", start AS \"Start\", \"end\" AS \"End\", batch_voucher_id AS \"BatchVoucherId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports WHERE id = @id", new { id }).SingleOrDefault();
            if (bve2 == null) return null;
            if (load && bve2.BatchGroupId != null) bve2.BatchGroup = FindBatchGroup2(bve2.BatchGroupId);
            if (load && bve2.BatchVoucherId != null) bve2.BatchVoucher = FindBatchVoucher2(bve2.BatchVoucherId);
            if (load && bve2.CreationUserId != null) bve2.CreationUser = FindUser2(bve2.CreationUserId);
            if (load && bve2.LastWriteUserId != null) bve2.LastWriteUser = FindUser2(bve2.LastWriteUserId);
            return bve2;
        }
        public BatchVoucherExportConfig FindBatchVoucherExportConfig(Guid? id, bool load = false)
        {
            var bvec = Query<BatchVoucherExportConfig>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs WHERE id = @id", new { id }).SingleOrDefault();
            if (bvec == null) return null;
            if (load && bvec.Batchgroupid != null) bvec.BatchGroup = FindBatchGroup(bvec.Batchgroupid);
            return bvec;
        }
        public BatchVoucherExportConfig2 FindBatchVoucherExportConfig2(Guid? id, bool load = false)
        {
            var bvec2 = Query<BatchVoucherExportConfig2>($"SELECT id AS \"Id\", batch_group_id AS \"BatchGroupId\", enable_scheduled_export AS \"EnableScheduledExport\", format AS \"Format\", start_time AS \"StartTime\", upload_uri AS \"UploadUri\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs WHERE id = @id", new { id }).SingleOrDefault();
            if (bvec2 == null) return null;
            if (load && bvec2.BatchGroupId != null) bvec2.BatchGroup = FindBatchGroup2(bvec2.BatchGroupId);
            if (load && bvec2.CreationUserId != null) bvec2.CreationUser = FindUser2(bvec2.CreationUserId);
            if (load && bvec2.LastWriteUserId != null) bvec2.LastWriteUser = FindUser2(bvec2.LastWriteUserId);
            return bvec2;
        }
        public BatchVoucherExportConfigWeekday FindBatchVoucherExportConfigWeekday(string id, bool load = false)
        {
            var bvecw = Query<BatchVoucherExportConfigWeekday>($"SELECT id AS \"Id\", batch_voucher_export_config_id AS \"BatchVoucherExportConfigId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays WHERE id = @id", new { id }).SingleOrDefault();
            if (bvecw == null) return null;
            if (load && bvecw.BatchVoucherExportConfigId != null) bvecw.BatchVoucherExportConfig = FindBatchVoucherExportConfig2(bvecw.BatchVoucherExportConfigId);
            return bvecw;
        }
        public Block FindBlock(Guid? id, bool load = false) => Query<Block>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks WHERE id = @id", new { id }).SingleOrDefault();
        public Block2 FindBlock2(Guid? id, bool load = false)
        {
            var b2 = Query<Block2>($"SELECT id AS \"Id\", type AS \"Type\", \"desc\" AS \"Description\", code AS \"Code\", staff_information AS \"StaffInformation\", patron_message AS \"PatronMessage\", expiration_date AS \"ExpirationDate\", borrowing AS \"Borrowing\", renewals AS \"Renewals\", requests AS \"Requests\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}blocks WHERE id = @id", new { id }).SingleOrDefault();
            if (b2 == null) return null;
            if (load && b2.UserId != null) b2.User = FindUser2(b2.UserId);
            if (load && b2.CreationUserId != null) b2.CreationUser = FindUser2(b2.CreationUserId);
            if (load && b2.LastWriteUserId != null) b2.LastWriteUser = FindUser2(b2.LastWriteUserId);
            return b2;
        }
        public BlockCondition FindBlockCondition(Guid? id, bool load = false) => Query<BlockCondition>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions WHERE id = @id", new { id }).SingleOrDefault();
        public BlockCondition2 FindBlockCondition2(Guid? id, bool load = false)
        {
            var bc2 = Query<BlockCondition2>($"SELECT id AS \"Id\", name AS \"Name\", block_borrowing AS \"BlockBorrowing\", block_renewals AS \"BlockRenewals\", block_requests AS \"BlockRequests\", value_type AS \"ValueType\", message AS \"Message\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}block_conditions WHERE id = @id", new { id }).SingleOrDefault();
            if (bc2 == null) return null;
            if (load && bc2.CreationUserId != null) bc2.CreationUser = FindUser2(bc2.CreationUserId);
            if (load && bc2.LastWriteUserId != null) bc2.LastWriteUser = FindUser2(bc2.LastWriteUserId);
            return bc2;
        }
        public BlockLimit FindBlockLimit(Guid? id, bool load = false)
        {
            var bl = Query<BlockLimit>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", conditionid AS \"Conditionid\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits WHERE id = @id", new { id }).SingleOrDefault();
            if (bl == null) return null;
            if (load && bl.Conditionid != null) bl.BlockCondition = FindBlockCondition(bl.Conditionid);
            return bl;
        }
        public BlockLimit2 FindBlockLimit2(Guid? id, bool load = false)
        {
            var bl2 = Query<BlockLimit2>($"SELECT id AS \"Id\", group_id AS \"GroupId\", condition_id AS \"ConditionId\", value AS \"Value\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", conditionid AS \"Conditionid\" FROM uc{(IsMySql ? "_" : ".")}block_limits WHERE id = @id", new { id }).SingleOrDefault();
            if (bl2 == null) return null;
            if (load && bl2.GroupId != null) bl2.Group = FindGroup2(bl2.GroupId);
            if (load && bl2.ConditionId != null) bl2.Condition = FindBlockCondition2(bl2.ConditionId);
            if (load && bl2.CreationUserId != null) bl2.CreationUser = FindUser2(bl2.CreationUserId);
            if (load && bl2.LastWriteUserId != null) bl2.LastWriteUser = FindUser2(bl2.LastWriteUserId);
            return bl2;
        }
        public BoundWithPart FindBoundWithPart(Guid? id, bool load = false)
        {
            var bwp = Query<BoundWithPart>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", itemid AS \"Itemid\", holdingsrecordid AS \"Holdingsrecordid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part WHERE id = @id", new { id }).SingleOrDefault();
            if (bwp == null) return null;
            if (load && bwp.Itemid != null) bwp.Item = FindItem(bwp.Itemid);
            if (load && bwp.Holdingsrecordid != null) bwp.Holding = FindHolding(bwp.Holdingsrecordid);
            return bwp;
        }
        public BoundWithPart2 FindBoundWithPart2(Guid? id, bool load = false)
        {
            var bwp2 = Query<BoundWithPart2>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", item_id AS \"ItemId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}bound_with_parts WHERE id = @id", new { id }).SingleOrDefault();
            if (bwp2 == null) return null;
            if (load && bwp2.HoldingId != null) bwp2.Holding = FindHolding2(bwp2.HoldingId);
            if (load && bwp2.ItemId != null) bwp2.Item = FindItem2(bwp2.ItemId);
            if (load && bwp2.CreationUserId != null) bwp2.CreationUser = FindUser2(bwp2.CreationUserId);
            if (load && bwp2.LastWriteUserId != null) bwp2.LastWriteUser = FindUser2(bwp2.LastWriteUserId);
            return bwp2;
        }
        public Budget FindBudget(Guid? id, bool load = false)
        {
            var b = Query<Budget>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fundid AS \"FundId\", fiscalyearid AS \"FiscalYearId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget WHERE id = @id", new { id }).SingleOrDefault();
            if (b == null) return null;
            if (load && b.FundId != null) b.Fund = FindFund(b.FundId);
            if (load && b.FiscalYearId != null) b.FiscalYear = FindFiscalYear(b.FiscalYearId);
            return b;
        }
        public Budget2 FindBudget2(Guid? id, bool load = false)
        {
            var b2 = Query<Budget2>($"SELECT id AS \"Id\", name AS \"Name\", budget_status AS \"BudgetStatus\", allowable_encumbrance AS \"AllowableEncumbrance\", allowable_expenditure AS \"AllowableExpenditure\", allocated AS \"Allocated\", awaiting_payment AS \"AwaitingPayment\", available AS \"Available\", encumbered AS \"Encumbered\", expenditures AS \"Expenditures\", net_transfers AS \"NetTransfers\", unavailable AS \"Unavailable\", over_encumbrance AS \"OverEncumbrance\", over_expended AS \"OverExpended\", fund_id AS \"FundId\", fiscal_year_id AS \"FiscalYearId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", initial_allocation AS \"InitialAllocation\", allocation_to AS \"AllocationTo\", allocation_from AS \"AllocationFrom\", total_funding AS \"TotalFunding\", cash_balance AS \"CashBalance\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budgets WHERE id = @id", new { id }).SingleOrDefault();
            if (b2 == null) return null;
            if (load && b2.FundId != null) b2.Fund = FindFund2(b2.FundId);
            if (load && b2.FiscalYearId != null) b2.FiscalYear = FindFiscalYear2(b2.FiscalYearId);
            if (load && b2.CreationUserId != null) b2.CreationUser = FindUser2(b2.CreationUserId);
            if (load && b2.LastWriteUserId != null) b2.LastWriteUser = FindUser2(b2.LastWriteUserId);
            return b2;
        }
        public BudgetAcquisitionsUnit FindBudgetAcquisitionsUnit(string id, bool load = false)
        {
            var bau = Query<BudgetAcquisitionsUnit>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (bau == null) return null;
            if (load && bau.BudgetId != null) bau.Budget = FindBudget2(bau.BudgetId);
            if (load && bau.AcquisitionsUnitId != null) bau.AcquisitionsUnit = FindAcquisitionsUnit2(bau.AcquisitionsUnitId);
            return bau;
        }
        public BudgetExpenseClass FindBudgetExpenseClass(Guid? id, bool load = false)
        {
            var bec = Query<BudgetExpenseClass>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", budgetid AS \"Budgetid\", expenseclassid AS \"Expenseclassid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class WHERE id = @id", new { id }).SingleOrDefault();
            if (bec == null) return null;
            if (load && bec.Budgetid != null) bec.Budget = FindBudget(bec.Budgetid);
            if (load && bec.Expenseclassid != null) bec.ExpenseClass = FindExpenseClass(bec.Expenseclassid);
            return bec;
        }
        public BudgetExpenseClass2 FindBudgetExpenseClass2(Guid? id, bool load = false)
        {
            var bec2 = Query<BudgetExpenseClass2>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", expense_class_id AS \"ExpenseClassId\", status AS \"Status\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes WHERE id = @id", new { id }).SingleOrDefault();
            if (bec2 == null) return null;
            if (load && bec2.BudgetId != null) bec2.Budget = FindBudget2(bec2.BudgetId);
            if (load && bec2.ExpenseClassId != null) bec2.ExpenseClass = FindExpenseClass2(bec2.ExpenseClassId);
            return bec2;
        }
        public BudgetGroup FindBudgetGroup(Guid? id, bool load = false)
        {
            var bg = Query<BudgetGroup>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", budgetid AS \"Budgetid\", groupid AS \"Groupid\", fundid AS \"Fundid\", fiscalyearid AS \"Fiscalyearid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year WHERE id = @id", new { id }).SingleOrDefault();
            if (bg == null) return null;
            if (load && bg.Budgetid != null) bg.Budget = FindBudget(bg.Budgetid);
            if (load && bg.Groupid != null) bg.FinanceGroup = FindFinanceGroup(bg.Groupid);
            if (load && bg.Fundid != null) bg.Fund = FindFund(bg.Fundid);
            if (load && bg.Fiscalyearid != null) bg.FiscalYear = FindFiscalYear(bg.Fiscalyearid);
            return bg;
        }
        public BudgetGroup2 FindBudgetGroup2(Guid? id, bool load = false)
        {
            var bg2 = Query<BudgetGroup2>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", group_id AS \"GroupId\", fiscal_year_id AS \"FiscalYearId\", fund_id AS \"FundId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budget_groups WHERE id = @id", new { id }).SingleOrDefault();
            if (bg2 == null) return null;
            if (load && bg2.BudgetId != null) bg2.Budget = FindBudget2(bg2.BudgetId);
            if (load && bg2.GroupId != null) bg2.Group = FindFinanceGroup2(bg2.GroupId);
            if (load && bg2.FiscalYearId != null) bg2.FiscalYear = FindFiscalYear2(bg2.FiscalYearId);
            if (load && bg2.FundId != null) bg2.Fund = FindFund2(bg2.FundId);
            return bg2;
        }
        public BudgetTag FindBudgetTag(string id, bool load = false)
        {
            var bt = Query<BudgetTag>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", tag_id AS \"TagId\" FROM uc{(IsMySql ? "_" : ".")}budget_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (bt == null) return null;
            if (load && bt.BudgetId != null) bt.Budget = FindBudget2(bt.BudgetId);
            if (load && bt.TagId != null) bt.Tag = FindTag2(bt.TagId);
            return bt;
        }
        public CallNumberType FindCallNumberType(Guid? id, bool load = false) => Query<CallNumberType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type WHERE id = @id", new { id }).SingleOrDefault();
        public CallNumberType2 FindCallNumberType2(Guid? id, bool load = false)
        {
            var cnt2 = Query<CallNumberType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}call_number_types WHERE id = @id", new { id }).SingleOrDefault();
            if (cnt2 == null) return null;
            if (load && cnt2.CreationUserId != null) cnt2.CreationUser = FindUser2(cnt2.CreationUserId);
            if (load && cnt2.LastWriteUserId != null) cnt2.LastWriteUser = FindUser2(cnt2.LastWriteUserId);
            return cnt2;
        }
        public Campus FindCampus(Guid? id, bool load = false)
        {
            var c = Query<Campus>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", institutionid AS \"Institutionid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus WHERE id = @id", new { id }).SingleOrDefault();
            if (c == null) return null;
            if (load && c.Institutionid != null) c.Institution = FindInstitution(c.Institutionid);
            return c;
        }
        public Campus2 FindCampus2(Guid? id, bool load = false)
        {
            var c2 = Query<Campus2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", institution_id AS \"InstitutionId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}campuses WHERE id = @id", new { id }).SingleOrDefault();
            if (c2 == null) return null;
            if (load && c2.InstitutionId != null) c2.Institution = FindInstitution2(c2.InstitutionId);
            if (load && c2.CreationUserId != null) c2.CreationUser = FindUser2(c2.CreationUserId);
            if (load && c2.LastWriteUserId != null) c2.LastWriteUser = FindUser2(c2.LastWriteUserId);
            return c2;
        }
        public CancellationReason FindCancellationReason(Guid? id, bool load = false) => Query<CancellationReason>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason WHERE id = @id", new { id }).SingleOrDefault();
        public CancellationReason2 FindCancellationReason2(Guid? id, bool load = false)
        {
            var cr2 = Query<CancellationReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", public_description AS \"PublicDescription\", requires_additional_information AS \"RequiresAdditionalInformation\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons WHERE id = @id", new { id }).SingleOrDefault();
            if (cr2 == null) return null;
            if (load && cr2.CreationUserId != null) cr2.CreationUser = FindUser2(cr2.CreationUserId);
            if (load && cr2.LastWriteUserId != null) cr2.LastWriteUser = FindUser2(cr2.LastWriteUserId);
            return cr2;
        }
        public Category FindCategory(Guid? id, bool load = false) => Query<Category>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories WHERE id = @id", new { id }).SingleOrDefault();
        public Category2 FindCategory2(Guid? id, bool load = false)
        {
            var c2 = Query<Category2>($"SELECT id AS \"Id\", value AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}categories WHERE id = @id", new { id }).SingleOrDefault();
            if (c2 == null) return null;
            if (load && c2.CreationUserId != null) c2.CreationUser = FindUser2(c2.CreationUserId);
            if (load && c2.LastWriteUserId != null) c2.LastWriteUser = FindUser2(c2.LastWriteUserId);
            return c2;
        }
        public CheckIn FindCheckIn(Guid? id, bool load = false) => Query<CheckIn>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in WHERE id = @id", new { id }).SingleOrDefault();
        public CheckIn2 FindCheckIn2(Guid? id, bool load = false)
        {
            var ci2 = Query<CheckIn2>($"SELECT id AS \"Id\", occurred_date_time AS \"OccurredDateTime\", item_id AS \"ItemId\", item_status_prior_to_check_in AS \"ItemStatusPriorToCheckIn\", request_queue_size AS \"RequestQueueSize\", item_location_id AS \"ItemLocationId\", service_point_id AS \"ServicePointId\", performed_by_user_id AS \"PerformedByUserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}check_ins WHERE id = @id", new { id }).SingleOrDefault();
            if (ci2 == null) return null;
            if (load && ci2.ItemId != null) ci2.Item = FindItem2(ci2.ItemId);
            if (load && ci2.ItemLocationId != null) ci2.ItemLocation = FindLocation2(ci2.ItemLocationId);
            if (load && ci2.ServicePointId != null) ci2.ServicePoint = FindServicePoint2(ci2.ServicePointId);
            if (load && ci2.PerformedByUserId != null) ci2.PerformedByUser = FindUser2(ci2.PerformedByUserId);
            return ci2;
        }
        public CirculationNote FindCirculationNote(string id, Guid? itemId, bool load = false)
        {
            var cn = Query<CirculationNote>($"SELECT id AS \"Id\", item_id AS \"ItemId\", id2 AS \"Id2\", note_type AS \"NoteType\", note AS \"Note\", source_id AS \"SourceId\", source_personal_last_name AS \"SourcePersonalLastName\", source_personal_first_name AS \"SourcePersonalFirstName\", date AS \"Date\", staff_only AS \"StaffOnly\" FROM uc{(IsMySql ? "_" : ".")}circulation_notes WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (cn == null) return null;
            if (load && cn.ItemId != null) cn.Item = FindItem2(cn.ItemId);
            return cn;
        }
        public CirculationRule FindCirculationRule(Guid? id, bool load = false) => Query<CirculationRule>($"SELECT id AS \"Id\", jsonb AS \"Content\", lock AS \"Lock\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules WHERE id = @id", new { id }).SingleOrDefault();
        public CirculationRule2 FindCirculationRule2(Guid? id, bool load = false) => Query<CirculationRule2>($"SELECT id AS \"Id\", rules_as_text AS \"RulesAsText\", content AS \"Content\", lock AS \"Lock\" FROM uc{(IsMySql ? "_" : ".")}circulation_rules WHERE id = @id", new { id }).SingleOrDefault();
        public Classification FindClassification(string id, Guid? instanceId, bool load = false)
        {
            var c = Query<Classification>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", classification_number AS \"Number\", classification_type_id AS \"ClassificationTypeId\" FROM uc{(IsMySql ? "_" : ".")}classifications WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (c == null) return null;
            if (load && c.InstanceId != null) c.Instance = FindInstance2(c.InstanceId);
            if (load && c.ClassificationTypeId != null) c.ClassificationType = FindClassificationType2(c.ClassificationTypeId);
            return c;
        }
        public ClassificationType FindClassificationType(Guid? id, bool load = false) => Query<ClassificationType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type WHERE id = @id", new { id }).SingleOrDefault();
        public ClassificationType2 FindClassificationType2(Guid? id, bool load = false)
        {
            var ct2 = Query<ClassificationType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}classification_types WHERE id = @id", new { id }).SingleOrDefault();
            if (ct2 == null) return null;
            if (load && ct2.CreationUserId != null) ct2.CreationUser = FindUser2(ct2.CreationUserId);
            if (load && ct2.LastWriteUserId != null) ct2.LastWriteUser = FindUser2(ct2.LastWriteUserId);
            return ct2;
        }
        public CloseReason FindCloseReason(Guid? id, bool load = false) => Query<CloseReason>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure WHERE id = @id", new { id }).SingleOrDefault();
        public CloseReason2 FindCloseReason2(Guid? id, bool load = false) => Query<CloseReason2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}close_reasons WHERE id = @id", new { id }).SingleOrDefault();
        public Comment FindComment(Guid? id, bool load = false) => Query<Comment>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments WHERE id = @id", new { id }).SingleOrDefault();
        public Comment2 FindComment2(Guid? id, bool load = false)
        {
            var c2 = Query<Comment2>($"SELECT id AS \"Id\", paid AS \"Paid\", waived AS \"Waived\", refunded AS \"Refunded\", transferred_manually AS \"TransferredManually\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}comments WHERE id = @id", new { id }).SingleOrDefault();
            if (c2 == null) return null;
            if (load && c2.CreationUserId != null) c2.CreationUser = FindUser2(c2.CreationUserId);
            if (load && c2.LastWriteUserId != null) c2.LastWriteUser = FindUser2(c2.LastWriteUserId);
            return c2;
        }
        public Configuration FindConfiguration(Guid? id, bool load = false) => Query<Configuration>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data WHERE id = @id", new { id }).SingleOrDefault();
        public Configuration2 FindConfiguration2(Guid? id, bool load = false)
        {
            var c2 = Query<Configuration2>($"SELECT id AS \"Id\", module AS \"Module\", config_name AS \"ConfigName\", code AS \"Code\", description AS \"Description\", \"default\" AS \"Default\", enabled AS \"Enabled\", value AS \"Value\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}configurations WHERE id = @id", new { id }).SingleOrDefault();
            if (c2 == null) return null;
            if (load && c2.CreationUserId != null) c2.CreationUser = FindUser2(c2.CreationUserId);
            if (load && c2.LastWriteUserId != null) c2.LastWriteUser = FindUser2(c2.LastWriteUserId);
            return c2;
        }
        public Contact FindContact(Guid? id, bool load = false) => Query<Contact>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts WHERE id = @id", new { id }).SingleOrDefault();
        public Contact2 FindContact2(Guid? id, bool load = false)
        {
            var c2 = Query<Contact2>($"SELECT id AS \"Id\", name AS \"Name\", prefix AS \"Prefix\", first_name AS \"FirstName\", last_name AS \"LastName\", language AS \"Language\", notes AS \"Notes\", inactive AS \"Inactive\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contacts WHERE id = @id", new { id }).SingleOrDefault();
            if (c2 == null) return null;
            if (load && c2.CreationUserId != null) c2.CreationUser = FindUser2(c2.CreationUserId);
            if (load && c2.LastWriteUserId != null) c2.LastWriteUser = FindUser2(c2.LastWriteUserId);
            return c2;
        }
        public ContactAddress FindContactAddress(string id, bool load = false)
        {
            var ca = Query<ContactAddress>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", state_region AS \"State\", zip_code AS \"PostalCode\", country AS \"CountryCode\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_addresses WHERE id = @id", new { id }).SingleOrDefault();
            if (ca == null) return null;
            if (load && ca.ContactId != null) ca.Contact = FindContact2(ca.ContactId);
            if (load && ca.CreationUserId != null) ca.CreationUser = FindUser2(ca.CreationUserId);
            if (load && ca.LastWriteUserId != null) ca.LastWriteUser = FindUser2(ca.LastWriteUserId);
            return ca;
        }
        public ContactAddressCategory FindContactAddressCategory(string id, bool load = false)
        {
            var cac = Query<ContactAddressCategory>($"SELECT id AS \"Id\", contact_address_id AS \"ContactAddressId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_address_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (cac == null) return null;
            if (load && cac.ContactAddressId != null) cac.ContactAddress = FindContactAddress(cac.ContactAddressId);
            if (load && cac.CategoryId != null) cac.Category = FindCategory2(cac.CategoryId);
            return cac;
        }
        public ContactCategory FindContactCategory(string id, bool load = false)
        {
            var cc = Query<ContactCategory>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (cc == null) return null;
            if (load && cc.ContactId != null) cc.Contact = FindContact2(cc.ContactId);
            if (load && cc.CategoryId != null) cc.Category = FindCategory2(cc.CategoryId);
            return cc;
        }
        public ContactEmail FindContactEmail(string id, bool load = false)
        {
            var ce = Query<ContactEmail>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_emails WHERE id = @id", new { id }).SingleOrDefault();
            if (ce == null) return null;
            if (load && ce.ContactId != null) ce.Contact = FindContact2(ce.ContactId);
            if (load && ce.CreationUserId != null) ce.CreationUser = FindUser2(ce.CreationUserId);
            if (load && ce.LastWriteUserId != null) ce.LastWriteUser = FindUser2(ce.LastWriteUserId);
            return ce;
        }
        public ContactEmailCategory FindContactEmailCategory(string id, bool load = false)
        {
            var cec = Query<ContactEmailCategory>($"SELECT id AS \"Id\", contact_email_id AS \"ContactEmailId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_email_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (cec == null) return null;
            if (load && cec.ContactEmailId != null) cec.ContactEmail = FindContactEmail(cec.ContactEmailId);
            if (load && cec.CategoryId != null) cec.Category = FindCategory2(cec.CategoryId);
            return cec;
        }
        public ContactPhoneNumber FindContactPhoneNumber(string id, bool load = false)
        {
            var cpn = Query<ContactPhoneNumber>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", phone_number AS \"PhoneNumber\", type AS \"Type\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers WHERE id = @id", new { id }).SingleOrDefault();
            if (cpn == null) return null;
            if (load && cpn.ContactId != null) cpn.Contact = FindContact2(cpn.ContactId);
            if (load && cpn.CreationUserId != null) cpn.CreationUser = FindUser2(cpn.CreationUserId);
            if (load && cpn.LastWriteUserId != null) cpn.LastWriteUser = FindUser2(cpn.LastWriteUserId);
            return cpn;
        }
        public ContactPhoneNumberCategory FindContactPhoneNumberCategory(string id, bool load = false)
        {
            var cpnc = Query<ContactPhoneNumberCategory>($"SELECT id AS \"Id\", contact_phone_number_id AS \"ContactPhoneNumberId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (cpnc == null) return null;
            if (load && cpnc.ContactPhoneNumberId != null) cpnc.ContactPhoneNumber = FindContactPhoneNumber(cpnc.ContactPhoneNumberId);
            if (load && cpnc.CategoryId != null) cpnc.Category = FindCategory2(cpnc.CategoryId);
            return cpnc;
        }
        public ContactType FindContactType(string id, bool load = false) => Query<ContactType>($"SELECT id AS \"Id\", name AS \"Name\" FROM uc{(IsMySql ? "_" : ".")}contact_types WHERE id = @id", new { id }).SingleOrDefault();
        public ContactUrl FindContactUrl(string id, bool load = false)
        {
            var cu = Query<ContactUrl>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", language AS \"Language\", is_primary AS \"IsPrimary\", notes AS \"Notes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_urls WHERE id = @id", new { id }).SingleOrDefault();
            if (cu == null) return null;
            if (load && cu.ContactId != null) cu.Contact = FindContact2(cu.ContactId);
            if (load && cu.CreationUserId != null) cu.CreationUser = FindUser2(cu.CreationUserId);
            if (load && cu.LastWriteUserId != null) cu.LastWriteUser = FindUser2(cu.LastWriteUserId);
            return cu;
        }
        public ContactUrlCategory FindContactUrlCategory(string id, bool load = false)
        {
            var cuc = Query<ContactUrlCategory>($"SELECT id AS \"Id\", contact_url_id AS \"ContactUrlId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_url_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (cuc == null) return null;
            if (load && cuc.ContactUrlId != null) cuc.ContactUrl = FindContactUrl(cuc.ContactUrlId);
            if (load && cuc.CategoryId != null) cuc.Category = FindCategory2(cuc.CategoryId);
            return cuc;
        }
        public Contributor FindContributor(string id, Guid? instanceId, bool load = false)
        {
            var c = Query<Contributor>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", name AS \"Name\", contributor_type_id AS \"ContributorTypeId\", contributor_type_text AS \"ContributorTypeText\", contributor_name_type_id AS \"ContributorNameTypeId\", primary AS \"Primary\" FROM uc{(IsMySql ? "_" : ".")}contributors WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (c == null) return null;
            if (load && c.InstanceId != null) c.Instance = FindInstance2(c.InstanceId);
            if (load && c.ContributorTypeId != null) c.ContributorType = FindContributorType2(c.ContributorTypeId);
            if (load && c.ContributorNameTypeId != null) c.ContributorNameType = FindContributorNameType2(c.ContributorNameTypeId);
            return c;
        }
        public ContributorNameType FindContributorNameType(Guid? id, bool load = false) => Query<ContributorNameType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type WHERE id = @id", new { id }).SingleOrDefault();
        public ContributorNameType2 FindContributorNameType2(Guid? id, bool load = false)
        {
            var cnt2 = Query<ContributorNameType2>($"SELECT id AS \"Id\", name AS \"Name\", ordering AS \"Ordering\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contributor_name_types WHERE id = @id", new { id }).SingleOrDefault();
            if (cnt2 == null) return null;
            if (load && cnt2.CreationUserId != null) cnt2.CreationUser = FindUser2(cnt2.CreationUserId);
            if (load && cnt2.LastWriteUserId != null) cnt2.LastWriteUser = FindUser2(cnt2.LastWriteUserId);
            return cnt2;
        }
        public ContributorType FindContributorType(Guid? id, bool load = false) => Query<ContributorType>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type WHERE id = @id", new { id }).SingleOrDefault();
        public ContributorType2 FindContributorType2(Guid? id, bool load = false)
        {
            var ct2 = Query<ContributorType2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contributor_types WHERE id = @id", new { id }).SingleOrDefault();
            if (ct2 == null) return null;
            if (load && ct2.CreationUserId != null) ct2.CreationUser = FindUser2(ct2.CreationUserId);
            if (load && ct2.LastWriteUserId != null) ct2.LastWriteUser = FindUser2(ct2.LastWriteUserId);
            return ct2;
        }
        public Country FindCountry(int? id, bool load = false) => Query<Country>($"SELECT id AS \"Id\", alpha2_code AS \"Alpha2Code\", alpha3_code AS \"Alpha3Code\", name AS \"Name\" FROM uc{(IsMySql ? "_" : ".")}countries WHERE id = @id", new { id }).SingleOrDefault();
        public Currency FindCurrency(string id, bool load = false)
        {
            var c = Query<Currency>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}currencies WHERE id = @id", new { id }).SingleOrDefault();
            if (c == null) return null;
            if (load && c.OrganizationId != null) c.Organization = FindOrganization2(c.OrganizationId);
            return c;
        }
        public CustomField FindCustomField(Guid? id, bool load = false) => Query<CustomField>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields WHERE id = @id", new { id }).SingleOrDefault();
        public CustomField2 FindCustomField2(Guid? id, bool load = false)
        {
            var cf2 = Query<CustomField2>($"SELECT id AS \"Id\", name AS \"Name\", ref_id AS \"RefId\", type AS \"Type\", entity_type AS \"EntityType\", visible AS \"Visible\", required AS \"Required\", is_repeatable AS \"IsRepeatable\", \"order\" AS \"Order\", help_text AS \"HelpText\", checkbox_field_default AS \"CheckboxFieldDefault\", select_field_multi_select AS \"SelectFieldMultiSelect\", select_field_options_sorting_order AS \"SelectFieldOptionsSortingOrder\", text_field_field_format AS \"TextFieldFieldFormat\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}custom_fields WHERE id = @id", new { id }).SingleOrDefault();
            if (cf2 == null) return null;
            if (load && cf2.CreationUserId != null) cf2.CreationUser = FindUser2(cf2.CreationUserId);
            if (load && cf2.LastWriteUserId != null) cf2.LastWriteUser = FindUser2(cf2.LastWriteUserId);
            return cf2;
        }
        public CustomFieldValue FindCustomFieldValue(string id, bool load = false)
        {
            var cfv = Query<CustomFieldValue>($"SELECT id AS \"Id\", custom_field_id AS \"CustomFieldId\", id2 AS \"Id2\", value AS \"Value\", \"default\" AS \"Default\" FROM uc{(IsMySql ? "_" : ".")}custom_field_values WHERE id = @id", new { id }).SingleOrDefault();
            if (cfv == null) return null;
            if (load && cfv.CustomFieldId != null) cfv.CustomField = FindCustomField2(cfv.CustomFieldId);
            return cfv;
        }
        public Department FindDepartment(Guid? id, bool load = false) => Query<Department>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments WHERE id = @id", new { id }).SingleOrDefault();
        public Department2 FindDepartment2(Guid? id, bool load = false)
        {
            var d2 = Query<Department2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", usage_number AS \"UsageNumber\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}departments WHERE id = @id", new { id }).SingleOrDefault();
            if (d2 == null) return null;
            if (load && d2.CreationUserId != null) d2.CreationUser = FindUser2(d2.CreationUserId);
            if (load && d2.LastWriteUserId != null) d2.LastWriteUser = FindUser2(d2.LastWriteUserId);
            return d2;
        }
        public Document FindDocument(Guid? id, bool load = false)
        {
            var d = Query<Document>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\", document_data AS \"DocumentData\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents WHERE id = @id", new { id }).SingleOrDefault();
            if (d == null) return null;
            if (load && d.Invoiceid != null) d.Invoice = FindInvoice(d.Invoiceid);
            return d;
        }
        public Document2 FindDocument2(Guid? id, bool load = false)
        {
            var d2 = Query<Document2>($"SELECT id AS \"Id\", document_metadata_name AS \"DocumentMetadataName\", document_metadata_invoice_id AS \"DocumentMetadataInvoiceId\", document_metadata_url AS \"DocumentMetadataUrl\", document_metadata_metadata_created_date AS \"DocumentMetadataMetadataCreatedDate\", document_metadata_metadata_created_by_user_id AS \"DocumentMetadataMetadataCreatedByUserId\", document_metadata_metadata_created_by_username AS \"DocumentMetadataMetadataCreatedByUsername\", document_metadata_metadata_updated_date AS \"DocumentMetadataMetadataUpdatedDate\", document_metadata_metadata_updated_by_user_id AS \"DocumentMetadataMetadataUpdatedByUserId\", document_metadata_metadata_updated_by_username AS \"DocumentMetadataMetadataUpdatedByUsername\", contents_data AS \"ContentsData\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", invoiceid AS \"Invoiceid\", document_data AS \"DocumentData\" FROM uc{(IsMySql ? "_" : ".")}documents WHERE id = @id", new { id }).SingleOrDefault();
            if (d2 == null) return null;
            if (load && d2.DocumentMetadataInvoiceId != null) d2.DocumentMetadataInvoice = FindInvoice2(d2.DocumentMetadataInvoiceId);
            if (load && d2.DocumentMetadataMetadataCreatedByUserId != null) d2.DocumentMetadataMetadataCreatedByUser = FindUser2(d2.DocumentMetadataMetadataCreatedByUserId);
            if (load && d2.DocumentMetadataMetadataUpdatedByUserId != null) d2.DocumentMetadataMetadataUpdatedByUser = FindUser2(d2.DocumentMetadataMetadataUpdatedByUserId);
            if (load && d2.CreationUserId != null) d2.CreationUser = FindUser2(d2.CreationUserId);
            if (load && d2.LastWriteUserId != null) d2.LastWriteUser = FindUser2(d2.LastWriteUserId);
            return d2;
        }
        public Edition FindEdition(string id, Guid? instanceId, bool load = false)
        {
            var e2 = Query<Edition>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}editions WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (e2 == null) return null;
            if (load && e2.InstanceId != null) e2.Instance = FindInstance2(e2.InstanceId);
            return e2;
        }
        public ElectronicAccess FindElectronicAccess(string id, Guid? instanceId, bool load = false)
        {
            var ea = Query<ElectronicAccess>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}electronic_accesses WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (ea == null) return null;
            if (load && ea.InstanceId != null) ea.Instance = FindInstance2(ea.InstanceId);
            if (load && ea.RelationshipId != null) ea.Relationship = FindElectronicAccessRelationship2(ea.RelationshipId);
            return ea;
        }
        public ElectronicAccessRelationship FindElectronicAccessRelationship(Guid? id, bool load = false) => Query<ElectronicAccessRelationship>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship WHERE id = @id", new { id }).SingleOrDefault();
        public ElectronicAccessRelationship2 FindElectronicAccessRelationship2(Guid? id, bool load = false)
        {
            var ear2 = Query<ElectronicAccessRelationship2>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships WHERE id = @id", new { id }).SingleOrDefault();
            if (ear2 == null) return null;
            if (load && ear2.CreationUserId != null) ear2.CreationUser = FindUser2(ear2.CreationUserId);
            if (load && ear2.LastWriteUserId != null) ear2.LastWriteUser = FindUser2(ear2.LastWriteUserId);
            return ear2;
        }
        public ErrorRecord FindErrorRecord(Guid? id, bool load = false)
        {
            var er = Query<ErrorRecord>($"SELECT id AS \"Id\", content AS \"Content\", description AS \"Description\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb WHERE id = @id", new { id }).SingleOrDefault();
            if (er == null) return null;
            if (load && er.Id != null) er.Record = FindRecord(er.Id);
            return er;
        }
        public ErrorRecord2 FindErrorRecord2(Guid? id, bool load = false)
        {
            var er2 = Query<ErrorRecord2>($"SELECT id AS \"Id\", content AS \"Content\", description AS \"Description\" FROM uc{(IsMySql ? "_" : ".")}error_records WHERE id = @id", new { id }).SingleOrDefault();
            if (er2 == null) return null;
            if (load && er2.Id != null) er2.Record2 = FindRecord2(er2.Id);
            return er2;
        }
        public EventLog FindEventLog(Guid? id, bool load = false) => Query<EventLog>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs WHERE id = @id", new { id }).SingleOrDefault();
        public EventLog2 FindEventLog2(Guid? id, bool load = false)
        {
            var el2 = Query<EventLog2>($"SELECT id AS \"Id\", tenant AS \"Tenant\", user_id AS \"UserId\", ip AS \"Ip\", browser_information AS \"BrowserInformation\", timestamp AS \"Timestamp\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}event_logs WHERE id = @id", new { id }).SingleOrDefault();
            if (el2 == null) return null;
            if (load && el2.UserId != null) el2.User = FindUser2(el2.UserId);
            if (load && el2.CreationUserId != null) el2.CreationUser = FindUser2(el2.CreationUserId);
            if (load && el2.LastWriteUserId != null) el2.LastWriteUser = FindUser2(el2.LastWriteUserId);
            return el2;
        }
        public ExpenseClass FindExpenseClass(Guid? id, bool load = false) => Query<ExpenseClass>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class WHERE id = @id", new { id }).SingleOrDefault();
        public ExpenseClass2 FindExpenseClass2(Guid? id, bool load = false)
        {
            var ec2 = Query<ExpenseClass2>($"SELECT id AS \"Id\", code AS \"Code\", external_account_number_ext AS \"AccountNumberExtension\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}expense_classes WHERE id = @id", new { id }).SingleOrDefault();
            if (ec2 == null) return null;
            if (load && ec2.CreationUserId != null) ec2.CreationUser = FindUser2(ec2.CreationUserId);
            if (load && ec2.LastWriteUserId != null) ec2.LastWriteUser = FindUser2(ec2.LastWriteUserId);
            return ec2;
        }
        public ExportConfigCredential FindExportConfigCredential(Guid? id, bool load = false)
        {
            var ecc = Query<ExportConfigCredential>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", exportconfigid AS \"Exportconfigid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials WHERE id = @id", new { id }).SingleOrDefault();
            if (ecc == null) return null;
            if (load && ecc.Exportconfigid != null) ecc.BatchVoucherExportConfig = FindBatchVoucherExportConfig(ecc.Exportconfigid);
            return ecc;
        }
        public ExportConfigCredential2 FindExportConfigCredential2(Guid? id, bool load = false)
        {
            var ecc2 = Query<ExportConfigCredential2>($"SELECT id AS \"Id\", username AS \"Username\", password AS \"Password\", export_config_id AS \"ExportConfigId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}export_config_credentials WHERE id = @id", new { id }).SingleOrDefault();
            if (ecc2 == null) return null;
            if (load && ecc2.ExportConfigId != null) ecc2.ExportConfig = FindBatchVoucherExportConfig2(ecc2.ExportConfigId);
            if (load && ecc2.CreationUserId != null) ecc2.CreationUser = FindUser2(ecc2.CreationUserId);
            if (load && ecc2.LastWriteUserId != null) ecc2.LastWriteUser = FindUser2(ecc2.LastWriteUserId);
            return ecc2;
        }
        public Extent FindExtent(string id, Guid? holdingId, bool load = false)
        {
            var e2 = Query<Extent>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Content\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}extents WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (e2 == null) return null;
            if (load && e2.HoldingId != null) e2.Holding = FindHolding2(e2.HoldingId);
            return e2;
        }
        public Fee FindFee(Guid? id, bool load = false) => Query<Fee>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts WHERE id = @id", new { id }).SingleOrDefault();
        public Fee2 FindFee2(Guid? id, bool load = false)
        {
            var f2 = Query<Fee2>($"SELECT id AS \"Id\", amount AS \"Amount\", remaining AS \"RemainingAmount\", date_created AS \"DateCreated\", date_updated AS \"DateUpdated\", status_name AS \"StatusName\", payment_status_name AS \"PaymentStatusName\", fee_fine_type AS \"FeeFineType\", fee_fine_owner AS \"FeeFineOwner\", title AS \"Title\", call_number AS \"CallNumber\", barcode AS \"Barcode\", material_type AS \"MaterialType\", item_status_name AS \"ItemStatusName\", location AS \"Location\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", due_date AS \"DueTime\", returned_date AS \"ReturnedTime\", loan_id AS \"LoanId\", user_id AS \"UserId\", item_id AS \"ItemId\", material_type_id AS \"MaterialTypeId\", fee_type_id AS \"FeeTypeId\", owner_id AS \"OwnerId\", holding_id AS \"HoldingId\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fees WHERE id = @id", new { id }).SingleOrDefault();
            if (f2 == null) return null;
            if (load && f2.CreationUserId != null) f2.CreationUser = FindUser2(f2.CreationUserId);
            if (load && f2.LastWriteUserId != null) f2.LastWriteUser = FindUser2(f2.LastWriteUserId);
            if (load && f2.LoanId != null) f2.Loan = FindLoan2(f2.LoanId);
            if (load && f2.UserId != null) f2.User = FindUser2(f2.UserId);
            if (load && f2.ItemId != null) f2.Item = FindItem2(f2.ItemId);
            if (load && f2.MaterialTypeId != null) f2.MaterialType1 = FindMaterialType2(f2.MaterialTypeId);
            if (load && f2.FeeTypeId != null) f2.FeeType = FindFeeType2(f2.FeeTypeId);
            if (load && f2.OwnerId != null) f2.Owner = FindOwner2(f2.OwnerId);
            if (load && f2.HoldingId != null) f2.Holding = FindHolding2(f2.HoldingId);
            if (load && f2.InstanceId != null) f2.Instance = FindInstance2(f2.InstanceId);
            return f2;
        }
        public FeeType FindFeeType(Guid? id, bool load = false)
        {
            var ft = Query<FeeType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ownerid AS \"Ownerid\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines WHERE id = @id", new { id }).SingleOrDefault();
            if (ft == null) return null;
            if (load && ft.Ownerid != null) ft.Owner = FindOwner(ft.Ownerid);
            return ft;
        }
        public FeeType2 FindFeeType2(Guid? id, bool load = false)
        {
            var ft2 = Query<FeeType2>($"SELECT id AS \"Id\", automatic AS \"Automatic\", fee_fine_type AS \"Name\", default_amount AS \"DefaultAmount\", charge_notice_id AS \"ChargeNoticeId\", action_notice_id AS \"ActionNoticeId\", owner_id AS \"OwnerId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fee_types WHERE id = @id", new { id }).SingleOrDefault();
            if (ft2 == null) return null;
            if (load && ft2.ChargeNoticeId != null) ft2.ChargeNotice = FindTemplate2(ft2.ChargeNoticeId);
            if (load && ft2.ActionNoticeId != null) ft2.ActionNotice = FindTemplate2(ft2.ActionNoticeId);
            if (load && ft2.OwnerId != null) ft2.Owner = FindOwner2(ft2.OwnerId);
            if (load && ft2.CreationUserId != null) ft2.CreationUser = FindUser2(ft2.CreationUserId);
            if (load && ft2.LastWriteUserId != null) ft2.LastWriteUser = FindUser2(ft2.LastWriteUserId);
            return ft2;
        }
        public FinanceGroup FindFinanceGroup(Guid? id, bool load = false) => Query<FinanceGroup>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id }).SingleOrDefault();
        public FinanceGroup2 FindFinanceGroup2(Guid? id, bool load = false)
        {
            var fg2 = Query<FinanceGroup2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", name AS \"Name\", status AS \"Status\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}finance_groups WHERE id = @id", new { id }).SingleOrDefault();
            if (fg2 == null) return null;
            if (load && fg2.CreationUserId != null) fg2.CreationUser = FindUser2(fg2.CreationUserId);
            if (load && fg2.LastWriteUserId != null) fg2.LastWriteUser = FindUser2(fg2.LastWriteUserId);
            return fg2;
        }
        public FinanceGroupAcquisitionsUnit FindFinanceGroupAcquisitionsUnit(string id, bool load = false)
        {
            var fgau = Query<FinanceGroupAcquisitionsUnit>($"SELECT id AS \"Id\", finance_group_id AS \"FinanceGroupId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (fgau == null) return null;
            if (load && fgau.FinanceGroupId != null) fgau.FinanceGroup = FindFinanceGroup2(fgau.FinanceGroupId);
            if (load && fgau.AcquisitionsUnitId != null) fgau.AcquisitionsUnit = FindAcquisitionsUnit2(fgau.AcquisitionsUnitId);
            return fgau;
        }
        public FiscalYear FindFiscalYear(Guid? id, bool load = false) => Query<FiscalYear>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year WHERE id = @id", new { id }).SingleOrDefault();
        public FiscalYear2 FindFiscalYear2(Guid? id, bool load = false)
        {
            var fy2 = Query<FiscalYear2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", currency AS \"Currency\", description AS \"Description\", period_start AS \"StartDate\", period_end AS \"EndDate\", series AS \"Series\", financial_summary_allocated AS \"FinancialSummaryAllocated\", financial_summary_available AS \"FinancialSummaryAvailable\", financial_summary_unavailable AS \"FinancialSummaryUnavailable\", financial_summary_initial_allocation AS \"FinancialSummaryInitialAllocation\", financial_summary_allocation_to AS \"FinancialSummaryAllocationTo\", financial_summary_allocation_from AS \"FinancialSummaryAllocationFrom\", financial_summary_total_funding AS \"FinancialSummaryTotalFunding\", financial_summary_cash_balance AS \"FinancialSummaryCashBalance\", financial_summary_awaiting_payment AS \"FinancialSummaryAwaitingPayment\", financial_summary_encumbered AS \"FinancialSummaryEncumbered\", financial_summary_expenditures AS \"FinancialSummaryExpenditures\", financial_summary_over_encumbrance AS \"FinancialSummaryOverEncumbrance\", financial_summary_over_expended AS \"FinancialSummaryOverExpended\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fiscal_years WHERE id = @id", new { id }).SingleOrDefault();
            if (fy2 == null) return null;
            if (load && fy2.CreationUserId != null) fy2.CreationUser = FindUser2(fy2.CreationUserId);
            if (load && fy2.LastWriteUserId != null) fy2.LastWriteUser = FindUser2(fy2.LastWriteUserId);
            return fy2;
        }
        public FiscalYearAcquisitionsUnit FindFiscalYearAcquisitionsUnit(string id, bool load = false)
        {
            var fyau = Query<FiscalYearAcquisitionsUnit>($"SELECT id AS \"Id\", fiscal_year_id AS \"FiscalYearId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (fyau == null) return null;
            if (load && fyau.FiscalYearId != null) fyau.FiscalYear = FindFiscalYear2(fyau.FiscalYearId);
            if (load && fyau.AcquisitionsUnitId != null) fyau.AcquisitionsUnit = FindAcquisitionsUnit2(fyau.AcquisitionsUnitId);
            return fyau;
        }
        public FixedDueDateSchedule FindFixedDueDateSchedule(Guid? id, bool load = false) => Query<FixedDueDateSchedule>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule WHERE id = @id", new { id }).SingleOrDefault();
        public FixedDueDateSchedule2 FindFixedDueDateSchedule2(Guid? id, bool load = false)
        {
            var fdds2 = Query<FixedDueDateSchedule2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules WHERE id = @id", new { id }).SingleOrDefault();
            if (fdds2 == null) return null;
            if (load && fdds2.CreationUserId != null) fdds2.CreationUser = FindUser2(fdds2.CreationUserId);
            if (load && fdds2.LastWriteUserId != null) fdds2.LastWriteUser = FindUser2(fdds2.LastWriteUserId);
            return fdds2;
        }
        public FixedDueDateScheduleSchedule FindFixedDueDateScheduleSchedule(string id, bool load = false)
        {
            var fddss = Query<FixedDueDateScheduleSchedule>($"SELECT id AS \"Id\", fixed_due_date_schedule_id AS \"FixedDueDateScheduleId\", from AS \"From\", \"to\" AS \"To\", due AS \"Due\" FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules WHERE id = @id", new { id }).SingleOrDefault();
            if (fddss == null) return null;
            if (load && fddss.FixedDueDateScheduleId != null) fddss.FixedDueDateSchedule = FindFixedDueDateSchedule2(fddss.FixedDueDateScheduleId);
            return fddss;
        }
        public Format FindFormat(Guid? id, bool load = false)
        {
            var f = Query<Format>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}formats WHERE id = @id", new { id }).SingleOrDefault();
            if (f == null) return null;
            if (load && f.CreationUserId != null) f.CreationUser = FindUser2(f.CreationUserId);
            if (load && f.LastWriteUserId != null) f.LastWriteUser = FindUser2(f.LastWriteUserId);
            return f;
        }
        public Fund FindFund(Guid? id, bool load = false)
        {
            var f = Query<Fund>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerid AS \"LedgerId\", fundtypeid AS \"Fundtypeid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund WHERE id = @id", new { id }).SingleOrDefault();
            if (f == null) return null;
            if (load && f.LedgerId != null) f.Ledger = FindLedger(f.LedgerId);
            if (load && f.Fundtypeid != null) f.FundType = FindFundType(f.Fundtypeid);
            return f;
        }
        public Fund2 FindFund2(Guid? id, bool load = false)
        {
            var f2 = Query<Fund2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", external_account_no AS \"AccountNumber\", fund_status AS \"FundStatus\", fund_type_id AS \"FundTypeId\", ledger_id AS \"LedgerId\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}funds WHERE id = @id", new { id }).SingleOrDefault();
            if (f2 == null) return null;
            if (load && f2.FundTypeId != null) f2.FundType = FindFundType2(f2.FundTypeId);
            if (load && f2.LedgerId != null) f2.Ledger = FindLedger2(f2.LedgerId);
            if (load && f2.CreationUserId != null) f2.CreationUser = FindUser2(f2.CreationUserId);
            if (load && f2.LastWriteUserId != null) f2.LastWriteUser = FindUser2(f2.LastWriteUserId);
            return f2;
        }
        public FundAcquisitionsUnit FindFundAcquisitionsUnit(string id, bool load = false)
        {
            var fau = Query<FundAcquisitionsUnit>($"SELECT id AS \"Id\", fund_id AS \"FundId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (fau == null) return null;
            if (load && fau.FundId != null) fau.Fund = FindFund2(fau.FundId);
            if (load && fau.AcquisitionsUnitId != null) fau.AcquisitionsUnit = FindAcquisitionsUnit2(fau.AcquisitionsUnitId);
            return fau;
        }
        public FundTag FindFundTag(string id, bool load = false)
        {
            var ft = Query<FundTag>($"SELECT id AS \"Id\", fund_id AS \"FundId\", tag_id AS \"TagId\" FROM uc{(IsMySql ? "_" : ".")}fund_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (ft == null) return null;
            if (load && ft.FundId != null) ft.Fund = FindFund2(ft.FundId);
            if (load && ft.TagId != null) ft.Tag = FindTag2(ft.TagId);
            return ft;
        }
        public FundType FindFundType(Guid? id, bool load = false) => Query<FundType>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type WHERE id = @id", new { id }).SingleOrDefault();
        public FundType2 FindFundType2(Guid? id, bool load = false) => Query<FundType2>($"SELECT id AS \"Id\", name AS \"Name\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fund_types WHERE id = @id", new { id }).SingleOrDefault();
        public Group FindGroup(Guid? id, bool load = false) => Query<Group>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id }).SingleOrDefault();
        public Group2 FindGroup2(Guid? id, bool load = false)
        {
            var g2 = Query<Group2>($"SELECT id AS \"Id\", \"group\" AS \"Name\", \"desc\" AS \"Description\", expiration_offset_in_days AS \"ExpirationOffsetInDays\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id }).SingleOrDefault();
            if (g2 == null) return null;
            if (load && g2.CreationUserId != null) g2.CreationUser = FindUser2(g2.CreationUserId);
            if (load && g2.LastWriteUserId != null) g2.LastWriteUser = FindUser2(g2.LastWriteUserId);
            return g2;
        }
        public Holding FindHolding(Guid? id, bool load = false)
        {
            var h = Query<Holding>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", instanceid AS \"Instanceid\", permanentlocationid AS \"Permanentlocationid\", temporarylocationid AS \"Temporarylocationid\", effectivelocationid AS \"Effectivelocationid\", holdingstypeid AS \"Holdingstypeid\", callnumbertypeid AS \"Callnumbertypeid\", illpolicyid AS \"Illpolicyid\", sourceid AS \"Sourceid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record WHERE id = @id", new { id }).SingleOrDefault();
            if (h == null) return null;
            if (load && h.Instanceid != null) h.Instance = FindInstance(h.Instanceid);
            if (load && h.Permanentlocationid != null) h.Location1 = FindLocation(h.Permanentlocationid);
            if (load && h.Temporarylocationid != null) h.Location2 = FindLocation(h.Temporarylocationid);
            if (load && h.Effectivelocationid != null) h.Location = FindLocation(h.Effectivelocationid);
            if (load && h.Holdingstypeid != null) h.HoldingType = FindHoldingType(h.Holdingstypeid);
            if (load && h.Callnumbertypeid != null) h.CallNumberType = FindCallNumberType(h.Callnumbertypeid);
            if (load && h.Illpolicyid != null) h.IllPolicy = FindIllPolicy(h.Illpolicyid);
            if (load && h.Sourceid != null) h.Source = FindSource(h.Sourceid);
            return h;
        }
        public Holding2 FindHolding2(Guid? id, bool load = false)
        {
            var h2 = Query<Holding2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", holding_type_id AS \"HoldingTypeId\", instance_id AS \"InstanceId\", permanent_location_id AS \"LocationId\", temporary_location_id AS \"TemporaryLocationId\", effective_location_id AS \"EffectiveLocationId\", call_number_type_id AS \"CallNumberTypeId\", call_number_prefix AS \"CallNumberPrefix\", call_number AS \"CallNumber\", call_number_suffix AS \"CallNumberSuffix\", shelving_title AS \"ShelvingTitle\", acquisition_format AS \"AcquisitionFormat\", acquisition_method AS \"AcquisitionMethod\", receipt_status AS \"ReceiptStatus\", ill_policy_id AS \"IllPolicyId\", retention_policy AS \"RetentionPolicy\", digitization_policy AS \"DigitizationPolicy\", copy_number AS \"CopyNumber\", number_of_items AS \"ItemCount\", receiving_history_display_type AS \"ReceivingHistoryDisplayType\", discovery_suppress AS \"DiscoverySuppress\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", source_id AS \"SourceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holdings WHERE id = @id", new { id }).SingleOrDefault();
            if (h2 == null) return null;
            if (load && h2.HoldingTypeId != null) h2.HoldingType = FindHoldingType2(h2.HoldingTypeId);
            if (load && h2.InstanceId != null) h2.Instance = FindInstance2(h2.InstanceId);
            if (load && h2.LocationId != null) h2.Location = FindLocation2(h2.LocationId);
            if (load && h2.TemporaryLocationId != null) h2.TemporaryLocation = FindLocation2(h2.TemporaryLocationId);
            if (load && h2.EffectiveLocationId != null) h2.EffectiveLocation = FindLocation2(h2.EffectiveLocationId);
            if (load && h2.CallNumberTypeId != null) h2.CallNumberType = FindCallNumberType2(h2.CallNumberTypeId);
            if (load && h2.IllPolicyId != null) h2.IllPolicy = FindIllPolicy2(h2.IllPolicyId);
            if (load && h2.CreationUserId != null) h2.CreationUser = FindUser2(h2.CreationUserId);
            if (load && h2.LastWriteUserId != null) h2.LastWriteUser = FindUser2(h2.LastWriteUserId);
            if (load && h2.SourceId != null) h2.Source = FindSource2(h2.SourceId);
            return h2;
        }
        public HoldingDonor FindHoldingDonor(string id, Guid? holdingId, bool load = false)
        {
            var hd = Query<HoldingDonor>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", donor_code AS \"DonorCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}holding_donors WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (hd == null) return null;
            if (load && hd.HoldingId != null) hd.Holding = FindHolding2(hd.HoldingId);
            return hd;
        }
        public HoldingElectronicAccess FindHoldingElectronicAccess(string id, Guid? holdingId, bool load = false)
        {
            var hea = Query<HoldingElectronicAccess>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (hea == null) return null;
            if (load && hea.HoldingId != null) hea.Holding = FindHolding2(hea.HoldingId);
            if (load && hea.RelationshipId != null) hea.Relationship = FindElectronicAccessRelationship2(hea.RelationshipId);
            return hea;
        }
        public HoldingEntry FindHoldingEntry(string id, Guid? holdingId, bool load = false)
        {
            var he = Query<HoldingEntry>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", public_display AS \"PublicDisplay\", enumeration AS \"Enumeration\", chronology AS \"Chronology\" FROM uc{(IsMySql ? "_" : ".")}holding_entries WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (he == null) return null;
            if (load && he.HoldingId != null) he.Holding = FindHolding2(he.HoldingId);
            return he;
        }
        public HoldingFormerId FindHoldingFormerId(string id, Guid? holdingId, bool load = false)
        {
            var hfi = Query<HoldingFormerId>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_former_ids WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (hfi == null) return null;
            if (load && hfi.HoldingId != null) hfi.Holding = FindHolding2(hfi.HoldingId);
            return hfi;
        }
        public HoldingNote FindHoldingNote(string id, Guid? holdingId, bool load = false)
        {
            var hn = Query<HoldingNote>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", holding_note_type_id AS \"HoldingNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}holding_notes WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (hn == null) return null;
            if (load && hn.HoldingId != null) hn.Holding = FindHolding2(hn.HoldingId);
            if (load && hn.HoldingNoteTypeId != null) hn.HoldingNoteType = FindHoldingNoteType2(hn.HoldingNoteTypeId);
            return hn;
        }
        public HoldingNoteType FindHoldingNoteType(Guid? id, bool load = false) => Query<HoldingNoteType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type WHERE id = @id", new { id }).SingleOrDefault();
        public HoldingNoteType2 FindHoldingNoteType2(Guid? id, bool load = false)
        {
            var hnt2 = Query<HoldingNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_note_types WHERE id = @id", new { id }).SingleOrDefault();
            if (hnt2 == null) return null;
            if (load && hnt2.CreationUserId != null) hnt2.CreationUser = FindUser2(hnt2.CreationUserId);
            if (load && hnt2.LastWriteUserId != null) hnt2.LastWriteUser = FindUser2(hnt2.LastWriteUserId);
            return hnt2;
        }
        public HoldingStatisticalCode FindHoldingStatisticalCode(string id, Guid? holdingId, bool load = false)
        {
            var hsc = Query<HoldingStatisticalCode>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (hsc == null) return null;
            if (load && hsc.HoldingId != null) hsc.Holding = FindHolding2(hsc.HoldingId);
            if (load && hsc.StatisticalCodeId != null) hsc.StatisticalCode = FindStatisticalCode2(hsc.StatisticalCodeId);
            return hsc;
        }
        public HoldingTag FindHoldingTag(string id, Guid? holdingId, bool load = false)
        {
            var ht = Query<HoldingTag>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_tags WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (ht == null) return null;
            if (load && ht.HoldingId != null) ht.Holding = FindHolding2(ht.HoldingId);
            return ht;
        }
        public HoldingType FindHoldingType(Guid? id, bool load = false) => Query<HoldingType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type WHERE id = @id", new { id }).SingleOrDefault();
        public HoldingType2 FindHoldingType2(Guid? id, bool load = false)
        {
            var ht2 = Query<HoldingType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_types WHERE id = @id", new { id }).SingleOrDefault();
            if (ht2 == null) return null;
            if (load && ht2.CreationUserId != null) ht2.CreationUser = FindUser2(ht2.CreationUserId);
            if (load && ht2.LastWriteUserId != null) ht2.LastWriteUser = FindUser2(ht2.LastWriteUserId);
            return ht2;
        }
        public HridSetting FindHridSetting(Guid? id, bool load = false) => Query<HridSetting>($"SELECT id AS \"Id\", jsonb AS \"Content\", lock AS \"Lock\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings WHERE id = @id", new { id }).SingleOrDefault();
        public HridSetting2 FindHridSetting2(Guid? id, bool load = false) => Query<HridSetting2>($"SELECT id AS \"Id\", instances_prefix AS \"InstancesPrefix\", instances_start_number AS \"InstancesStartNumber\", holdings_prefix AS \"HoldingsPrefix\", holdings_start_number AS \"HoldingsStartNumber\", items_prefix AS \"ItemsPrefix\", items_start_number AS \"ItemsStartNumber\", common_retain_leading_zeroes AS \"ZeroPad\", content AS \"Content\", lock AS \"Lock\" FROM uc{(IsMySql ? "_" : ".")}hrid_settings WHERE id = @id", new { id }).SingleOrDefault();
        public Identifier FindIdentifier(string id, Guid? instanceId, bool load = false)
        {
            var i = Query<Identifier>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", value AS \"Content\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}identifiers WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.InstanceId != null) i.Instance = FindInstance2(i.InstanceId);
            if (load && i.IdentifierTypeId != null) i.IdentifierType = FindIdType2(i.IdentifierTypeId);
            return i;
        }
        public IdType FindIdType(Guid? id, bool load = false) => Query<IdType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type WHERE id = @id", new { id }).SingleOrDefault();
        public IdType2 FindIdType2(Guid? id, bool load = false)
        {
            var it2 = Query<IdType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}id_types WHERE id = @id", new { id }).SingleOrDefault();
            if (it2 == null) return null;
            if (load && it2.CreationUserId != null) it2.CreationUser = FindUser2(it2.CreationUserId);
            if (load && it2.LastWriteUserId != null) it2.LastWriteUser = FindUser2(it2.LastWriteUserId);
            return it2;
        }
        public IllPolicy FindIllPolicy(Guid? id, bool load = false) => Query<IllPolicy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy WHERE id = @id", new { id }).SingleOrDefault();
        public IllPolicy2 FindIllPolicy2(Guid? id, bool load = false)
        {
            var ip2 = Query<IllPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ill_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (ip2 == null) return null;
            if (load && ip2.CreationUserId != null) ip2.CreationUser = FindUser2(ip2.CreationUserId);
            if (load && ip2.LastWriteUserId != null) ip2.LastWriteUser = FindUser2(ip2.LastWriteUserId);
            return ip2;
        }
        public IndexStatement FindIndexStatement(string id, Guid? holdingId, bool load = false)
        {
            var @is = Query<IndexStatement>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Statement\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}index_statements WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (@is == null) return null;
            if (load && @is.HoldingId != null) @is.Holding = FindHolding2(@is.HoldingId);
            return @is;
        }
        public Instance FindInstance(Guid? id, bool load = false)
        {
            var i = Query<Instance>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", instancestatusid AS \"Instancestatusid\", modeofissuanceid AS \"Modeofissuanceid\", instancetypeid AS \"Instancetypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance WHERE id = @id", new { id }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.Instancestatusid != null) i.InstanceStatus = FindInstanceStatus(i.Instancestatusid);
            if (load && i.Modeofissuanceid != null) i.ModeOfIssuance = FindModeOfIssuance(i.Modeofissuanceid);
            if (load && i.Instancetypeid != null) i.InstanceType = FindInstanceType(i.Instancetypeid);
            return i;
        }
        public Instance2 FindInstance2(Guid? id, bool load = false)
        {
            var i2 = Query<Instance2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", match_key AS \"MatchKey\", source AS \"Source\", title AS \"Title\", author AS \"Author\", index_title AS \"IndexTitle\", publication_period_start AS \"PublicationStartYear\", publication_period_end AS \"PublicationEndYear\", instance_type_id AS \"InstanceTypeId\", mode_of_issuance_id AS \"IssuanceModeId\", cataloged_date AS \"CatalogedDate\", previously_held AS \"PreviouslyHeld\", staff_suppress AS \"StaffSuppress\", discovery_suppress AS \"DiscoverySuppress\", source_record_format AS \"SourceRecordFormat\", status_id AS \"StatusId\", status_updated_date AS \"StatusLastWriteTime\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instances WHERE id = @id", new { id }).SingleOrDefault();
            if (i2 == null) return null;
            if (load && i2.InstanceTypeId != null) i2.InstanceType = FindInstanceType2(i2.InstanceTypeId);
            if (load && i2.IssuanceModeId != null) i2.IssuanceMode = FindIssuanceMode(i2.IssuanceModeId);
            if (load && i2.StatusId != null) i2.Status = FindStatus(i2.StatusId);
            if (load && i2.CreationUserId != null) i2.CreationUser = FindUser2(i2.CreationUserId);
            if (load && i2.LastWriteUserId != null) i2.LastWriteUser = FindUser2(i2.LastWriteUserId);
            return i2;
        }
        public InstanceFormat FindInstanceFormat(Guid? id, bool load = false) => Query<InstanceFormat>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format WHERE id = @id", new { id }).SingleOrDefault();
        public InstanceFormat2 FindInstanceFormat2(string id, Guid? instanceId, bool load = false)
        {
            var if2 = Query<InstanceFormat2>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", format_id AS \"FormatId\" FROM uc{(IsMySql ? "_" : ".")}instance_formats WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (if2 == null) return null;
            if (load && if2.InstanceId != null) if2.Instance = FindInstance2(if2.InstanceId);
            if (load && if2.FormatId != null) if2.Format = FindFormat(if2.FormatId);
            return if2;
        }
        public InstanceNatureOfContentTerm FindInstanceNatureOfContentTerm(string id, Guid? instanceId, bool load = false)
        {
            var inoct = Query<InstanceNatureOfContentTerm>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", nature_of_content_term_id AS \"NatureOfContentTermId\" FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (inoct == null) return null;
            if (load && inoct.InstanceId != null) inoct.Instance = FindInstance2(inoct.InstanceId);
            if (load && inoct.NatureOfContentTermId != null) inoct.NatureOfContentTerm = FindNatureOfContentTerm2(inoct.NatureOfContentTermId);
            return inoct;
        }
        public InstanceNoteType FindInstanceNoteType(Guid? id, bool load = false) => Query<InstanceNoteType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type WHERE id = @id", new { id }).SingleOrDefault();
        public InstanceNoteType2 FindInstanceNoteType2(Guid? id, bool load = false)
        {
            var int2 = Query<InstanceNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_note_types WHERE id = @id", new { id }).SingleOrDefault();
            if (int2 == null) return null;
            if (load && int2.CreationUserId != null) int2.CreationUser = FindUser2(int2.CreationUserId);
            if (load && int2.LastWriteUserId != null) int2.LastWriteUser = FindUser2(int2.LastWriteUserId);
            return int2;
        }
        public InstanceRelationship FindInstanceRelationship(Guid? id, bool load = false)
        {
            var ir = Query<InstanceRelationship>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", superinstanceid AS \"Superinstanceid\", subinstanceid AS \"Subinstanceid\", instancerelationshiptypeid AS \"Instancerelationshiptypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship WHERE id = @id", new { id }).SingleOrDefault();
            if (ir == null) return null;
            if (load && ir.Superinstanceid != null) ir.Instance1 = FindInstance(ir.Superinstanceid);
            if (load && ir.Subinstanceid != null) ir.Instance = FindInstance(ir.Subinstanceid);
            if (load && ir.Instancerelationshiptypeid != null) ir.InstanceRelationshipType = FindInstanceRelationshipType(ir.Instancerelationshiptypeid);
            return ir;
        }
        public InstanceRelationshipType FindInstanceRelationshipType(Guid? id, bool load = false) => Query<InstanceRelationshipType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type WHERE id = @id", new { id }).SingleOrDefault();
        public InstanceSourceMarc FindInstanceSourceMarc(Guid? id, bool load = false)
        {
            var ism = Query<InstanceSourceMarc>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc WHERE id = @id", new { id }).SingleOrDefault();
            if (ism == null) return null;
            if (load && ism.Id != null) ism.Instance = FindInstance(ism.Id);
            if (load && ism.Id != null) ism.Instance1 = FindInstance(ism.Id);
            return ism;
        }
        public InstanceStatisticalCode FindInstanceStatisticalCode(string id, Guid? instanceId, bool load = false)
        {
            var isc = Query<InstanceStatisticalCode>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (isc == null) return null;
            if (load && isc.InstanceId != null) isc.Instance = FindInstance2(isc.InstanceId);
            if (load && isc.StatisticalCodeId != null) isc.StatisticalCode = FindStatisticalCode2(isc.StatisticalCodeId);
            return isc;
        }
        public InstanceStatus FindInstanceStatus(Guid? id, bool load = false) => Query<InstanceStatus>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status WHERE id = @id", new { id }).SingleOrDefault();
        public InstanceTag FindInstanceTag(string id, Guid? instanceId, bool load = false)
        {
            var it = Query<InstanceTag>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_tags WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (it == null) return null;
            if (load && it.InstanceId != null) it.Instance = FindInstance2(it.InstanceId);
            return it;
        }
        public InstanceType FindInstanceType(Guid? id, bool load = false) => Query<InstanceType>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type WHERE id = @id", new { id }).SingleOrDefault();
        public InstanceType2 FindInstanceType2(Guid? id, bool load = false)
        {
            var it2 = Query<InstanceType2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_types WHERE id = @id", new { id }).SingleOrDefault();
            if (it2 == null) return null;
            if (load && it2.CreationUserId != null) it2.CreationUser = FindUser2(it2.CreationUserId);
            if (load && it2.LastWriteUserId != null) it2.LastWriteUser = FindUser2(it2.LastWriteUserId);
            return it2;
        }
        public Institution FindInstitution(Guid? id, bool load = false) => Query<Institution>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution WHERE id = @id", new { id }).SingleOrDefault();
        public Institution2 FindInstitution2(Guid? id, bool load = false)
        {
            var i2 = Query<Institution2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}institutions WHERE id = @id", new { id }).SingleOrDefault();
            if (i2 == null) return null;
            if (load && i2.CreationUserId != null) i2.CreationUser = FindUser2(i2.CreationUserId);
            if (load && i2.LastWriteUserId != null) i2.LastWriteUser = FindUser2(i2.LastWriteUserId);
            return i2;
        }
        public Interface FindInterface(Guid? id, bool load = false) => Query<Interface>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces WHERE id = @id", new { id }).SingleOrDefault();
        public Interface2 FindInterface2(Guid? id, bool load = false)
        {
            var i2 = Query<Interface2>($"SELECT id AS \"Id\", name AS \"Name\", uri AS \"Uri\", notes AS \"Notes\", available AS \"Available\", delivery_method AS \"DeliveryMethod\", statistics_format AS \"StatisticsFormat\", locally_stored AS \"LocallyStored\", online_location AS \"OnlineLocation\", statistics_notes AS \"StatisticsNotes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interfaces WHERE id = @id", new { id }).SingleOrDefault();
            if (i2 == null) return null;
            if (load && i2.CreationUserId != null) i2.CreationUser = FindUser2(i2.CreationUserId);
            if (load && i2.LastWriteUserId != null) i2.LastWriteUser = FindUser2(i2.LastWriteUserId);
            return i2;
        }
        public InterfaceCredential FindInterfaceCredential(Guid? id, bool load = false)
        {
            var ic = Query<InterfaceCredential>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", interfaceid AS \"Interfaceid\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials WHERE id = @id", new { id }).SingleOrDefault();
            if (ic == null) return null;
            if (load && ic.Interfaceid != null) ic.Interface = FindInterface(ic.Interfaceid);
            return ic;
        }
        public InterfaceCredential2 FindInterfaceCredential2(Guid? id, bool load = false)
        {
            var ic2 = Query<InterfaceCredential2>($"SELECT id AS \"Id\", username AS \"Username\", password AS \"Password\", interface_id AS \"InterfaceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interface_credentials WHERE id = @id", new { id }).SingleOrDefault();
            if (ic2 == null) return null;
            if (load && ic2.InterfaceId != null) ic2.Interface = FindInterface2(ic2.InterfaceId);
            return ic2;
        }
        public InterfaceType FindInterfaceType(string id, bool load = false)
        {
            var it = Query<InterfaceType>($"SELECT id AS \"Id\", interface_id AS \"InterfaceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interface_type WHERE id = @id", new { id }).SingleOrDefault();
            if (it == null) return null;
            if (load && it.InterfaceId != null) it.Interface = FindInterface2(it.InterfaceId);
            return it;
        }
        public Invoice FindInvoice(Guid? id, bool load = false)
        {
            var i = Query<Invoice>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices WHERE id = @id", new { id }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.Batchgroupid != null) i.BatchGroup = FindBatchGroup(i.Batchgroupid);
            return i;
        }
        public Invoice2 FindInvoice2(Guid? id, bool load = false)
        {
            var i2 = Query<Invoice2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", adjustments_total AS \"AdjustmentsTotal\", approved_by_id AS \"ApprovedById\", approval_date AS \"ApprovalDate\", batch_group_id AS \"BatchGroupId\", bill_to_id AS \"BillToId\", chk_subscription_overlap AS \"CheckSubscriptionOverlap\", cancellation_note AS \"CancellationNote\", currency AS \"Currency\", enclosure_needed AS \"Enclosure\", exchange_rate AS \"ExchangeRate\", export_to_accounting AS \"ExportToAccounting\", folio_invoice_no AS \"Number\", invoice_date AS \"InvoiceDate\", lock_total AS \"LockTotal\", note AS \"Note\", payment_due AS \"PaymentDueDate\", payment_date AS \"PaymentDate\", payment_terms AS \"PaymentTerms\", payment_method AS \"PaymentMethod\", status AS \"Status\", source AS \"Source\", sub_total AS \"SubTotal\", total AS \"Total\", vendor_invoice_no AS \"VendorInvoiceNumber\", disbursement_number AS \"DisbursementNumber\", voucher_number AS \"VoucherNumber\", payment_id AS \"PaymentId\", disbursement_date AS \"DisbursementDate\", vendor_id AS \"VendorId\", account_no AS \"AccountNumber\", manual_payment AS \"ManualPayment\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoices WHERE id = @id", new { id }).SingleOrDefault();
            if (i2 == null) return null;
            if (load && i2.ApprovedById != null) i2.ApprovedBy = FindUser2(i2.ApprovedById);
            if (load && i2.BatchGroupId != null) i2.BatchGroup = FindBatchGroup2(i2.BatchGroupId);
            if (load && i2.BillToId != null) i2.BillTo = FindConfiguration2(i2.BillToId);
            if (load && i2.PaymentId != null) i2.Payment = FindTransaction2(i2.PaymentId);
            if (load && i2.VendorId != null) i2.Vendor = FindOrganization2(i2.VendorId);
            if (load && i2.CreationUserId != null) i2.CreationUser = FindUser2(i2.CreationUserId);
            if (load && i2.LastWriteUserId != null) i2.LastWriteUser = FindUser2(i2.LastWriteUserId);
            return i2;
        }
        public InvoiceAcquisitionsUnit FindInvoiceAcquisitionsUnit(string id, bool load = false)
        {
            var iau = Query<InvoiceAcquisitionsUnit>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (iau == null) return null;
            if (load && iau.InvoiceId != null) iau.Invoice = FindInvoice2(iau.InvoiceId);
            if (load && iau.AcquisitionsUnitId != null) iau.AcquisitionsUnit = FindAcquisitionsUnit2(iau.AcquisitionsUnitId);
            return iau;
        }
        public InvoiceAdjustment FindInvoiceAdjustment(string id, bool load = false)
        {
            var ia = Query<InvoiceAdjustment>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", id2 AS \"Id2\", adjustment_id AS \"AdjustmentId\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", prorate AS \"Prorate\", relation_to_total AS \"RelationToTotal\", type AS \"Type\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments WHERE id = @id", new { id }).SingleOrDefault();
            if (ia == null) return null;
            if (load && ia.InvoiceId != null) ia.Invoice = FindInvoice2(ia.InvoiceId);
            return ia;
        }
        public InvoiceAdjustmentFund FindInvoiceAdjustmentFund(string id, bool load = false)
        {
            var iaf = Query<InvoiceAdjustmentFund>($"SELECT id AS \"Id\", invoice_adjustment_id AS \"InvoiceAdjustmentId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions WHERE id = @id", new { id }).SingleOrDefault();
            if (iaf == null) return null;
            if (load && iaf.EncumbranceId != null) iaf.Encumbrance = FindTransaction2(iaf.EncumbranceId);
            if (load && iaf.FundId != null) iaf.Fund = FindFund2(iaf.FundId);
            if (load && iaf.InvoiceItemId != null) iaf.InvoiceItem = FindInvoiceItem2(iaf.InvoiceItemId);
            if (load && iaf.ExpenseClassId != null) iaf.ExpenseClass = FindExpenseClass2(iaf.ExpenseClassId);
            return iaf;
        }
        public InvoiceItem FindInvoiceItem(Guid? id, bool load = false)
        {
            var ii = Query<InvoiceItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines WHERE id = @id", new { id }).SingleOrDefault();
            if (ii == null) return null;
            if (load && ii.Invoiceid != null) ii.Invoice = FindInvoice(ii.Invoiceid);
            return ii;
        }
        public InvoiceItem2 FindInvoiceItem2(Guid? id, bool load = false)
        {
            var ii2 = Query<InvoiceItem2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", account_number AS \"AccountNumber\", adjustments_total AS \"AdjustmentsTotal\", comment AS \"Comment\", description AS \"Description\", invoice_id AS \"InvoiceId\", invoice_line_number AS \"Number\", invoice_line_status AS \"InvoiceLineStatus\", po_line_id AS \"OrderItemId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", quantity AS \"Quantity\", release_encumbrance AS \"ReleaseEncumbrance\", subscription_info AS \"SubscriptionInfo\", subscription_start AS \"SubscriptionStartDate\", subscription_end AS \"SubscriptionEndDate\", sub_total AS \"SubTotal\", total AS \"Total\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_items WHERE id = @id", new { id }).SingleOrDefault();
            if (ii2 == null) return null;
            if (load && ii2.InvoiceId != null) ii2.Invoice = FindInvoice2(ii2.InvoiceId);
            if (load && ii2.OrderItemId != null) ii2.OrderItem = FindOrderItem2(ii2.OrderItemId);
            if (load && ii2.ProductIdTypeId != null) ii2.ProductIdType = FindIdType2(ii2.ProductIdTypeId);
            if (load && ii2.CreationUserId != null) ii2.CreationUser = FindUser2(ii2.CreationUserId);
            if (load && ii2.LastWriteUserId != null) ii2.LastWriteUser = FindUser2(ii2.LastWriteUserId);
            return ii2;
        }
        public InvoiceItemAdjustment FindInvoiceItemAdjustment(string id, bool load = false)
        {
            var iia = Query<InvoiceItemAdjustment>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", id2 AS \"Id2\", adjustment_id AS \"AdjustmentId\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", prorate AS \"Prorate\", relation_to_total AS \"RelationToTotal\", type AS \"Type\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments WHERE id = @id", new { id }).SingleOrDefault();
            if (iia == null) return null;
            if (load && iia.InvoiceItemId != null) iia.InvoiceItem = FindInvoiceItem2(iia.InvoiceItemId);
            return iia;
        }
        public InvoiceItemAdjustmentFund FindInvoiceItemAdjustmentFund(string id, bool load = false)
        {
            var iiaf = Query<InvoiceItemAdjustmentFund>($"SELECT id AS \"Id\", invoice_item_adjustment_id AS \"InvoiceItemAdjustmentId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions WHERE id = @id", new { id }).SingleOrDefault();
            if (iiaf == null) return null;
            if (load && iiaf.EncumbranceId != null) iiaf.Encumbrance = FindTransaction2(iiaf.EncumbranceId);
            if (load && iiaf.FundId != null) iiaf.Fund = FindFund2(iiaf.FundId);
            if (load && iiaf.InvoiceItemId != null) iiaf.InvoiceItem = FindInvoiceItem2(iiaf.InvoiceItemId);
            if (load && iiaf.ExpenseClassId != null) iiaf.ExpenseClass = FindExpenseClass2(iiaf.ExpenseClassId);
            return iiaf;
        }
        public InvoiceItemFund FindInvoiceItemFund(string id, bool load = false)
        {
            var iif = Query<InvoiceItemFund>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions WHERE id = @id", new { id }).SingleOrDefault();
            if (iif == null) return null;
            if (load && iif.InvoiceItemId != null) iif.InvoiceItem = FindInvoiceItem2(iif.InvoiceItemId);
            if (load && iif.EncumbranceId != null) iif.Encumbrance = FindTransaction2(iif.EncumbranceId);
            if (load && iif.FundId != null) iif.Fund = FindFund2(iif.FundId);
            if (load && iif.ExpenseClassId != null) iif.ExpenseClass = FindExpenseClass2(iif.ExpenseClassId);
            return iif;
        }
        public InvoiceItemReferenceNumber FindInvoiceItemReferenceNumber(string id, bool load = false)
        {
            var iirn = Query<InvoiceItemReferenceNumber>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", ref_number AS \"ReferenceNumber\", ref_number_type AS \"ReferenceNumberType\", vendor_details_source AS \"VendorDetailsSource\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers WHERE id = @id", new { id }).SingleOrDefault();
            if (iirn == null) return null;
            if (load && iirn.InvoiceItemId != null) iirn.InvoiceItem = FindInvoiceItem2(iirn.InvoiceItemId);
            return iirn;
        }
        public InvoiceItemTag FindInvoiceItemTag(string id, bool load = false)
        {
            var iit = Query<InvoiceItemTag>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (iit == null) return null;
            if (load && iit.InvoiceItemId != null) iit.InvoiceItem = FindInvoiceItem2(iit.InvoiceItemId);
            return iit;
        }
        public InvoiceOrderNumber FindInvoiceOrderNumber(string id, bool load = false)
        {
            var ion = Query<InvoiceOrderNumber>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers WHERE id = @id", new { id }).SingleOrDefault();
            if (ion == null) return null;
            if (load && ion.InvoiceId != null) ion.Invoice = FindInvoice2(ion.InvoiceId);
            return ion;
        }
        public InvoiceStatus FindInvoiceStatus(int? id, bool load = false) => Query<InvoiceStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}invoice_statuses WHERE id = @id", new { id }).SingleOrDefault();
        public InvoiceTag FindInvoiceTag(string id, bool load = false)
        {
            var it = Query<InvoiceTag>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (it == null) return null;
            if (load && it.InvoiceId != null) it.Invoice = FindInvoice2(it.InvoiceId);
            return it;
        }
        public InvoiceTransactionSummary FindInvoiceTransactionSummary(Guid? id, bool load = false) => Query<InvoiceTransactionSummary>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries WHERE id = @id", new { id }).SingleOrDefault();
        public InvoiceTransactionSummary2 FindInvoiceTransactionSummary2(Guid? id, bool load = false)
        {
            var its2 = Query<InvoiceTransactionSummary2>($"SELECT id AS \"Id\", num_pending_payments AS \"NumPendingPayments\", num_payments_credits AS \"NumPaymentsCredits\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries WHERE id = @id", new { id }).SingleOrDefault();
            if (its2 == null) return null;
            if (load && its2.Id != null) its2.Invoice2 = FindInvoice2(its2.Id);
            return its2;
        }
        public Isbn FindIsbn(string id, Guid? instanceId, bool load = false)
        {
            var i = Query<Isbn>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}isbns WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.InstanceId != null) i.Instance = FindInstance2(i.InstanceId);
            return i;
        }
        public Issn FindIssn(string id, Guid? instanceId, bool load = false)
        {
            var i = Query<Issn>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}issns WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.InstanceId != null) i.Instance = FindInstance2(i.InstanceId);
            return i;
        }
        public IssuanceMode FindIssuanceMode(Guid? id, bool load = false)
        {
            var im = Query<IssuanceMode>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances WHERE id = @id", new { id }).SingleOrDefault();
            if (im == null) return null;
            if (load && im.CreationUserId != null) im.CreationUser = FindUser2(im.CreationUserId);
            if (load && im.LastWriteUserId != null) im.LastWriteUser = FindUser2(im.LastWriteUserId);
            return im;
        }
        public Item FindItem(Guid? id, bool load = false)
        {
            var i = Query<Item>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", holdingsrecordid AS \"Holdingsrecordid\", permanentloantypeid AS \"Permanentloantypeid\", temporaryloantypeid AS \"Temporaryloantypeid\", materialtypeid AS \"Materialtypeid\", permanentlocationid AS \"Permanentlocationid\", temporarylocationid AS \"Temporarylocationid\", effectivelocationid AS \"Effectivelocationid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item WHERE id = @id", new { id }).SingleOrDefault();
            if (i == null) return null;
            if (load && i.Holdingsrecordid != null) i.Holding = FindHolding(i.Holdingsrecordid);
            if (load && i.Permanentloantypeid != null) i.LoanType = FindLoanType(i.Permanentloantypeid);
            if (load && i.Temporaryloantypeid != null) i.LoanType1 = FindLoanType(i.Temporaryloantypeid);
            if (load && i.Materialtypeid != null) i.MaterialType = FindMaterialType(i.Materialtypeid);
            if (load && i.Permanentlocationid != null) i.Location1 = FindLocation(i.Permanentlocationid);
            if (load && i.Temporarylocationid != null) i.Location2 = FindLocation(i.Temporarylocationid);
            if (load && i.Effectivelocationid != null) i.Location = FindLocation(i.Effectivelocationid);
            return i;
        }
        public Item2 FindItem2(Guid? id, bool load = false)
        {
            var i2 = Query<Item2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", holding_id AS \"HoldingId\", discovery_suppress AS \"DiscoverySuppress\", accession_number AS \"AccessionNumber\", barcode AS \"Barcode\", effective_shelving_order AS \"EffectiveShelvingOrder\", call_number AS \"CallNumber\", call_number_prefix AS \"CallNumberPrefix\", call_number_suffix AS \"CallNumberSuffix\", call_number_type_id AS \"CallNumberTypeId\", effective_call_number AS \"EffectiveCallNumber\", effective_call_number_prefix AS \"EffectiveCallNumberPrefix\", effective_call_number_suffix AS \"EffectiveCallNumberSuffix\", effective_call_number_type_id AS \"EffectiveCallNumberTypeId\", volume AS \"Volume\", enumeration AS \"Enumeration\", chronology AS \"Chronology\", item_identifier AS \"ItemIdentifier\", copy_number AS \"CopyNumber\", number_of_pieces AS \"PiecesCount\", description_of_pieces AS \"PiecesDescription\", number_of_missing_pieces AS \"MissingPiecesCount\", missing_pieces AS \"MissingPiecesDescription\", missing_pieces_date AS \"MissingPiecesTime\", item_damaged_status_id AS \"DamagedStatusId\", item_damaged_status_date AS \"DamagedStatusTime\", status_name AS \"Status\", status_date AS \"StatusLastWriteTime\", material_type_id AS \"MaterialTypeId\", permanent_loan_type_id AS \"PermanentLoanTypeId\", temporary_loan_type_id AS \"TemporaryLoanTypeId\", permanent_location_id AS \"PermanentLocationId\", temporary_location_id AS \"TemporaryLocationId\", effective_location_id AS \"EffectiveLocationId\", in_transit_destination_service_point_id AS \"InTransitDestinationServicePointId\", order_item_id AS \"OrderItemId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", last_check_in_date_time AS \"LastCheckInDateTime\", last_check_in_service_point_id AS \"LastCheckInServicePointId\", last_check_in_staff_member_id AS \"LastCheckInStaffMemberId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}items WHERE id = @id", new { id }).SingleOrDefault();
            if (i2 == null) return null;
            if (load && i2.HoldingId != null) i2.Holding = FindHolding2(i2.HoldingId);
            if (load && i2.CallNumberTypeId != null) i2.CallNumberType = FindCallNumberType2(i2.CallNumberTypeId);
            if (load && i2.EffectiveCallNumberTypeId != null) i2.EffectiveCallNumberType = FindCallNumberType2(i2.EffectiveCallNumberTypeId);
            if (load && i2.DamagedStatusId != null) i2.DamagedStatus = FindItemDamagedStatus2(i2.DamagedStatusId);
            if (load && i2.MaterialTypeId != null) i2.MaterialType = FindMaterialType2(i2.MaterialTypeId);
            if (load && i2.PermanentLoanTypeId != null) i2.PermanentLoanType = FindLoanType2(i2.PermanentLoanTypeId);
            if (load && i2.TemporaryLoanTypeId != null) i2.TemporaryLoanType = FindLoanType2(i2.TemporaryLoanTypeId);
            if (load && i2.PermanentLocationId != null) i2.PermanentLocation = FindLocation2(i2.PermanentLocationId);
            if (load && i2.TemporaryLocationId != null) i2.TemporaryLocation = FindLocation2(i2.TemporaryLocationId);
            if (load && i2.EffectiveLocationId != null) i2.EffectiveLocation = FindLocation2(i2.EffectiveLocationId);
            if (load && i2.InTransitDestinationServicePointId != null) i2.InTransitDestinationServicePoint = FindServicePoint2(i2.InTransitDestinationServicePointId);
            if (load && i2.OrderItemId != null) i2.OrderItem = FindOrderItem2(i2.OrderItemId);
            if (load && i2.CreationUserId != null) i2.CreationUser = FindUser2(i2.CreationUserId);
            if (load && i2.LastWriteUserId != null) i2.LastWriteUser = FindUser2(i2.LastWriteUserId);
            if (load && i2.LastCheckInServicePointId != null) i2.LastCheckInServicePoint = FindServicePoint2(i2.LastCheckInServicePointId);
            if (load && i2.LastCheckInStaffMemberId != null) i2.LastCheckInStaffMember = FindUser2(i2.LastCheckInStaffMemberId);
            return i2;
        }
        public ItemDamagedStatus FindItemDamagedStatus(Guid? id, bool load = false) => Query<ItemDamagedStatus>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status WHERE id = @id", new { id }).SingleOrDefault();
        public ItemDamagedStatus2 FindItemDamagedStatus2(Guid? id, bool load = false)
        {
            var ids2 = Query<ItemDamagedStatus2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses WHERE id = @id", new { id }).SingleOrDefault();
            if (ids2 == null) return null;
            if (load && ids2.CreationUserId != null) ids2.CreationUser = FindUser2(ids2.CreationUserId);
            if (load && ids2.LastWriteUserId != null) ids2.LastWriteUser = FindUser2(ids2.LastWriteUserId);
            return ids2;
        }
        public ItemDonor FindItemDonor(string id, Guid? itemId, bool load = false)
        {
            var id2 = Query<ItemDonor>($"SELECT id AS \"Id\", item_id AS \"ItemId\", donor_code AS \"DonorCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}item_donors WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (id2 == null) return null;
            if (load && id2.ItemId != null) id2.Item = FindItem2(id2.ItemId);
            return id2;
        }
        public ItemElectronicAccess FindItemElectronicAccess(string id, Guid? itemId, bool load = false)
        {
            var iea = Query<ItemElectronicAccess>($"SELECT id AS \"Id\", item_id AS \"ItemId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (iea == null) return null;
            if (load && iea.ItemId != null) iea.Item = FindItem2(iea.ItemId);
            if (load && iea.RelationshipId != null) iea.Relationship = FindElectronicAccessRelationship2(iea.RelationshipId);
            return iea;
        }
        public ItemFormerId FindItemFormerId(string id, Guid? itemId, bool load = false)
        {
            var ifi = Query<ItemFormerId>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_former_ids WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (ifi == null) return null;
            if (load && ifi.ItemId != null) ifi.Item = FindItem2(ifi.ItemId);
            return ifi;
        }
        public ItemNote FindItemNote(string id, Guid? itemId, bool load = false)
        {
            var @in = Query<ItemNote>($"SELECT id AS \"Id\", item_id AS \"ItemId\", item_note_type_id AS \"ItemNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}item_notes WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (@in == null) return null;
            if (load && @in.ItemId != null) @in.Item = FindItem2(@in.ItemId);
            if (load && @in.ItemNoteTypeId != null) @in.ItemNoteType = FindItemNoteType2(@in.ItemNoteTypeId);
            return @in;
        }
        public ItemNoteType FindItemNoteType(Guid? id, bool load = false) => Query<ItemNoteType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type WHERE id = @id", new { id }).SingleOrDefault();
        public ItemNoteType2 FindItemNoteType2(Guid? id, bool load = false)
        {
            var int2 = Query<ItemNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_note_types WHERE id = @id", new { id }).SingleOrDefault();
            if (int2 == null) return null;
            if (load && int2.CreationUserId != null) int2.CreationUser = FindUser2(int2.CreationUserId);
            if (load && int2.LastWriteUserId != null) int2.LastWriteUser = FindUser2(int2.LastWriteUserId);
            return int2;
        }
        public ItemStatisticalCode FindItemStatisticalCode(string id, Guid? itemId, bool load = false)
        {
            var isc = Query<ItemStatisticalCode>($"SELECT id AS \"Id\", item_id AS \"ItemId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (isc == null) return null;
            if (load && isc.ItemId != null) isc.Item = FindItem2(isc.ItemId);
            if (load && isc.StatisticalCodeId != null) isc.StatisticalCode = FindStatisticalCode2(isc.StatisticalCodeId);
            return isc;
        }
        public ItemStatus FindItemStatus(int? id, bool load = false) => Query<ItemStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}item_statuses WHERE id = @id", new { id }).SingleOrDefault();
        public ItemTag FindItemTag(string id, Guid? itemId, bool load = false)
        {
            var it = Query<ItemTag>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_tags WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (it == null) return null;
            if (load && it.ItemId != null) it.Item = FindItem2(it.ItemId);
            return it;
        }
        public ItemYearCaption FindItemYearCaption(string id, Guid? itemId, bool load = false)
        {
            var iyc = Query<ItemYearCaption>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_year_caption WHERE id = @id AND item_id = @itemId", new { id, itemId }).SingleOrDefault();
            if (iyc == null) return null;
            if (load && iyc.ItemId != null) iyc.Item = FindItem2(iyc.ItemId);
            return iyc;
        }
        public JobExecution FindJobExecution(Guid? id, bool load = false) => Query<JobExecution>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions WHERE id = @id", new { id }).SingleOrDefault();
        public JobExecution2 FindJobExecution2(Guid? id, bool load = false)
        {
            var je2 = Query<JobExecution2>($"SELECT id AS \"Id\", hr_id AS \"HrId\", parent_job_id AS \"ParentJobId\", subordination_type AS \"SubordinationType\", job_profile_info_name AS \"JobProfileInfoName\", job_profile_info_data_type AS \"JobProfileInfoDataType\", job_profile_snapshot_wrapper_profile_id AS \"JobProfileSnapshotWrapperProfileId\", job_profile_snapshot_wrapper_content_type AS \"JobProfileSnapshotWrapperContentType\", job_profile_snapshot_wrapper_react_to AS \"JobProfileSnapshotWrapperReactTo\", job_profile_snapshot_wrapper_order AS \"JobProfileSnapshotWrapperOrder\", source_path AS \"SourcePath\", file_name AS \"FileName\", run_by_first_name AS \"RunByFirstName\", run_by_last_name AS \"RunByLastName\", progress_job_execution_id AS \"ProgressJobExecutionId\", progress_current AS \"ProgressCurrent\", progress_total AS \"ProgressTotal\", started_date AS \"StartedDate\", completed_date AS \"CompletedDate\", status AS \"Status\", ui_status AS \"UiStatus\", error_status AS \"ErrorStatus\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_executions WHERE id = @id", new { id }).SingleOrDefault();
            if (je2 == null) return null;
            if (load && je2.ParentJobId != null) je2.ParentJob = FindJobExecution2(je2.ParentJobId);
            if (load && je2.ProgressJobExecutionId != null) je2.ProgressJobExecution = FindJobExecution2(je2.ProgressJobExecutionId);
            if (load && je2.UserId != null) je2.User = FindUser2(je2.UserId);
            return je2;
        }
        public JobExecutionProgress FindJobExecutionProgress(Guid? id, bool load = false)
        {
            var jep = Query<JobExecutionProgress>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", jobexecutionid AS \"Jobexecutionid\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress WHERE id = @id", new { id }).SingleOrDefault();
            if (jep == null) return null;
            if (load && jep.Jobexecutionid != null) jep.JobExecution = FindJobExecution(jep.Jobexecutionid);
            return jep;
        }
        public JobExecutionProgress2 FindJobExecutionProgress2(Guid? id, bool load = false)
        {
            var jep2 = Query<JobExecutionProgress2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", currently_succeeded AS \"CurrentlySucceeded\", currently_failed AS \"CurrentlyFailed\", total AS \"Total\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses WHERE id = @id", new { id }).SingleOrDefault();
            if (jep2 == null) return null;
            if (load && jep2.JobExecutionId != null) jep2.JobExecution = FindJobExecution2(jep2.JobExecutionId);
            return jep2;
        }
        public JobExecutionSourceChunk FindJobExecutionSourceChunk(Guid? id, bool load = false)
        {
            var jesc = Query<JobExecutionSourceChunk>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", jobexecutionid AS \"Jobexecutionid\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks WHERE id = @id", new { id }).SingleOrDefault();
            if (jesc == null) return null;
            if (load && jesc.Jobexecutionid != null) jesc.JobExecution = FindJobExecution(jesc.Jobexecutionid);
            return jesc;
        }
        public JobExecutionSourceChunk2 FindJobExecutionSourceChunk2(Guid? id, bool load = false)
        {
            var jesc2 = Query<JobExecutionSourceChunk2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last AS \"Last\", state AS \"State\", chunk_size AS \"ChunkSize\", processed_amount AS \"ProcessedAmount\", completed_date AS \"CompletedDate\", error AS \"Error\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks WHERE id = @id", new { id }).SingleOrDefault();
            if (jesc2 == null) return null;
            if (load && jesc2.JobExecutionId != null) jesc2.JobExecution = FindJobExecution2(jesc2.JobExecutionId);
            return jesc2;
        }
        public JobMonitoring FindJobMonitoring(Guid? id, bool load = false)
        {
            var jm = Query<JobMonitoring>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last_event_timestamp AS \"LastEventTimestamp\", notification_sent AS \"NotificationSent\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring WHERE id = @id", new { id }).SingleOrDefault();
            if (jm == null) return null;
            if (load && jm.JobExecutionId != null) jm.JobExecution = FindJobExecution(jm.JobExecutionId);
            return jm;
        }
        public JobMonitoring2 FindJobMonitoring2(Guid? id, bool load = false)
        {
            var jm2 = Query<JobMonitoring2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last_event_timestamp AS \"LastEventTimestamp\", notification_sent AS \"NotificationSent\" FROM uc{(IsMySql ? "_" : ".")}job_monitorings WHERE id = @id", new { id }).SingleOrDefault();
            if (jm2 == null) return null;
            if (load && jm2.JobExecutionId != null) jm2.JobExecution = FindJobExecution2(jm2.JobExecutionId);
            return jm2;
        }
        public JournalRecord FindJournalRecord(Guid? id, bool load = false)
        {
            var jr = Query<JournalRecord>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", source_id AS \"SourceId\", entity_type AS \"EntityType\", entity_id AS \"EntityId\", entity_hrid AS \"EntityHrid\", action_type AS \"ActionType\", action_status AS \"ActionStatus\", action_date AS \"ActionDate\", source_record_order AS \"SourceRecordOrder\", error AS \"Error\", title AS \"Title\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records WHERE id = @id", new { id }).SingleOrDefault();
            if (jr == null) return null;
            if (load && jr.JobExecutionId != null) jr.JobExecution = FindJobExecution(jr.JobExecutionId);
            return jr;
        }
        public JournalRecord2 FindJournalRecord2(Guid? id, bool load = false)
        {
            var jr2 = Query<JournalRecord2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", source_id AS \"SourceId\", entity_type AS \"EntityType\", entity_id AS \"EntityId\", entity_hrid AS \"EntityHrid\", action_type AS \"ActionType\", action_status AS \"ActionStatus\", action_date AS \"ActionDate\", source_record_order AS \"SourceRecordOrder\", error AS \"Error\", title AS \"Title\" FROM uc{(IsMySql ? "_" : ".")}journal_records WHERE id = @id", new { id }).SingleOrDefault();
            if (jr2 == null) return null;
            if (load && jr2.JobExecutionId != null) jr2.JobExecution = FindJobExecution2(jr2.JobExecutionId);
            if (load && jr2.SourceId != null) jr2.Source = FindSource2(jr2.SourceId);
            return jr2;
        }
        public Language FindLanguage(string id, Guid? instanceId, bool load = false)
        {
            var l = Query<Language>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}languages WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (l == null) return null;
            if (load && l.InstanceId != null) l.Instance = FindInstance2(l.InstanceId);
            return l;
        }
        public Ledger FindLedger(Guid? id, bool load = false)
        {
            var l = Query<Ledger>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fiscalyearoneid AS \"Fiscalyearoneid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger WHERE id = @id", new { id }).SingleOrDefault();
            if (l == null) return null;
            if (load && l.Fiscalyearoneid != null) l.FiscalYear = FindFiscalYear(l.Fiscalyearoneid);
            return l;
        }
        public Ledger2 FindLedger2(Guid? id, bool load = false)
        {
            var l2 = Query<Ledger2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", fiscal_year_one_id AS \"FiscalYearOneId\", ledger_status AS \"LedgerStatus\", allocated AS \"Allocated\", available AS \"Available\", net_transfers AS \"NetTransfers\", unavailable AS \"Unavailable\", currency AS \"Currency\", restrict_encumbrance AS \"RestrictEncumbrance\", restrict_expenditures AS \"RestrictExpenditures\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", initial_allocation AS \"InitialAllocation\", allocation_to AS \"AllocationTo\", allocation_from AS \"AllocationFrom\", total_funding AS \"TotalFunding\", cash_balance AS \"CashBalance\", awaiting_payment AS \"AwaitingPayment\", encumbered AS \"Encumbered\", expenditures AS \"Expenditures\", over_encumbrance AS \"OverEncumbrance\", over_expended AS \"OverExpended\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledgers WHERE id = @id", new { id }).SingleOrDefault();
            if (l2 == null) return null;
            if (load && l2.FiscalYearOneId != null) l2.FiscalYearOne = FindFiscalYear2(l2.FiscalYearOneId);
            if (load && l2.CreationUserId != null) l2.CreationUser = FindUser2(l2.CreationUserId);
            if (load && l2.LastWriteUserId != null) l2.LastWriteUser = FindUser2(l2.LastWriteUserId);
            return l2;
        }
        public LedgerAcquisitionsUnit FindLedgerAcquisitionsUnit(string id, bool load = false)
        {
            var lau = Query<LedgerAcquisitionsUnit>($"SELECT id AS \"Id\", ledger_id AS \"LedgerId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (lau == null) return null;
            if (load && lau.LedgerId != null) lau.Ledger = FindLedger2(lau.LedgerId);
            if (load && lau.AcquisitionsUnitId != null) lau.AcquisitionsUnit = FindAcquisitionsUnit2(lau.AcquisitionsUnitId);
            return lau;
        }
        public LedgerRollover FindLedgerRollover(Guid? id, bool load = false)
        {
            var lr = Query<LedgerRollover>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerid AS \"Ledgerid\", fromfiscalyearid AS \"Fromfiscalyearid\", tofiscalyearid AS \"Tofiscalyearid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover WHERE id = @id", new { id }).SingleOrDefault();
            if (lr == null) return null;
            if (load && lr.Ledgerid != null) lr.Ledger = FindLedger(lr.Ledgerid);
            if (load && lr.Fromfiscalyearid != null) lr.FiscalYear = FindFiscalYear(lr.Fromfiscalyearid);
            if (load && lr.Tofiscalyearid != null) lr.FiscalYear1 = FindFiscalYear(lr.Tofiscalyearid);
            return lr;
        }
        public LedgerRollover2 FindLedgerRollover2(Guid? id, bool load = false)
        {
            var lr2 = Query<LedgerRollover2>($"SELECT id AS \"Id\", ledger_id AS \"LedgerId\", from_fiscal_year_id AS \"FromFiscalYearId\", to_fiscal_year_id AS \"ToFiscalYearId\", restrict_encumbrance AS \"RestrictEncumbrance\", restrict_expenditures AS \"RestrictExpenditures\", need_close_budgets AS \"NeedCloseBudgets\", currency_factor AS \"CurrencyFactor\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers WHERE id = @id", new { id }).SingleOrDefault();
            if (lr2 == null) return null;
            if (load && lr2.LedgerId != null) lr2.Ledger = FindLedger2(lr2.LedgerId);
            if (load && lr2.FromFiscalYearId != null) lr2.FromFiscalYear = FindFiscalYear2(lr2.FromFiscalYearId);
            if (load && lr2.ToFiscalYearId != null) lr2.ToFiscalYear = FindFiscalYear2(lr2.ToFiscalYearId);
            if (load && lr2.CreationUserId != null) lr2.CreationUser = FindUser2(lr2.CreationUserId);
            if (load && lr2.LastWriteUserId != null) lr2.LastWriteUser = FindUser2(lr2.LastWriteUserId);
            return lr2;
        }
        public LedgerRolloverBudgetsRollover FindLedgerRolloverBudgetsRollover(string id, bool load = false)
        {
            var lrbr = Query<LedgerRolloverBudgetsRollover>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", fund_type_id AS \"FundTypeId\", rollover_allocation AS \"RolloverAllocation\", rollover_available AS \"RolloverAvailable\", set_allowances AS \"SetAllowances\", adjust_allocation AS \"AdjustAllocation\", add_available_to AS \"AddAvailableTo\", allowable_encumbrance AS \"AllowableEncumbrance\", allowable_expenditure AS \"AllowableExpenditure\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover WHERE id = @id", new { id }).SingleOrDefault();
            if (lrbr == null) return null;
            if (load && lrbr.LedgerRolloverId != null) lrbr.LedgerRollover = FindLedgerRollover2(lrbr.LedgerRolloverId);
            if (load && lrbr.FundTypeId != null) lrbr.FundType = FindFundType2(lrbr.FundTypeId);
            return lrbr;
        }
        public LedgerRolloverEncumbrancesRollover FindLedgerRolloverEncumbrancesRollover(string id, bool load = false)
        {
            var lrer = Query<LedgerRolloverEncumbrancesRollover>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", order_type AS \"OrderType\", based_on AS \"BasedOn\", increase_by AS \"IncreaseBy\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover WHERE id = @id", new { id }).SingleOrDefault();
            if (lrer == null) return null;
            if (load && lrer.LedgerRolloverId != null) lrer.LedgerRollover = FindLedgerRollover2(lrer.LedgerRolloverId);
            return lrer;
        }
        public LedgerRolloverError FindLedgerRolloverError(Guid? id, bool load = false)
        {
            var lre = Query<LedgerRolloverError>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerrolloverid AS \"Ledgerrolloverid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error WHERE id = @id", new { id }).SingleOrDefault();
            if (lre == null) return null;
            if (load && lre.Ledgerrolloverid != null) lre.LedgerRollover = FindLedgerRollover(lre.Ledgerrolloverid);
            return lre;
        }
        public LedgerRolloverError2 FindLedgerRolloverError2(Guid? id, bool load = false)
        {
            var lre2 = Query<LedgerRolloverError2>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", error_type AS \"ErrorType\", failed_action AS \"FailedAction\", error_message AS \"ErrorMessage\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors WHERE id = @id", new { id }).SingleOrDefault();
            if (lre2 == null) return null;
            if (load && lre2.LedgerRolloverId != null) lre2.LedgerRollover = FindLedgerRollover2(lre2.LedgerRolloverId);
            if (load && lre2.CreationUserId != null) lre2.CreationUser = FindUser2(lre2.CreationUserId);
            if (load && lre2.LastWriteUserId != null) lre2.LastWriteUser = FindUser2(lre2.LastWriteUserId);
            return lre2;
        }
        public LedgerRolloverProgress FindLedgerRolloverProgress(Guid? id, bool load = false)
        {
            var lrp = Query<LedgerRolloverProgress>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerrolloverid AS \"Ledgerrolloverid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress WHERE id = @id", new { id }).SingleOrDefault();
            if (lrp == null) return null;
            if (load && lrp.Ledgerrolloverid != null) lrp.LedgerRollover = FindLedgerRollover(lrp.Ledgerrolloverid);
            return lrp;
        }
        public LedgerRolloverProgress2 FindLedgerRolloverProgress2(Guid? id, bool load = false)
        {
            var lrp2 = Query<LedgerRolloverProgress2>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", overall_rollover_status AS \"OverallRolloverStatus\", budgets_closing_rollover_status AS \"BudgetsClosingRolloverStatus\", financial_rollover_status AS \"FinancialRolloverStatus\", orders_rollover_status AS \"OrdersRolloverStatus\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses WHERE id = @id", new { id }).SingleOrDefault();
            if (lrp2 == null) return null;
            if (load && lrp2.LedgerRolloverId != null) lrp2.LedgerRollover = FindLedgerRollover2(lrp2.LedgerRolloverId);
            if (load && lrp2.CreationUserId != null) lrp2.CreationUser = FindUser2(lrp2.CreationUserId);
            if (load && lrp2.LastWriteUserId != null) lrp2.LastWriteUser = FindUser2(lrp2.LastWriteUserId);
            return lrp2;
        }
        public Library FindLibrary(Guid? id, bool load = false)
        {
            var l = Query<Library>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", campusid AS \"Campusid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary WHERE id = @id", new { id }).SingleOrDefault();
            if (l == null) return null;
            if (load && l.Campusid != null) l.Campus = FindCampus(l.Campusid);
            return l;
        }
        public Library2 FindLibrary2(Guid? id, bool load = false)
        {
            var l2 = Query<Library2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", campus_id AS \"CampusId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}libraries WHERE id = @id", new { id }).SingleOrDefault();
            if (l2 == null) return null;
            if (load && l2.CampusId != null) l2.Campus = FindCampus2(l2.CampusId);
            if (load && l2.CreationUserId != null) l2.CreationUser = FindUser2(l2.CreationUserId);
            if (load && l2.LastWriteUserId != null) l2.LastWriteUser = FindUser2(l2.LastWriteUserId);
            return l2;
        }
        public Loan FindLoan(Guid? id, bool load = false) => Query<Loan>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan WHERE id = @id", new { id }).SingleOrDefault();
        public Loan2 FindLoan2(Guid? id, bool load = false)
        {
            var l2 = Query<Loan2>($"SELECT id AS \"Id\", user_id AS \"UserId\", proxy_user_id AS \"ProxyUserId\", item_id AS \"ItemId\", item_effective_location_at_check_out_id AS \"ItemEffectiveLocationAtCheckOutId\", status_name AS \"StatusName\", loan_date AS \"LoanTime\", due_date AS \"DueTime\", return_date AS \"ReturnTime\", system_return_date AS \"SystemReturnTime\", action AS \"Action\", action_comment AS \"ActionComment\", item_status AS \"ItemStatus\", renewal_count AS \"RenewalCount\", loan_policy_id AS \"LoanPolicyId\", checkout_service_point_id AS \"CheckoutServicePointId\", checkin_service_point_id AS \"CheckinServicePointId\", group_id AS \"GroupId\", due_date_changed_by_recall AS \"DueDateChangedByRecall\", declared_lost_date AS \"DeclaredLostDate\", claimed_returned_date AS \"ClaimedReturnedDate\", overdue_fine_policy_id AS \"OverdueFinePolicyId\", lost_item_policy_id AS \"LostItemPolicyId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", aged_to_lost_delayed_billing_lost_item_has_been_billed AS \"AgedToLostDelayedBillingLostItemHasBeenBilled\", aged_to_lost_delayed_billing_date_lost_item_should_be_billed AS \"AgedToLostDelayedBillingDateLostItemShouldBeBilled\", aged_to_lost_delayed_billing_aged_to_lost_date AS \"AgedToLostDelayedBillingAgedToLostDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loans WHERE id = @id", new { id }).SingleOrDefault();
            if (l2 == null) return null;
            if (load && l2.UserId != null) l2.User = FindUser2(l2.UserId);
            if (load && l2.ProxyUserId != null) l2.ProxyUser = FindUser2(l2.ProxyUserId);
            if (load && l2.ItemId != null) l2.Item = FindItem2(l2.ItemId);
            if (load && l2.ItemEffectiveLocationAtCheckOutId != null) l2.ItemEffectiveLocationAtCheckOut = FindLocation2(l2.ItemEffectiveLocationAtCheckOutId);
            if (load && l2.LoanPolicyId != null) l2.LoanPolicy = FindLoanPolicy2(l2.LoanPolicyId);
            if (load && l2.CheckoutServicePointId != null) l2.CheckoutServicePoint = FindServicePoint2(l2.CheckoutServicePointId);
            if (load && l2.CheckinServicePointId != null) l2.CheckinServicePoint = FindServicePoint2(l2.CheckinServicePointId);
            if (load && l2.GroupId != null) l2.Group = FindGroup2(l2.GroupId);
            if (load && l2.OverdueFinePolicyId != null) l2.OverdueFinePolicy = FindOverdueFinePolicy2(l2.OverdueFinePolicyId);
            if (load && l2.LostItemPolicyId != null) l2.LostItemPolicy = FindLostItemFeePolicy2(l2.LostItemPolicyId);
            if (load && l2.CreationUserId != null) l2.CreationUser = FindUser2(l2.CreationUserId);
            if (load && l2.LastWriteUserId != null) l2.LastWriteUser = FindUser2(l2.LastWriteUserId);
            return l2;
        }
        public LoanEvent FindLoanEvent(Guid? id, bool load = false) => Query<LoanEvent>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan WHERE id = @id", new { id }).SingleOrDefault();
        public LoanEvent2 FindLoanEvent2(Guid? id, bool load = false) => Query<LoanEvent2>($"SELECT id AS \"Id\", operation AS \"Operation\", creation_date AS \"CreationTime\", loan_user_id AS \"LoanUserId\", loan_proxy_user_id AS \"LoanProxyUserId\", loan_item_id AS \"LoanItemId\", loan_item_effective_location_id_at_check_out_id AS \"LoanItemEffectiveLocationIdAtCheckOutId\", loan_status_name AS \"LoanStatusName\", loan_loan_date AS \"LoanLoanDate\", loan_due_date AS \"LoanDueDate\", loan_return_date AS \"LoanReturnDate\", loan_system_return_date AS \"LoanSystemReturnDate\", loan_action AS \"LoanAction\", loan_action_comment AS \"LoanActionComment\", loan_item_status AS \"LoanItemStatus\", loan_renewal_count AS \"LoanRenewalCount\", loan_loan_policy_id AS \"LoanLoanPolicyId\", loan_checkout_service_point_id AS \"LoanCheckoutServicePointId\", loan_checkin_service_point_id AS \"LoanCheckinServicePointId\", loan_patron_group_id_at_checkout AS \"LoanPatronGroupIdAtCheckout\", loan_due_date_changed_by_recall AS \"LoanDueDateChangedByRecall\", loan_declared_lost_date AS \"LoanDeclaredLostDate\", loan_claimed_returned_date AS \"LoanClaimedReturnedDate\", loan_overdue_fine_policy_id AS \"LoanOverdueFinePolicyId\", loan_lost_item_policy_id AS \"LoanLostItemPolicyId\", loan_metadata_created_date AS \"LoanMetadataCreatedDate\", loan_metadata_created_by_user_id AS \"LoanMetadataCreatedByUserId\", loan_metadata_created_by_username AS \"LoanMetadataCreatedByUsername\", loan_metadata_updated_date AS \"LoanMetadataUpdatedDate\", loan_metadata_updated_by_user_id AS \"LoanMetadataUpdatedByUserId\", loan_metadata_updated_by_username AS \"LoanMetadataUpdatedByUsername\", loan_aged_to_lost_delayed_billing_lost_item_has_been_billed AS \"LoanAgedToLostDelayedBillingLostItemHasBeenBilled\", loan_aged_to_lost_delayed_billing_date_lost_item_should_be_bill AS \"LoanAgedToLostDelayedBillingDateLostItemShouldBeBill\", loan_aged_to_lost_delayed_billing_aged_to_lost_date AS \"LoanAgedToLostDelayedBillingAgedToLostDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_events WHERE id = @id", new { id }).SingleOrDefault();
        public LoanPolicy FindLoanPolicy(Guid? id, bool load = false)
        {
            var lp = Query<LoanPolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", loanspolicy_fixedduedatescheduleid AS \"LoanspolicyFixedduedatescheduleid\", renewalspolicy_alternatefixedduedatescheduleid AS \"RenewalspolicyAlternatefixedduedatescheduleid\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy WHERE id = @id", new { id }).SingleOrDefault();
            if (lp == null) return null;
            if (load && lp.LoanspolicyFixedduedatescheduleid != null) lp.FixedDueDateSchedule = FindFixedDueDateSchedule(lp.LoanspolicyFixedduedatescheduleid);
            if (load && lp.RenewalspolicyAlternatefixedduedatescheduleid != null) lp.FixedDueDateSchedule1 = FindFixedDueDateSchedule(lp.RenewalspolicyAlternatefixedduedatescheduleid);
            return lp;
        }
        public LoanPolicy2 FindLoanPolicy2(Guid? id, bool load = false)
        {
            var lp2 = Query<LoanPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", loanable AS \"Loanable\", loans_policy_profile_id AS \"LoansPolicyProfileId\", loans_policy_period_duration AS \"LoansPolicyPeriodDuration\", loans_policy_period_interval_id AS \"LoansPolicyPeriodInterval\", loans_policy_closed_library_due_date_management_id AS \"LoansPolicyClosedLibraryDueDateManagementId\", loans_policy_grace_period_duration AS \"LoansPolicyGracePeriodDuration\", loans_policy_grace_period_interval_id AS \"LoansPolicyGracePeriodInterval\", loans_policy_opening_time_offset_duration AS \"LoansPolicyOpeningTimeOffsetDuration\", loans_policy_opening_time_offset_interval_id AS \"LoansPolicyOpeningTimeOffsetInterval\", loans_policy_fixed_due_date_schedule_id AS \"LoansPolicyFixedDueDateScheduleId\", loans_policy_item_limit AS \"LoansPolicyItemLimit\", renewable AS \"Renewable\", renewals_policy_unlimited AS \"RenewalsPolicyUnlimited\", renewals_policy_number_allowed AS \"RenewalsPolicyNumberAllowed\", renewals_policy_renew_from_id AS \"RenewalsPolicyRenewFromId\", renewals_policy_different_period AS \"RenewalsPolicyDifferentPeriod\", renewals_policy_period_duration AS \"RenewalsPolicyPeriodDuration\", renewals_policy_period_interval_id AS \"RenewalsPolicyPeriodInterval\", renewals_policy_alternate_fixed_due_date_schedule_id AS \"RenewalsPolicyAlternateFixedDueDateScheduleId\", recalls_alternate_grace_period_duration AS \"RecallsAlternateGracePeriodDuration\", recalls_alternate_grace_period_interval_id AS \"RecallsAlternateGracePeriodInterval\", recalls_minimum_guaranteed_loan_period_duration AS \"RecallsMinimumGuaranteedLoanPeriodDuration\", recalls_minimum_guaranteed_loan_period_interval_id AS \"RecallsMinimumGuaranteedLoanPeriodInterval\", recalls_recall_return_interval_duration AS \"RecallsRecallReturnIntervalDuration\", recalls_recall_return_interval_interval_id AS \"RecallsRecallReturnIntervalInterval\", recalls_allow_recalls_to_extend_overdue_loans AS \"RecallsAllowRecallsToExtendOverdueLoans\", recalls_alternate_recall_return_interval_duration AS \"RecallsAlternateRecallReturnIntervalDuration\", recalls_alternate_recall_return_interval_interval_id AS \"RecallsAlternateRecallReturnIntervalInterval\", holds_alternate_checkout_loan_period_duration AS \"HoldsAlternateCheckoutLoanPeriodDuration\", holds_alternate_checkout_loan_period_interval_id AS \"HoldsAlternateCheckoutLoanPeriodInterval\", holds_renew_items_with_request AS \"HoldsRenewItemsWithRequest\", holds_alternate_renewal_loan_period_duration AS \"HoldsAlternateRenewalLoanPeriodDuration\", holds_alternate_renewal_loan_period_interval_id AS \"HoldsAlternateRenewalLoanPeriodInterval\", pages_alternate_checkout_loan_period_duration AS \"PagesAlternateCheckoutLoanPeriodDuration\", pages_alternate_checkout_loan_period_interval_id AS \"PagesAlternateCheckoutLoanPeriodInterval\", pages_renew_items_with_request AS \"PagesRenewItemsWithRequest\", pages_alternate_renewal_loan_period_duration AS \"PagesAlternateRenewalLoanPeriodDuration\", pages_alternate_renewal_loan_period_interval_id AS \"PagesAlternateRenewalLoanPeriodInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (lp2 == null) return null;
            if (load && lp2.LoansPolicyFixedDueDateScheduleId != null) lp2.LoansPolicyFixedDueDateSchedule = FindFixedDueDateSchedule2(lp2.LoansPolicyFixedDueDateScheduleId);
            if (load && lp2.RenewalsPolicyAlternateFixedDueDateScheduleId != null) lp2.RenewalsPolicyAlternateFixedDueDateSchedule = FindFixedDueDateSchedule2(lp2.RenewalsPolicyAlternateFixedDueDateScheduleId);
            if (load && lp2.CreationUserId != null) lp2.CreationUser = FindUser2(lp2.CreationUserId);
            if (load && lp2.LastWriteUserId != null) lp2.LastWriteUser = FindUser2(lp2.LastWriteUserId);
            return lp2;
        }
        public LoanType FindLoanType(Guid? id, bool load = false) => Query<LoanType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type WHERE id = @id", new { id }).SingleOrDefault();
        public LoanType2 FindLoanType2(Guid? id, bool load = false)
        {
            var lt2 = Query<LoanType2>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_types WHERE id = @id", new { id }).SingleOrDefault();
            if (lt2 == null) return null;
            if (load && lt2.CreationUserId != null) lt2.CreationUser = FindUser2(lt2.CreationUserId);
            if (load && lt2.LastWriteUserId != null) lt2.LastWriteUser = FindUser2(lt2.LastWriteUserId);
            return lt2;
        }
        public Location FindLocation(Guid? id, bool load = false)
        {
            var l = Query<Location>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", institutionid AS \"Institutionid\", campusid AS \"Campusid\", libraryid AS \"Libraryid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location WHERE id = @id", new { id }).SingleOrDefault();
            if (l == null) return null;
            if (load && l.Institutionid != null) l.Institution = FindInstitution(l.Institutionid);
            if (load && l.Campusid != null) l.Campus = FindCampus(l.Campusid);
            if (load && l.Libraryid != null) l.Library = FindLibrary(l.Libraryid);
            return l;
        }
        public Location2 FindLocation2(Guid? id, bool load = false)
        {
            var l2 = Query<Location2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", discovery_display_name AS \"DiscoveryDisplayName\", is_active AS \"IsActive\", institution_id AS \"InstitutionId\", campus_id AS \"CampusId\", library_id AS \"LibraryId\", primary_service_point_id AS \"PrimaryServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}locations WHERE id = @id", new { id }).SingleOrDefault();
            if (l2 == null) return null;
            if (load && l2.InstitutionId != null) l2.Institution = FindInstitution2(l2.InstitutionId);
            if (load && l2.CampusId != null) l2.Campus = FindCampus2(l2.CampusId);
            if (load && l2.LibraryId != null) l2.Library = FindLibrary2(l2.LibraryId);
            if (load && l2.PrimaryServicePointId != null) l2.PrimaryServicePoint = FindServicePoint2(l2.PrimaryServicePointId);
            if (load && l2.CreationUserId != null) l2.CreationUser = FindUser2(l2.CreationUserId);
            if (load && l2.LastWriteUserId != null) l2.LastWriteUser = FindUser2(l2.LastWriteUserId);
            return l2;
        }
        public LocationServicePoint FindLocationServicePoint(string id, bool load = false)
        {
            var lsp = Query<LocationServicePoint>($"SELECT id AS \"Id\", location_id AS \"LocationId\", service_point_id AS \"ServicePointId\" FROM uc{(IsMySql ? "_" : ".")}location_service_points WHERE id = @id", new { id }).SingleOrDefault();
            if (lsp == null) return null;
            if (load && lsp.LocationId != null) lsp.Location = FindLocation2(lsp.LocationId);
            if (load && lsp.ServicePointId != null) lsp.ServicePoint = FindServicePoint2(lsp.ServicePointId);
            return lsp;
        }
        public LocationSetting FindLocationSetting(Guid? id, bool load = false)
        {
            var ls = Query<LocationSetting>($"SELECT id AS \"Id\", location_id AS \"LocationId\", settings_id AS \"SettingsId\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}location_settings WHERE id = @id", new { id }).SingleOrDefault();
            if (ls == null) return null;
            if (load && ls.LocationId != null) ls.Location = FindLocation2(ls.LocationId);
            if (load && ls.SettingsId != null) ls.Settings = FindSetting(ls.SettingsId);
            if (load && ls.CreationUserId != null) ls.CreationUser = FindUser2(ls.CreationUserId);
            if (load && ls.LastWriteUserId != null) ls.LastWriteUser = FindUser2(ls.LastWriteUserId);
            return ls;
        }
        public Login FindLogin(Guid? id, bool load = false) => Query<Login>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials WHERE id = @id", new { id }).SingleOrDefault();
        public Login2 FindLogin2(Guid? id, bool load = false)
        {
            var l2 = Query<Login2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hash AS \"Hash\", salt AS \"Salt\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}logins WHERE id = @id", new { id }).SingleOrDefault();
            if (l2 == null) return null;
            if (load && l2.UserId != null) l2.User = FindUser2(l2.UserId);
            if (load && l2.CreationUserId != null) l2.CreationUser = FindUser2(l2.CreationUserId);
            if (load && l2.LastWriteUserId != null) l2.LastWriteUser = FindUser2(l2.LastWriteUserId);
            return l2;
        }
        public LostItemFeePolicy FindLostItemFeePolicy(Guid? id, bool load = false) => Query<LostItemFeePolicy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy WHERE id = @id", new { id }).SingleOrDefault();
        public LostItemFeePolicy2 FindLostItemFeePolicy2(Guid? id, bool load = false)
        {
            var lifp2 = Query<LostItemFeePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", item_aged_lost_overdue_duration AS \"ItemAgedLostOverdueDuration\", item_aged_lost_overdue_interval_id AS \"ItemAgedLostOverdueInterval\", patron_billed_after_aged_lost_duration AS \"PatronBilledAfterAgedLostDuration\", patron_billed_after_aged_lost_interval_id AS \"PatronBilledAfterAgedLostInterval\", recalled_item_aged_lost_overdue_duration AS \"RecalledItemAgedLostOverdueDuration\", recalled_item_aged_lost_overdue_interval_id AS \"RecalledItemAgedLostOverdueInterval\", patron_billed_after_recalled_item_aged_lost_duration AS \"PatronBilledAfterRecalledItemAgedLostDuration\", patron_billed_after_recalled_item_aged_lost_interval_id AS \"PatronBilledAfterRecalledItemAgedLostInterval\", charge_amount_item_charge_type AS \"ChargeAmountItemChargeType\", charge_amount_item_amount AS \"ChargeAmountItemAmount\", lost_item_processing_fee AS \"LostItemProcessingFee\", charge_amount_item_patron AS \"ChargeAmountItemPatron\", charge_amount_item_system AS \"ChargeAmountItemSystem\", lost_item_charge_fee_fine_duration AS \"LostItemChargeFeeFineDuration\", lost_item_charge_fee_fine_interval_id AS \"LostItemChargeFeeFineInterval\", returned_lost_item_processing_fee AS \"ReturnedLostItemProcessingFee\", replaced_lost_item_processing_fee AS \"ReplacedLostItemProcessingFee\", replacement_processing_fee AS \"ReplacementProcessingFee\", replacement_allowed AS \"ReplacementAllowed\", lost_item_returned AS \"LostItemReturned\", fees_fines_shall_refunded_duration AS \"FeesFinesShallRefundedDuration\", fees_fines_shall_refunded_interval_id AS \"FeesFinesShallRefundedInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (lifp2 == null) return null;
            if (load && lifp2.CreationUserId != null) lifp2.CreationUser = FindUser2(lifp2.CreationUserId);
            if (load && lifp2.LastWriteUserId != null) lifp2.LastWriteUser = FindUser2(lifp2.LastWriteUserId);
            return lifp2;
        }
        public ManualBlockTemplate FindManualBlockTemplate(Guid? id, bool load = false) => Query<ManualBlockTemplate>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates WHERE id = @id", new { id }).SingleOrDefault();
        public ManualBlockTemplate2 FindManualBlockTemplate2(Guid? id, bool load = false)
        {
            var mbt2 = Query<ManualBlockTemplate2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", \"desc\" AS \"Description\", block_template_desc AS \"BlockTemplateDescription\", block_template_patron_message AS \"BlockTemplatePatronMessage\", block_template_borrowing AS \"BlockTemplateBorrowing\", block_template_renewals AS \"BlockTemplateRenewals\", block_template_requests AS \"BlockTemplateRequests\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}manual_block_templates WHERE id = @id", new { id }).SingleOrDefault();
            if (mbt2 == null) return null;
            if (load && mbt2.CreationUserId != null) mbt2.CreationUser = FindUser2(mbt2.CreationUserId);
            if (load && mbt2.LastWriteUserId != null) mbt2.LastWriteUser = FindUser2(mbt2.LastWriteUserId);
            return mbt2;
        }
        public MappingParamsSnapshot FindMappingParamsSnapshot(Guid? id, bool load = false) => Query<MappingParamsSnapshot>($"SELECT job_execution_id AS \"Id\", params AS \"Params\", saved_timestamp AS \"SavedTimestamp\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots WHERE job_execution_id = @id", new { id }).SingleOrDefault();
        public MappingRule FindMappingRule(Guid? id, bool load = false) => Query<MappingRule>($"SELECT id AS \"Id\", jsonb AS \"Content\", record_type AS \"RecordType\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules WHERE id = @id", new { id }).SingleOrDefault();
        public MappingRulesSnapshot FindMappingRulesSnapshot(Guid? id, bool load = false) => Query<MappingRulesSnapshot>($"SELECT job_execution_id AS \"Id\", rules AS \"Rules\", saved_timestamp AS \"SavedTimestamp\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots WHERE job_execution_id = @id", new { id }).SingleOrDefault();
        public MarcRecord FindMarcRecord(Guid? id, bool load = false)
        {
            var mr = Query<MarcRecord>($"SELECT id AS \"Id\", content AS \"Content\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb WHERE id = @id", new { id }).SingleOrDefault();
            if (mr == null) return null;
            if (load && mr.Id != null) mr.Record = FindRecord(mr.Id);
            return mr;
        }
        public MarcRecord2 FindMarcRecord2(Guid? id, bool load = false)
        {
            var mr2 = Query<MarcRecord2>($"SELECT id AS \"Id\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}marc_records WHERE id = @id", new { id }).SingleOrDefault();
            if (mr2 == null) return null;
            if (load && mr2.Id != null) mr2.Record2 = FindRecord2(mr2.Id);
            return mr2;
        }
        public MaterialType FindMaterialType(Guid? id, bool load = false) => Query<MaterialType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type WHERE id = @id", new { id }).SingleOrDefault();
        public MaterialType2 FindMaterialType2(Guid? id, bool load = false)
        {
            var mt2 = Query<MaterialType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}material_types WHERE id = @id", new { id }).SingleOrDefault();
            if (mt2 == null) return null;
            if (load && mt2.CreationUserId != null) mt2.CreationUser = FindUser2(mt2.CreationUserId);
            if (load && mt2.LastWriteUserId != null) mt2.LastWriteUser = FindUser2(mt2.LastWriteUserId);
            return mt2;
        }
        public ModeOfIssuance FindModeOfIssuance(Guid? id, bool load = false) => Query<ModeOfIssuance>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance WHERE id = @id", new { id }).SingleOrDefault();
        public NatureOfContentTerm FindNatureOfContentTerm(Guid? id, bool load = false) => Query<NatureOfContentTerm>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term WHERE id = @id", new { id }).SingleOrDefault();
        public NatureOfContentTerm2 FindNatureOfContentTerm2(Guid? id, bool load = false)
        {
            var noct2 = Query<NatureOfContentTerm2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms WHERE id = @id", new { id }).SingleOrDefault();
            if (noct2 == null) return null;
            if (load && noct2.CreationUserId != null) noct2.CreationUser = FindUser2(noct2.CreationUserId);
            if (load && noct2.LastWriteUserId != null) noct2.LastWriteUser = FindUser2(noct2.LastWriteUserId);
            return noct2;
        }
        public Note FindNote(Guid? id, bool load = false)
        {
            var n = Query<Note>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", temporary_type_id AS \"TemporaryTypeId\", search_content AS \"SearchContent\" FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data WHERE id = @id", new { id }).SingleOrDefault();
            if (n == null) return null;
            if (load && n.TemporaryTypeId != null) n.TemporaryType = FindNoteType(n.TemporaryTypeId);
            return n;
        }
        public Note2 FindNote2(string id, Guid? instanceId, bool load = false)
        {
            var n2 = Query<Note2>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", instance_note_type_id AS \"InstanceNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\" FROM uc{(IsMySql ? "_" : ".")}notes WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (n2 == null) return null;
            if (load && n2.InstanceId != null) n2.Instance = FindInstance2(n2.InstanceId);
            if (load && n2.InstanceNoteTypeId != null) n2.InstanceNoteType = FindInstanceNoteType2(n2.InstanceNoteTypeId);
            return n2;
        }
        public Note3 FindNote3(Guid? id, bool load = false)
        {
            var n3 = Query<Note3>($"SELECT id AS \"Id\", type_id AS \"TypeId\", type AS \"Type\", domain AS \"Domain\", title AS \"Title\", content2 AS \"Content2\", status AS \"Status\", creator_last_name AS \"CreatorLastName\", creator_first_name AS \"CreatorFirstName\", creator_middle_name AS \"CreatorMiddleName\", updater_last_name AS \"UpdaterLastName\", updater_first_name AS \"UpdaterFirstName\", updater_middle_name AS \"UpdaterMiddleName\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", temporary_type_id AS \"TemporaryTypeId\", search_content AS \"SearchContent\" FROM uc{(IsMySql ? "_" : ".")}notes2 WHERE id = @id", new { id }).SingleOrDefault();
            if (n3 == null) return null;
            if (load && n3.TypeId != null) n3.Type1 = FindNoteType2(n3.TypeId);
            if (load && n3.CreationUserId != null) n3.CreationUser = FindUser2(n3.CreationUserId);
            if (load && n3.LastWriteUserId != null) n3.LastWriteUser = FindUser2(n3.LastWriteUserId);
            if (load && n3.TemporaryTypeId != null) n3.TemporaryType = FindNoteType2(n3.TemporaryTypeId);
            return n3;
        }
        public NoteType FindNoteType(Guid? id, bool load = false) => Query<NoteType>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type WHERE id = @id", new { id }).SingleOrDefault();
        public NoteType2 FindNoteType2(Guid? id, bool load = false)
        {
            var nt2 = Query<NoteType2>($"SELECT id AS \"Id\", name AS \"Name\", usage_note_total AS \"UsageNoteTotal\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}note_types WHERE id = @id", new { id }).SingleOrDefault();
            if (nt2 == null) return null;
            if (load && nt2.CreationUserId != null) nt2.CreationUser = FindUser2(nt2.CreationUserId);
            if (load && nt2.LastWriteUserId != null) nt2.LastWriteUser = FindUser2(nt2.LastWriteUserId);
            return nt2;
        }
        public ObjectNote FindObjectNote(string id, bool load = false)
        {
            var @on = Query<ObjectNote>($"SELECT id AS \"Id\", note_id AS \"NoteId\", object_id AS \"ObjectId\", type AS \"Type\" FROM uc{(IsMySql ? "_" : ".")}object_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (@on == null) return null;
            if (load && @on.NoteId != null) @on.Note = FindNote3(@on.NoteId);
            return @on;
        }
        public OclcNumber FindOclcNumber(string id, Guid? instanceId, bool load = false)
        {
            var @on = Query<OclcNumber>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}oclc_numbers WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (@on == null) return null;
            if (load && @on.InstanceId != null) @on.Instance = FindInstance2(@on.InstanceId);
            return @on;
        }
        public Order FindOrder(Guid? id, bool load = false) => Query<Order>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order WHERE id = @id", new { id }).SingleOrDefault();
        public Order2 FindOrder2(Guid? id, bool load = false)
        {
            var o2 = Query<Order2>($"SELECT id AS \"Id\", approved AS \"Approved\", approved_by_id AS \"ApprovedById\", approval_date AS \"ApprovalDate\", assigned_to_id AS \"AssignedToId\", bill_to_id AS \"BillToId\", close_reason_reason AS \"CloseReasonReason\", close_reason_note AS \"CloseReasonNote\", date_ordered AS \"OrderDate\", manual_po AS \"Manual\", po_number AS \"Number\", po_number_prefix AS \"NumberPrefix\", po_number_suffix AS \"NumberSuffix\", order_type AS \"OrderType\", re_encumber AS \"Reencumber\", ongoing_interval AS \"OngoingInterval\", ongoing_is_subscription AS \"OngoingIsSubscription\", ongoing_manual_renewal AS \"OngoingManualRenewal\", ongoing_notes AS \"OngoingNotes\", ongoing_review_period AS \"OngoingReviewPeriod\", ongoing_renewal_date AS \"OngoingRenewalDate\", ongoing_review_date AS \"OngoingReviewDate\", ship_to_id AS \"ShipToId\", template_id AS \"TemplateId\", vendor_id AS \"VendorId\", status AS \"Status\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}orders WHERE id = @id", new { id }).SingleOrDefault();
            if (o2 == null) return null;
            if (load && o2.ApprovedById != null) o2.ApprovedBy = FindUser2(o2.ApprovedById);
            if (load && o2.AssignedToId != null) o2.AssignedTo = FindUser2(o2.AssignedToId);
            if (load && o2.BillToId != null) o2.BillTo = FindAddress(o2.BillToId);
            if (load && o2.ShipToId != null) o2.ShipTo = FindAddress(o2.ShipToId);
            if (load && o2.TemplateId != null) o2.Template = FindOrderTemplate2(o2.TemplateId);
            if (load && o2.VendorId != null) o2.Vendor = FindOrganization2(o2.VendorId);
            if (load && o2.CreationUserId != null) o2.CreationUser = FindUser2(o2.CreationUserId);
            if (load && o2.LastWriteUserId != null) o2.LastWriteUser = FindUser2(o2.LastWriteUserId);
            return o2;
        }
        public OrderAcquisitionsUnit FindOrderAcquisitionsUnit(string id, bool load = false)
        {
            var oau = Query<OrderAcquisitionsUnit>($"SELECT id AS \"Id\", order_id AS \"OrderId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (oau == null) return null;
            if (load && oau.OrderId != null) oau.Order = FindOrder2(oau.OrderId);
            if (load && oau.AcquisitionsUnitId != null) oau.AcquisitionsUnit = FindAcquisitionsUnit2(oau.AcquisitionsUnitId);
            return oau;
        }
        public OrderInvoice FindOrderInvoice(Guid? id, bool load = false)
        {
            var oi = Query<OrderInvoice>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", purchaseorderid AS \"Purchaseorderid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship WHERE id = @id", new { id }).SingleOrDefault();
            if (oi == null) return null;
            if (load && oi.Purchaseorderid != null) oi.Order = FindOrder(oi.Purchaseorderid);
            return oi;
        }
        public OrderInvoice2 FindOrderInvoice2(Guid? id, bool load = false)
        {
            var oi2 = Query<OrderInvoice2>($"SELECT id AS \"Id\", order_id AS \"OrderId\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_invoices WHERE id = @id", new { id }).SingleOrDefault();
            if (oi2 == null) return null;
            if (load && oi2.OrderId != null) oi2.Order = FindOrder2(oi2.OrderId);
            if (load && oi2.InvoiceId != null) oi2.Invoice = FindInvoice2(oi2.InvoiceId);
            return oi2;
        }
        public OrderItem FindOrderItem(Guid? id, bool load = false)
        {
            var oi = Query<OrderItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", purchaseorderid AS \"Purchaseorderid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line WHERE id = @id", new { id }).SingleOrDefault();
            if (oi == null) return null;
            if (load && oi.Purchaseorderid != null) oi.Order = FindOrder(oi.Purchaseorderid);
            return oi;
        }
        public OrderItem2 FindOrderItem2(Guid? id, bool load = false)
        {
            var oi2 = Query<OrderItem2>($"SELECT id AS \"Id\", edition AS \"Edition\", checkin_items AS \"CheckinItems\", agreement_id AS \"AgreementId\", acquisition_method AS \"AcquisitionMethod\", cancellation_restriction AS \"CancellationRestriction\", cancellation_restriction_note AS \"CancellationRestrictionNote\", collection AS \"Collection\", cost_list_unit_price AS \"PhysicalUnitListPrice\", cost_list_unit_price_electronic AS \"ElectronicUnitListPrice\", cost_currency AS \"Currency\", cost_additional_cost AS \"AdditionalCost\", cost_discount AS \"Discount\", cost_discount_type AS \"DiscountType\", cost_exchange_rate AS \"ExchangeRate\", cost_quantity_physical AS \"PhysicalQuantity\", cost_quantity_electronic AS \"ElectronicQuantity\", cost_po_line_estimated_price AS \"EstimatedPrice\", cost_fyro_adjustment_amount AS \"FiscalYearRolloverAdjustmentAmount\", description AS \"InternalNote\", details_receiving_note AS \"ReceivingNote\", details_subscription_from AS \"SubscriptionFrom\", details_subscription_interval AS \"SubscriptionInterval\", details_subscription_to AS \"SubscriptionTo\", donor AS \"Donor\", eresource_activated AS \"EresourceActivated\", eresource_activation_due AS \"EresourceActivationDue\", eresource_create_inventory AS \"EresourceCreateInventory\", eresource_trial AS \"EresourceTrial\", eresource_expected_activation AS \"EresourceExpectedActivationDate\", eresource_user_limit AS \"EresourceUserLimit\", eresource_access_provider_id AS \"EresourceAccessProviderId\", eresource_license_code AS \"EresourceLicenseCode\", eresource_license_description AS \"EresourceLicenseDescription\", eresource_license_reference AS \"EresourceLicenseReference\", eresource_material_type_id AS \"EresourceMaterialTypeId\", eresource_resource_url AS \"EresourceResourceUrl\", instance_id AS \"InstanceId\", is_package AS \"IsPackage\", order_format AS \"OrderFormat\", package_po_line_id AS \"PackageOrderItemId\", payment_status AS \"PaymentStatus\", physical_create_inventory AS \"PhysicalCreateInventory\", physical_material_type_id AS \"PhysicalMaterialTypeId\", physical_material_supplier_id AS \"PhysicalMaterialSupplierId\", physical_expected_receipt_date AS \"PhysicalExpectedReceiptDate\", physical_receipt_due AS \"PhysicalReceiptDue\", po_line_description AS \"Description\", po_line_number AS \"Number\", publication_year AS \"PublicationYear\", publisher AS \"Publisher\", order_id AS \"OrderId\", receipt_date AS \"ReceiptDate\", receipt_status AS \"ReceiptStatus\", requester AS \"Requester\", rush AS \"Rush\", selector AS \"Selector\", source AS \"Source\", title_or_package AS \"TitleOrPackage\", vendor_detail_instructions AS \"VendorInstructions\", vendor_detail_note_from_vendor AS \"VendorNote\", vendor_detail_vendor_account AS \"VendorCustomerId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_items WHERE id = @id", new { id }).SingleOrDefault();
            if (oi2 == null) return null;
            if (load && oi2.EresourceAccessProviderId != null) oi2.EresourceAccessProvider = FindOrganization2(oi2.EresourceAccessProviderId);
            if (load && oi2.EresourceMaterialTypeId != null) oi2.EresourceMaterialType = FindMaterialType2(oi2.EresourceMaterialTypeId);
            if (load && oi2.InstanceId != null) oi2.Instance = FindInstance2(oi2.InstanceId);
            if (load && oi2.PackageOrderItemId != null) oi2.PackageOrderItem = FindOrderItem2(oi2.PackageOrderItemId);
            if (load && oi2.PhysicalMaterialTypeId != null) oi2.PhysicalMaterialType = FindMaterialType2(oi2.PhysicalMaterialTypeId);
            if (load && oi2.PhysicalMaterialSupplierId != null) oi2.PhysicalMaterialSupplier = FindOrganization2(oi2.PhysicalMaterialSupplierId);
            if (load && oi2.OrderId != null) oi2.Order = FindOrder2(oi2.OrderId);
            if (load && oi2.CreationUserId != null) oi2.CreationUser = FindUser2(oi2.CreationUserId);
            if (load && oi2.LastWriteUserId != null) oi2.LastWriteUser = FindUser2(oi2.LastWriteUserId);
            return oi2;
        }
        public OrderItemAlert FindOrderItemAlert(string id, bool load = false)
        {
            var oia = Query<OrderItemAlert>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", alert_id AS \"AlertId\" FROM uc{(IsMySql ? "_" : ".")}order_item_alerts WHERE id = @id", new { id }).SingleOrDefault();
            if (oia == null) return null;
            if (load && oia.OrderItemId != null) oia.OrderItem = FindOrderItem2(oia.OrderItemId);
            if (load && oia.AlertId != null) oia.Alert = FindAlert2(oia.AlertId);
            return oia;
        }
        public OrderItemClaim FindOrderItemClaim(string id, bool load = false)
        {
            var oic = Query<OrderItemClaim>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", claimed AS \"Claimed\", sent AS \"Sent\", grace AS \"Grace\" FROM uc{(IsMySql ? "_" : ".")}order_item_claims WHERE id = @id", new { id }).SingleOrDefault();
            if (oic == null) return null;
            if (load && oic.OrderItemId != null) oic.OrderItem = FindOrderItem2(oic.OrderItemId);
            return oic;
        }
        public OrderItemContributor FindOrderItemContributor(string id, bool load = false)
        {
            var oic = Query<OrderItemContributor>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", contributor AS \"Contributor\", contributor_name_type_id AS \"ContributorNameTypeId\" FROM uc{(IsMySql ? "_" : ".")}order_item_contributors WHERE id = @id", new { id }).SingleOrDefault();
            if (oic == null) return null;
            if (load && oic.OrderItemId != null) oic.OrderItem = FindOrderItem2(oic.OrderItemId);
            if (load && oic.ContributorNameTypeId != null) oic.ContributorNameType = FindContributorNameType2(oic.ContributorNameTypeId);
            return oic;
        }
        public OrderItemFund FindOrderItemFund(string id, bool load = false)
        {
            var oif = Query<OrderItemFund>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", expense_class_id AS \"ExpenseClassId\", distribution_type AS \"DistributionType\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions WHERE id = @id", new { id }).SingleOrDefault();
            if (oif == null) return null;
            if (load && oif.OrderItemId != null) oif.OrderItem = FindOrderItem2(oif.OrderItemId);
            if (load && oif.EncumbranceId != null) oif.Encumbrance = FindTransaction2(oif.EncumbranceId);
            if (load && oif.FundId != null) oif.Fund = FindFund2(oif.FundId);
            if (load && oif.ExpenseClassId != null) oif.ExpenseClass = FindExpenseClass2(oif.ExpenseClassId);
            return oif;
        }
        public OrderItemLocation2 FindOrderItemLocation2(string id, bool load = false)
        {
            var oil2 = Query<OrderItemLocation2>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", location_id AS \"LocationId\", holding_id AS \"HoldingId\", quantity AS \"Quantity\", quantity_electronic AS \"ElectronicQuantity\", quantity_physical AS \"PhysicalQuantity\" FROM uc{(IsMySql ? "_" : ".")}order_item_locations WHERE id = @id", new { id }).SingleOrDefault();
            if (oil2 == null) return null;
            if (load && oil2.OrderItemId != null) oil2.OrderItem = FindOrderItem2(oil2.OrderItemId);
            if (load && oil2.LocationId != null) oil2.Location = FindLocation2(oil2.LocationId);
            if (load && oil2.HoldingId != null) oil2.Holding = FindHolding2(oil2.HoldingId);
            return oil2;
        }
        public OrderItemNote FindOrderItemNote(string id, bool load = false)
        {
            var oin = Query<OrderItemNote>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}order_item_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (oin == null) return null;
            if (load && oin.OrderItemId != null) oin.OrderItem = FindOrderItem2(oin.OrderItemId);
            if (load && oin.NoteId != null) oin.Note = FindNote3(oin.NoteId);
            return oin;
        }
        public OrderItemProductId FindOrderItemProductId(string id, bool load = false)
        {
            var oipi = Query<OrderItemProductId>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", qualifier AS \"Qualifier\" FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids WHERE id = @id", new { id }).SingleOrDefault();
            if (oipi == null) return null;
            if (load && oipi.OrderItemId != null) oipi.OrderItem = FindOrderItem2(oipi.OrderItemId);
            if (load && oipi.ProductIdTypeId != null) oipi.ProductIdType = FindIdType2(oipi.ProductIdTypeId);
            return oipi;
        }
        public OrderItemReferenceNumber FindOrderItemReferenceNumber(string id, bool load = false)
        {
            var oirn = Query<OrderItemReferenceNumber>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", ref_number AS \"ReferenceNumber\", ref_number_type AS \"ReferenceNumberType\", vendor_details_source AS \"VendorDetailsSource\" FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers WHERE id = @id", new { id }).SingleOrDefault();
            if (oirn == null) return null;
            if (load && oirn.OrderItemId != null) oirn.OrderItem = FindOrderItem2(oirn.OrderItemId);
            return oirn;
        }
        public OrderItemReportingCode FindOrderItemReportingCode(string id, bool load = false)
        {
            var oirc = Query<OrderItemReportingCode>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", reporting_code_id AS \"ReportingCodeId\" FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes WHERE id = @id", new { id }).SingleOrDefault();
            if (oirc == null) return null;
            if (load && oirc.OrderItemId != null) oirc.OrderItem = FindOrderItem2(oirc.OrderItemId);
            if (load && oirc.ReportingCodeId != null) oirc.ReportingCode = FindReportingCode2(oirc.ReportingCodeId);
            return oirc;
        }
        public OrderItemTag FindOrderItemTag(string id, bool load = false)
        {
            var oit = Query<OrderItemTag>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_item_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (oit == null) return null;
            if (load && oit.OrderItemId != null) oit.OrderItem = FindOrderItem2(oit.OrderItemId);
            return oit;
        }
        public OrderItemVolume FindOrderItemVolume(string id, bool load = false)
        {
            var oiv = Query<OrderItemVolume>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_item_volumes WHERE id = @id", new { id }).SingleOrDefault();
            if (oiv == null) return null;
            if (load && oiv.OrderItemId != null) oiv.OrderItem = FindOrderItem2(oiv.OrderItemId);
            return oiv;
        }
        public OrderNote FindOrderNote(string id, bool load = false)
        {
            var @on = Query<OrderNote>($"SELECT id AS \"Id\", order_id AS \"OrderId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (@on == null) return null;
            if (load && @on.OrderId != null) @on.Order = FindOrder2(@on.OrderId);
            return @on;
        }
        public OrderStatus FindOrderStatus(int? id, bool load = false) => Query<OrderStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}order_statuses WHERE id = @id", new { id }).SingleOrDefault();
        public OrderTag FindOrderTag(string id, bool load = false)
        {
            var ot = Query<OrderTag>($"SELECT id AS \"Id\", order_id AS \"OrderId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (ot == null) return null;
            if (load && ot.OrderId != null) ot.Order = FindOrder2(ot.OrderId);
            return ot;
        }
        public OrderTemplate FindOrderTemplate(Guid? id, bool load = false) => Query<OrderTemplate>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates WHERE id = @id", new { id }).SingleOrDefault();
        public OrderTemplate2 FindOrderTemplate2(Guid? id, bool load = false) => Query<OrderTemplate2>($"SELECT id AS \"Id\", template_name AS \"Name\", template_code AS \"Code\", template_description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_templates WHERE id = @id", new { id }).SingleOrDefault();
        public OrderTransactionSummary FindOrderTransactionSummary(Guid? id, bool load = false) => Query<OrderTransactionSummary>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries WHERE id = @id", new { id }).SingleOrDefault();
        public OrderTransactionSummary2 FindOrderTransactionSummary2(Guid? id, bool load = false)
        {
            var ots2 = Query<OrderTransactionSummary2>($"SELECT id AS \"Id\", num_transactions AS \"NumTransactions\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries WHERE id = @id", new { id }).SingleOrDefault();
            if (ots2 == null) return null;
            if (load && ots2.Id != null) ots2.Order2 = FindOrder2(ots2.Id);
            return ots2;
        }
        public OrderType FindOrderType(int? id, bool load = false) => Query<OrderType>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}order_types WHERE id = @id", new { id }).SingleOrDefault();
        public Organization FindOrganization(Guid? id, bool load = false) => Query<Organization>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations WHERE id = @id", new { id }).SingleOrDefault();
        public Organization2 FindOrganization2(Guid? id, bool load = false)
        {
            var o2 = Query<Organization2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", status AS \"Status\", language AS \"Language\", erp_code AS \"AccountingCode\", payment_method AS \"PaymentMethod\", access_provider AS \"AccessProvider\", governmental AS \"Governmental\", licensor AS \"Licensor\", material_supplier AS \"MaterialSupplier\", claiming_interval AS \"ClaimingInterval\", discount_percent AS \"DiscountPercent\", expected_activation_interval AS \"ExpectedActivationInterval\", expected_invoice_interval AS \"ExpectedInvoiceInterval\", renewal_activation_interval AS \"RenewalActivationInterval\", subscription_interval AS \"SubscriptionInterval\", expected_receipt_interval AS \"ExpectedReceiptInterval\", tax_id AS \"TaxId\", liable_for_vat AS \"LiableForVat\", tax_percentage AS \"TaxPercentage\", edi_vendor_edi_code AS \"EdiVendorEdiCode\", edi_vendor_edi_type AS \"EdiVendorEdiType\", edi_lib_edi_code AS \"EdiLibEdiCode\", edi_lib_edi_type AS \"EdiLibEdiType\", edi_prorate_tax AS \"EdiProrateTax\", edi_prorate_fees AS \"EdiProrateFees\", edi_naming_convention AS \"EdiNamingConvention\", edi_send_acct_num AS \"EdiSendAcctNum\", edi_support_order AS \"EdiSupportOrder\", edi_support_invoice AS \"EdiSupportInvoice\", edi_notes AS \"EdiNotes\", edi_ftp_ftp_format AS \"EdiFtpFtpFormat\", edi_ftp_server_address AS \"EdiFtpServerAddress\", edi_ftp_username AS \"EdiFtpUsername\", edi_ftp_password AS \"EdiFtpPassword\", edi_ftp_ftp_mode AS \"EdiFtpFtpMode\", edi_ftp_ftp_conn_mode AS \"EdiFtpFtpConnMode\", edi_ftp_ftp_port AS \"EdiFtpFtpPort\", edi_ftp_order_directory AS \"EdiFtpOrderDirectory\", edi_ftp_invoice_directory AS \"EdiFtpInvoiceDirectory\", edi_ftp_notes AS \"EdiFtpNotes\", edi_job_schedule_edi AS \"EdiJobScheduleEdi\", edi_job_scheduling_date AS \"EdiJobSchedulingDate\", edi_job_time AS \"EdiJobTime\", edi_job_is_monday AS \"EdiJobIsMonday\", edi_job_is_tuesday AS \"EdiJobIsTuesday\", edi_job_is_wednesday AS \"EdiJobIsWednesday\", edi_job_is_thursday AS \"EdiJobIsThursday\", edi_job_is_friday AS \"EdiJobIsFriday\", edi_job_is_saturday AS \"EdiJobIsSaturday\", edi_job_is_sunday AS \"EdiJobIsSunday\", edi_job_send_to_emails AS \"EdiJobSendToEmails\", edi_job_notify_all_edi AS \"EdiJobNotifyAllEdi\", edi_job_notify_invoice_only AS \"EdiJobNotifyInvoiceOnly\", edi_job_notify_error_only AS \"EdiJobNotifyErrorOnly\", edi_job_scheduling_notes AS \"EdiJobSchedulingNotes\", is_vendor AS \"IsVendor\", san_code AS \"SanCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}organizations WHERE id = @id", new { id }).SingleOrDefault();
            if (o2 == null) return null;
            if (load && o2.CreationUserId != null) o2.CreationUser = FindUser2(o2.CreationUserId);
            if (load && o2.LastWriteUserId != null) o2.LastWriteUser = FindUser2(o2.LastWriteUserId);
            return o2;
        }
        public OrganizationAccount FindOrganizationAccount(string id, bool load = false)
        {
            var oa = Query<OrganizationAccount>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", name AS \"Name\", account_no AS \"AccountNumber\", description AS \"Description\", app_system_no AS \"AppSystemNumber\", payment_method AS \"PaymentMethod\", account_status AS \"AccountStatus\", contact_info AS \"ContactInfo\", library_code AS \"LibraryCode\", library_edi_code AS \"LibraryEdiCode\", notes AS \"Notes\" FROM uc{(IsMySql ? "_" : ".")}organization_accounts WHERE id = @id", new { id }).SingleOrDefault();
            if (oa == null) return null;
            if (load && oa.OrganizationId != null) oa.Organization = FindOrganization2(oa.OrganizationId);
            return oa;
        }
        public OrganizationAccountAcquisitionsUnit FindOrganizationAccountAcquisitionsUnit(string id, bool load = false)
        {
            var oaau = Query<OrganizationAccountAcquisitionsUnit>($"SELECT id AS \"Id\", organization_account_id AS \"OrganizationAccountId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (oaau == null) return null;
            if (load && oaau.OrganizationAccountId != null) oaau.OrganizationAccount = FindOrganizationAccount(oaau.OrganizationAccountId);
            if (load && oaau.AcquisitionsUnitId != null) oaau.AcquisitionsUnit = FindAcquisitionsUnit2(oaau.AcquisitionsUnitId);
            return oaau;
        }
        public OrganizationAcquisitionsUnit FindOrganizationAcquisitionsUnit(string id, bool load = false)
        {
            var oau = Query<OrganizationAcquisitionsUnit>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (oau == null) return null;
            if (load && oau.OrganizationId != null) oau.Organization = FindOrganization2(oau.OrganizationId);
            if (load && oau.AcquisitionsUnitId != null) oau.AcquisitionsUnit = FindAcquisitionsUnit2(oau.AcquisitionsUnitId);
            return oau;
        }
        public OrganizationAddress FindOrganizationAddress(string id, bool load = false)
        {
            var oa = Query<OrganizationAddress>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", state_region AS \"State\", zip_code AS \"PostalCode\", country AS \"CountryCode\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_addresses WHERE id = @id", new { id }).SingleOrDefault();
            if (oa == null) return null;
            if (load && oa.OrganizationId != null) oa.Organization = FindOrganization2(oa.OrganizationId);
            if (load && oa.CreationUserId != null) oa.CreationUser = FindUser2(oa.CreationUserId);
            if (load && oa.LastWriteUserId != null) oa.LastWriteUser = FindUser2(oa.LastWriteUserId);
            return oa;
        }
        public OrganizationAddressCategory FindOrganizationAddressCategory(string id, bool load = false)
        {
            var oac = Query<OrganizationAddressCategory>($"SELECT id AS \"Id\", organization_address_id AS \"OrganizationAddressId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_address_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (oac == null) return null;
            if (load && oac.OrganizationAddressId != null) oac.OrganizationAddress = FindOrganizationAddress(oac.OrganizationAddressId);
            if (load && oac.CategoryId != null) oac.Category = FindCategory2(oac.CategoryId);
            return oac;
        }
        public OrganizationAgreement FindOrganizationAgreement(string id, bool load = false)
        {
            var oa = Query<OrganizationAgreement>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", name AS \"Name\", discount AS \"Discount\", reference_url AS \"ReferenceUrl\", notes AS \"Notes\" FROM uc{(IsMySql ? "_" : ".")}organization_agreements WHERE id = @id", new { id }).SingleOrDefault();
            if (oa == null) return null;
            if (load && oa.OrganizationId != null) oa.Organization = FindOrganization2(oa.OrganizationId);
            return oa;
        }
        public OrganizationAlias FindOrganizationAlias(string id, bool load = false)
        {
            var oa = Query<OrganizationAlias>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", value AS \"Value\", description AS \"Description\" FROM uc{(IsMySql ? "_" : ".")}organization_aliases WHERE id = @id", new { id }).SingleOrDefault();
            if (oa == null) return null;
            if (load && oa.OrganizationId != null) oa.Organization = FindOrganization2(oa.OrganizationId);
            return oa;
        }
        public OrganizationChangelog FindOrganizationChangelog(string id, bool load = false)
        {
            var oc = Query<OrganizationChangelog>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", description AS \"Description\", timestamp AS \"Timestamp\" FROM uc{(IsMySql ? "_" : ".")}organization_changelogs WHERE id = @id", new { id }).SingleOrDefault();
            if (oc == null) return null;
            if (load && oc.OrganizationId != null) oc.Organization = FindOrganization2(oc.OrganizationId);
            return oc;
        }
        public OrganizationContact FindOrganizationContact(string id, bool load = false)
        {
            var oc = Query<OrganizationContact>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", contact_id AS \"ContactId\" FROM uc{(IsMySql ? "_" : ".")}organization_contacts WHERE id = @id", new { id }).SingleOrDefault();
            if (oc == null) return null;
            if (load && oc.OrganizationId != null) oc.Organization = FindOrganization2(oc.OrganizationId);
            if (load && oc.ContactId != null) oc.Contact = FindContact2(oc.ContactId);
            return oc;
        }
        public OrganizationEmail FindOrganizationEmail(string id, bool load = false)
        {
            var oe = Query<OrganizationEmail>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_emails WHERE id = @id", new { id }).SingleOrDefault();
            if (oe == null) return null;
            if (load && oe.OrganizationId != null) oe.Organization = FindOrganization2(oe.OrganizationId);
            if (load && oe.CreationUserId != null) oe.CreationUser = FindUser2(oe.CreationUserId);
            if (load && oe.LastWriteUserId != null) oe.LastWriteUser = FindUser2(oe.LastWriteUserId);
            return oe;
        }
        public OrganizationEmailCategory FindOrganizationEmailCategory(string id, bool load = false)
        {
            var oec = Query<OrganizationEmailCategory>($"SELECT id AS \"Id\", organization_email_id AS \"OrganizationEmailId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_email_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (oec == null) return null;
            if (load && oec.OrganizationEmailId != null) oec.OrganizationEmail = FindOrganizationEmail(oec.OrganizationEmailId);
            if (load && oec.CategoryId != null) oec.Category = FindCategory2(oec.CategoryId);
            return oec;
        }
        public OrganizationInterface FindOrganizationInterface(string id, bool load = false)
        {
            var oi = Query<OrganizationInterface>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", interface_id AS \"InterfaceId\" FROM uc{(IsMySql ? "_" : ".")}organization_interfaces WHERE id = @id", new { id }).SingleOrDefault();
            if (oi == null) return null;
            if (load && oi.OrganizationId != null) oi.Organization = FindOrganization2(oi.OrganizationId);
            if (load && oi.InterfaceId != null) oi.Interface = FindInterface2(oi.InterfaceId);
            return oi;
        }
        public OrganizationNote FindOrganizationNote(string id, bool load = false)
        {
            var @on = Query<OrganizationNote>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}organization_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (@on == null) return null;
            if (load && @on.OrganizationId != null) @on.Organization = FindOrganization2(@on.OrganizationId);
            if (load && @on.NoteId != null) @on.Note = FindNote3(@on.NoteId);
            return @on;
        }
        public OrganizationPhoneNumber FindOrganizationPhoneNumber(string id, bool load = false)
        {
            var opn = Query<OrganizationPhoneNumber>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", phone_number AS \"PhoneNumber\", type AS \"Type\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers WHERE id = @id", new { id }).SingleOrDefault();
            if (opn == null) return null;
            if (load && opn.OrganizationId != null) opn.Organization = FindOrganization2(opn.OrganizationId);
            if (load && opn.CreationUserId != null) opn.CreationUser = FindUser2(opn.CreationUserId);
            if (load && opn.LastWriteUserId != null) opn.LastWriteUser = FindUser2(opn.LastWriteUserId);
            return opn;
        }
        public OrganizationPhoneNumberCategory FindOrganizationPhoneNumberCategory(string id, bool load = false)
        {
            var opnc = Query<OrganizationPhoneNumberCategory>($"SELECT id AS \"Id\", organization_phone_number_id AS \"OrganizationPhoneNumberId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (opnc == null) return null;
            if (load && opnc.OrganizationPhoneNumberId != null) opnc.OrganizationPhoneNumber = FindOrganizationPhoneNumber(opnc.OrganizationPhoneNumberId);
            if (load && opnc.CategoryId != null) opnc.Category = FindCategory2(opnc.CategoryId);
            return opnc;
        }
        public OrganizationTag FindOrganizationTag(string id, bool load = false)
        {
            var ot = Query<OrganizationTag>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}organization_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (ot == null) return null;
            if (load && ot.OrganizationId != null) ot.Organization = FindOrganization2(ot.OrganizationId);
            return ot;
        }
        public OrganizationUrl FindOrganizationUrl(string id, bool load = false)
        {
            var ou = Query<OrganizationUrl>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", language AS \"Language\", is_primary AS \"IsPrimary\", notes AS \"Notes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_urls WHERE id = @id", new { id }).SingleOrDefault();
            if (ou == null) return null;
            if (load && ou.OrganizationId != null) ou.Organization = FindOrganization2(ou.OrganizationId);
            if (load && ou.CreationUserId != null) ou.CreationUser = FindUser2(ou.CreationUserId);
            if (load && ou.LastWriteUserId != null) ou.LastWriteUser = FindUser2(ou.LastWriteUserId);
            return ou;
        }
        public OrganizationUrlCategory FindOrganizationUrlCategory(string id, bool load = false)
        {
            var ouc = Query<OrganizationUrlCategory>($"SELECT id AS \"Id\", organization_url_id AS \"OrganizationUrlId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_url_categories WHERE id = @id", new { id }).SingleOrDefault();
            if (ouc == null) return null;
            if (load && ouc.OrganizationUrlId != null) ouc.OrganizationUrl = FindOrganizationUrl(ouc.OrganizationUrlId);
            if (load && ouc.CategoryId != null) ouc.Category = FindCategory2(ouc.CategoryId);
            return ouc;
        }
        public OverdueFinePolicy FindOverdueFinePolicy(Guid? id, bool load = false) => Query<OverdueFinePolicy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy WHERE id = @id", new { id }).SingleOrDefault();
        public OverdueFinePolicy2 FindOverdueFinePolicy2(Guid? id, bool load = false)
        {
            var ofp2 = Query<OverdueFinePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", overdue_fine_quantity AS \"OverdueFineQuantity\", overdue_fine_interval_id AS \"OverdueFineInterval\", count_closed AS \"CountClosed\", max_overdue_fine AS \"MaxOverdueFine\", forgive_overdue_fine AS \"ForgiveOverdueFine\", overdue_recall_fine_quantity AS \"OverdueRecallFineQuantity\", overdue_recall_fine_interval_id AS \"OverdueRecallFineInterval\", grace_period_recall AS \"GracePeriodRecall\", max_overdue_recall_fine AS \"MaxOverdueRecallFine\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (ofp2 == null) return null;
            if (load && ofp2.CreationUserId != null) ofp2.CreationUser = FindUser2(ofp2.CreationUserId);
            if (load && ofp2.LastWriteUserId != null) ofp2.LastWriteUser = FindUser2(ofp2.LastWriteUserId);
            return ofp2;
        }
        public Owner FindOwner(Guid? id, bool load = false) => Query<Owner>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners WHERE id = @id", new { id }).SingleOrDefault();
        public Owner2 FindOwner2(Guid? id, bool load = false)
        {
            var o2 = Query<Owner2>($"SELECT id AS \"Id\", owner AS \"Name\", \"desc\" AS \"Description\", default_charge_notice_id AS \"DefaultChargeNoticeId\", default_action_notice_id AS \"DefaultActionNoticeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}owners WHERE id = @id", new { id }).SingleOrDefault();
            if (o2 == null) return null;
            if (load && o2.DefaultChargeNoticeId != null) o2.DefaultChargeNotice = FindTemplate2(o2.DefaultChargeNoticeId);
            if (load && o2.DefaultActionNoticeId != null) o2.DefaultActionNotice = FindTemplate2(o2.DefaultActionNoticeId);
            if (load && o2.CreationUserId != null) o2.CreationUser = FindUser2(o2.CreationUserId);
            if (load && o2.LastWriteUserId != null) o2.LastWriteUser = FindUser2(o2.LastWriteUserId);
            return o2;
        }
        public PatronActionSession FindPatronActionSession(Guid? id, bool load = false) => Query<PatronActionSession>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session WHERE id = @id", new { id }).SingleOrDefault();
        public PatronActionSession2 FindPatronActionSession2(Guid? id, bool load = false)
        {
            var pas2 = Query<PatronActionSession2>($"SELECT id AS \"Id\", patron_id AS \"PatronId\", loan_id AS \"LoanId\", action_type AS \"ActionType\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions WHERE id = @id", new { id }).SingleOrDefault();
            if (pas2 == null) return null;
            if (load && pas2.PatronId != null) pas2.Patron = FindUser2(pas2.PatronId);
            if (load && pas2.LoanId != null) pas2.Loan = FindLoan2(pas2.LoanId);
            if (load && pas2.CreationUserId != null) pas2.CreationUser = FindUser2(pas2.CreationUserId);
            if (load && pas2.LastWriteUserId != null) pas2.LastWriteUser = FindUser2(pas2.LastWriteUserId);
            return pas2;
        }
        public PatronNoticePolicy FindPatronNoticePolicy(Guid? id, bool load = false) => Query<PatronNoticePolicy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy WHERE id = @id", new { id }).SingleOrDefault();
        public PatronNoticePolicy2 FindPatronNoticePolicy2(Guid? id, bool load = false)
        {
            var pnp2 = Query<PatronNoticePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", active AS \"Active\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (pnp2 == null) return null;
            if (load && pnp2.CreationUserId != null) pnp2.CreationUser = FindUser2(pnp2.CreationUserId);
            if (load && pnp2.LastWriteUserId != null) pnp2.LastWriteUser = FindUser2(pnp2.LastWriteUserId);
            return pnp2;
        }
        public PatronNoticePolicyFeeFineNotice FindPatronNoticePolicyFeeFineNotice(string id, bool load = false)
        {
            var pnpffn = Query<PatronNoticePolicyFeeFineNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices WHERE id = @id", new { id }).SingleOrDefault();
            if (pnpffn == null) return null;
            if (load && pnpffn.PatronNoticePolicyId != null) pnpffn.PatronNoticePolicy = FindPatronNoticePolicy2(pnpffn.PatronNoticePolicyId);
            if (load && pnpffn.TemplateId != null) pnpffn.Template = FindTemplate2(pnpffn.TemplateId);
            return pnpffn;
        }
        public PatronNoticePolicyLoanNotice FindPatronNoticePolicyLoanNotice(string id, bool load = false)
        {
            var pnpln = Query<PatronNoticePolicyLoanNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices WHERE id = @id", new { id }).SingleOrDefault();
            if (pnpln == null) return null;
            if (load && pnpln.PatronNoticePolicyId != null) pnpln.PatronNoticePolicy = FindPatronNoticePolicy2(pnpln.PatronNoticePolicyId);
            if (load && pnpln.TemplateId != null) pnpln.Template = FindTemplate2(pnpln.TemplateId);
            return pnpln;
        }
        public PatronNoticePolicyRequestNotice FindPatronNoticePolicyRequestNotice(string id, bool load = false)
        {
            var pnprn = Query<PatronNoticePolicyRequestNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices WHERE id = @id", new { id }).SingleOrDefault();
            if (pnprn == null) return null;
            if (load && pnprn.PatronNoticePolicyId != null) pnprn.PatronNoticePolicy = FindPatronNoticePolicy2(pnprn.PatronNoticePolicyId);
            if (load && pnprn.TemplateId != null) pnprn.Template = FindTemplate2(pnprn.TemplateId);
            return pnprn;
        }
        public Payment FindPayment(Guid? id, bool load = false) => Query<Payment>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions WHERE id = @id", new { id }).SingleOrDefault();
        public Payment2 FindPayment2(Guid? id, bool load = false)
        {
            var p2 = Query<Payment2>($"SELECT id AS \"Id\", date_action AS \"CreationTime\", type_action AS \"TypeAction\", comments AS \"Comments\", notify AS \"Notify\", amount_action AS \"Amount\", balance AS \"RemainingAmount\", transaction_information AS \"TransactionInformation\", service_point AS \"ServicePoint\", source AS \"Source\", payment_method AS \"PaymentMethod\", fee_id AS \"FeeId\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}payments WHERE id = @id", new { id }).SingleOrDefault();
            if (p2 == null) return null;
            if (load && p2.FeeId != null) p2.Fee = FindFee2(p2.FeeId);
            if (load && p2.UserId != null) p2.User = FindUser2(p2.UserId);
            return p2;
        }
        public PaymentMethod FindPaymentMethod(Guid? id, bool load = false) => Query<PaymentMethod>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments WHERE id = @id", new { id }).SingleOrDefault();
        public PaymentMethod2 FindPaymentMethod2(Guid? id, bool load = false)
        {
            var pm2 = Query<PaymentMethod2>($"SELECT id AS \"Id\", name AS \"Name\", allowed_refund_method AS \"AllowedRefundMethod\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", owner_id AS \"OwnerId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}payment_methods WHERE id = @id", new { id }).SingleOrDefault();
            if (pm2 == null) return null;
            if (load && pm2.CreationUserId != null) pm2.CreationUser = FindUser2(pm2.CreationUserId);
            if (load && pm2.LastWriteUserId != null) pm2.LastWriteUser = FindUser2(pm2.LastWriteUserId);
            if (load && pm2.OwnerId != null) pm2.Owner = FindOwner2(pm2.OwnerId);
            return pm2;
        }
        public PaymentType FindPaymentType(int? id, bool load = false) => Query<PaymentType>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}payment_types WHERE id = @id", new { id }).SingleOrDefault();
        public Permission FindPermission(Guid? id, bool load = false) => Query<Permission>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions WHERE id = @id", new { id }).SingleOrDefault();
        public Permission2 FindPermission2(Guid? id, bool load = false)
        {
            var p2 = Query<Permission2>($"SELECT id AS \"Id\", permission_name AS \"Code\", display_name AS \"Name\", description AS \"Description\", mutable AS \"Editable\", visible AS \"Visible\", dummy AS \"Dummy\", deprecated AS \"Deprecated\", module_name AS \"ModuleName\", module_version AS \"ModuleVersion\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions WHERE id = @id", new { id }).SingleOrDefault();
            if (p2 == null) return null;
            if (load && p2.CreationUserId != null) p2.CreationUser = FindUser2(p2.CreationUserId);
            if (load && p2.LastWriteUserId != null) p2.LastWriteUser = FindUser2(p2.LastWriteUserId);
            return p2;
        }
        public PermissionChildOf FindPermissionChildOf(string id, bool load = false)
        {
            var pco = Query<PermissionChildOf>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_child_of WHERE id = @id", new { id }).SingleOrDefault();
            if (pco == null) return null;
            if (load && pco.PermissionId != null) pco.Permission = FindPermission2(pco.PermissionId);
            return pco;
        }
        public PermissionGrantedTo FindPermissionGrantedTo(string id, bool load = false)
        {
            var pgt = Query<PermissionGrantedTo>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", permissions_user_id AS \"PermissionsUserId\" FROM uc{(IsMySql ? "_" : ".")}permission_granted_to WHERE id = @id", new { id }).SingleOrDefault();
            if (pgt == null) return null;
            if (load && pgt.PermissionId != null) pgt.Permission = FindPermission2(pgt.PermissionId);
            if (load && pgt.PermissionsUserId != null) pgt.PermissionsUser = FindPermissionsUser2(pgt.PermissionsUserId);
            return pgt;
        }
        public PermissionSubPermission FindPermissionSubPermission(string id, bool load = false)
        {
            var psp = Query<PermissionSubPermission>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions WHERE id = @id", new { id }).SingleOrDefault();
            if (psp == null) return null;
            if (load && psp.PermissionId != null) psp.Permission = FindPermission2(psp.PermissionId);
            return psp;
        }
        public PermissionsUser FindPermissionsUser(Guid? id, bool load = false) => Query<PermissionsUser>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users WHERE id = @id", new { id }).SingleOrDefault();
        public PermissionsUser2 FindPermissionsUser2(Guid? id, bool load = false)
        {
            var pu2 = Query<PermissionsUser2>($"SELECT id AS \"Id\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions_users WHERE id = @id", new { id }).SingleOrDefault();
            if (pu2 == null) return null;
            if (load && pu2.UserId != null) pu2.User = FindUser2(pu2.UserId);
            if (load && pu2.CreationUserId != null) pu2.CreationUser = FindUser2(pu2.CreationUserId);
            if (load && pu2.LastWriteUserId != null) pu2.LastWriteUser = FindUser2(pu2.LastWriteUserId);
            return pu2;
        }
        public PermissionsUserPermission FindPermissionsUserPermission(string id, bool load = false)
        {
            var pup = Query<PermissionsUserPermission>($"SELECT id AS \"Id\", permissions_user_id AS \"PermissionsUserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions WHERE id = @id", new { id }).SingleOrDefault();
            if (pup == null) return null;
            if (load && pup.PermissionsUserId != null) pup.PermissionsUser = FindPermissionsUser2(pup.PermissionsUserId);
            return pup;
        }
        public PermissionTag FindPermissionTag(string id, bool load = false)
        {
            var pt = Query<PermissionTag>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (pt == null) return null;
            if (load && pt.PermissionId != null) pt.Permission = FindPermission2(pt.PermissionId);
            return pt;
        }
        public PhysicalDescription FindPhysicalDescription(string id, Guid? instanceId, bool load = false)
        {
            var pd = Query<PhysicalDescription>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}physical_descriptions WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (pd == null) return null;
            if (load && pd.InstanceId != null) pd.Instance = FindInstance2(pd.InstanceId);
            return pd;
        }
        public PrecedingSucceedingTitle FindPrecedingSucceedingTitle(Guid? id, bool load = false)
        {
            var pst = Query<PrecedingSucceedingTitle>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", precedinginstanceid AS \"Precedinginstanceid\", succeedinginstanceid AS \"Succeedinginstanceid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title WHERE id = @id", new { id }).SingleOrDefault();
            if (pst == null) return null;
            if (load && pst.Precedinginstanceid != null) pst.Instance = FindInstance(pst.Precedinginstanceid);
            if (load && pst.Succeedinginstanceid != null) pst.Instance1 = FindInstance(pst.Succeedinginstanceid);
            return pst;
        }
        public PrecedingSucceedingTitle2 FindPrecedingSucceedingTitle2(Guid? id, bool load = false)
        {
            var pst2 = Query<PrecedingSucceedingTitle2>($"SELECT id AS \"Id\", preceding_instance_id AS \"PrecedingInstanceId\", succeeding_instance_id AS \"SucceedingInstanceId\", title AS \"Title\", hrid AS \"Hrid\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles WHERE id = @id", new { id }).SingleOrDefault();
            if (pst2 == null) return null;
            if (load && pst2.PrecedingInstanceId != null) pst2.PrecedingInstance = FindInstance2(pst2.PrecedingInstanceId);
            if (load && pst2.SucceedingInstanceId != null) pst2.SucceedingInstance = FindInstance2(pst2.SucceedingInstanceId);
            if (load && pst2.CreationUserId != null) pst2.CreationUser = FindUser2(pst2.CreationUserId);
            if (load && pst2.LastWriteUserId != null) pst2.LastWriteUser = FindUser2(pst2.LastWriteUserId);
            return pst2;
        }
        public PrecedingSucceedingTitleIdentifier FindPrecedingSucceedingTitleIdentifier(string id, bool load = false)
        {
            var psti = Query<PrecedingSucceedingTitleIdentifier>($"SELECT id AS \"Id\", preceding_succeeding_title_id AS \"PrecedingSucceedingTitleId\", value AS \"Value\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers WHERE id = @id", new { id }).SingleOrDefault();
            if (psti == null) return null;
            if (load && psti.PrecedingSucceedingTitleId != null) psti.PrecedingSucceedingTitle = FindPrecedingSucceedingTitle2(psti.PrecedingSucceedingTitleId);
            if (load && psti.IdentifierTypeId != null) psti.IdentifierType = FindIdType2(psti.IdentifierTypeId);
            return psti;
        }
        public Prefix FindPrefix(Guid? id, bool load = false) => Query<Prefix>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes WHERE id = @id", new { id }).SingleOrDefault();
        public Prefix2 FindPrefix2(Guid? id, bool load = false) => Query<Prefix2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}prefixes WHERE id = @id", new { id }).SingleOrDefault();
        public Printer FindPrinter(Guid? id, bool load = false)
        {
            var p = Query<Printer>($"SELECT id AS \"Id\", computer_name AS \"ComputerName\", name AS \"Name\", \"left\" AS \"Left\", \"top\" AS \"Top\", width AS \"Width\", height AS \"Height\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}printers WHERE id = @id", new { id }).SingleOrDefault();
            if (p == null) return null;
            if (load && p.CreationUserId != null) p.CreationUser = FindUser2(p.CreationUserId);
            if (load && p.LastWriteUserId != null) p.LastWriteUser = FindUser2(p.LastWriteUserId);
            return p;
        }
        public Proxy FindProxy(Guid? id, bool load = false) => Query<Proxy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor WHERE id = @id", new { id }).SingleOrDefault();
        public Proxy2 FindProxy2(Guid? id, bool load = false)
        {
            var p2 = Query<Proxy2>($"SELECT id AS \"Id\", user_id AS \"UserId\", proxy_user_id AS \"ProxyUserId\", request_for_sponsor AS \"RequestForSponsor\", notifications_to AS \"NotificationsTo\", accrue_to AS \"AccrueTo\", status AS \"Status\", expiration_date AS \"ExpirationDate\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}proxies WHERE id = @id", new { id }).SingleOrDefault();
            if (p2 == null) return null;
            if (load && p2.UserId != null) p2.User = FindUser2(p2.UserId);
            if (load && p2.ProxyUserId != null) p2.ProxyUser = FindUser2(p2.ProxyUserId);
            if (load && p2.CreationUserId != null) p2.CreationUser = FindUser2(p2.CreationUserId);
            if (load && p2.LastWriteUserId != null) p2.LastWriteUser = FindUser2(p2.LastWriteUserId);
            return p2;
        }
        public Publication FindPublication(string id, Guid? instanceId, bool load = false)
        {
            var p = Query<Publication>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", publisher AS \"Publisher\", place AS \"Place\", date_of_publication AS \"PublicationYear\", role AS \"Role\" FROM uc{(IsMySql ? "_" : ".")}publications WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (p == null) return null;
            if (load && p.InstanceId != null) p.Instance = FindInstance2(p.InstanceId);
            return p;
        }
        public PublicationFrequency FindPublicationFrequency(string id, Guid? instanceId, bool load = false)
        {
            var pf = Query<PublicationFrequency>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}publication_frequency WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (pf == null) return null;
            if (load && pf.InstanceId != null) pf.Instance = FindInstance2(pf.InstanceId);
            return pf;
        }
        public PublicationRange FindPublicationRange(string id, Guid? instanceId, bool load = false)
        {
            var pr = Query<PublicationRange>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}publication_range WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (pr == null) return null;
            if (load && pr.InstanceId != null) pr.Instance = FindInstance2(pr.InstanceId);
            return pr;
        }
        public RawRecord FindRawRecord(Guid? id, bool load = false)
        {
            var rr = Query<RawRecord>($"SELECT id AS \"Id\", content AS \"Content\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb WHERE id = @id", new { id }).SingleOrDefault();
            if (rr == null) return null;
            if (load && rr.Id != null) rr.Record = FindRecord(rr.Id);
            return rr;
        }
        public RawRecord2 FindRawRecord2(Guid? id, bool load = false)
        {
            var rr2 = Query<RawRecord2>($"SELECT id AS \"Id\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}raw_records WHERE id = @id", new { id }).SingleOrDefault();
            if (rr2 == null) return null;
            if (load && rr2.Id != null) rr2.Record2 = FindRecord2(rr2.Id);
            return rr2;
        }
        public ReceiptStatus FindReceiptStatus(int? id, bool load = false) => Query<ReceiptStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}receipt_statuses WHERE id = @id", new { id }).SingleOrDefault();
        public Receiving FindReceiving(Guid? id, bool load = false)
        {
            var r = Query<Receiving>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", polineid AS \"Polineid\", titleid AS \"Titleid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces WHERE id = @id", new { id }).SingleOrDefault();
            if (r == null) return null;
            if (load && r.Polineid != null) r.OrderItem = FindOrderItem(r.Polineid);
            if (load && r.Titleid != null) r.Title = FindTitle(r.Titleid);
            return r;
        }
        public Receiving2 FindReceiving2(Guid? id, bool load = false)
        {
            var r2 = Query<Receiving2>($"SELECT id AS \"Id\", caption AS \"Caption\", comment AS \"Comment\", format AS \"Format\", item_id AS \"ItemId\", location_id AS \"LocationId\", po_line_id AS \"OrderItemId\", title_id AS \"TitleId\", holding_id AS \"HoldingId\", display_on_holding AS \"DisplayOnHolding\", enumeration AS \"Enumeration\", chronology AS \"Chronology\", discovery_suppress AS \"DiscoverySuppress\", receiving_status AS \"ReceivingStatus\", supplement AS \"Supplement\", receipt_date AS \"ReceiptTime\", received_date AS \"ReceiveTime\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}receivings WHERE id = @id", new { id }).SingleOrDefault();
            if (r2 == null) return null;
            if (load && r2.ItemId != null) r2.Item = FindItem2(r2.ItemId);
            if (load && r2.LocationId != null) r2.Location = FindLocation2(r2.LocationId);
            if (load && r2.OrderItemId != null) r2.OrderItem = FindOrderItem2(r2.OrderItemId);
            if (load && r2.TitleId != null) r2.Title = FindTitle2(r2.TitleId);
            if (load && r2.HoldingId != null) r2.Holding = FindHolding2(r2.HoldingId);
            return r2;
        }
        public Record FindRecord(Guid? id, bool load = false)
        {
            var r = Query<Record>($"SELECT id AS \"Id\", snapshot_id AS \"SnapshotId\", matched_id AS \"MatchedId\", generation AS \"Generation\", record_type AS \"RecordType\", external_id AS \"InstanceId\", state AS \"State\", leader_record_status AS \"LeaderRecordStatus\", \"order\" AS \"Order\", suppress_discovery AS \"SuppressDiscovery\", created_by_user_id AS \"CreationUserId\", created_date AS \"CreationTime\", updated_by_user_id AS \"LastWriteUserId\", updated_date AS \"LastWriteTime\", external_hrid AS \"InstanceHrid\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb WHERE id = @id", new { id }).SingleOrDefault();
            if (r == null) return null;
            if (load && r.SnapshotId != null) r.Snapshot = FindSnapshot(r.SnapshotId);
            return r;
        }
        public Record2 FindRecord2(Guid? id, bool load = false)
        {
            var r2 = Query<Record2>($"SELECT id AS \"Id\", snapshot_id AS \"SnapshotId\", matched_id AS \"MatchedId\", generation AS \"Generation\", record_type AS \"RecordType\", instance_id AS \"InstanceId\", state AS \"State\", leader_record_status AS \"LeaderRecordStatus\", \"order\" AS \"Order\", suppress_discovery AS \"SuppressDiscovery\", creation_user_id AS \"CreationUserId\", creation_time AS \"CreationTime\", last_write_user_id AS \"LastWriteUserId\", last_write_time AS \"LastWriteTime\", instance_hrid AS \"InstanceHrid\" FROM uc{(IsMySql ? "_" : ".")}records WHERE id = @id", new { id }).SingleOrDefault();
            if (r2 == null) return null;
            if (load && r2.SnapshotId != null) r2.Snapshot = FindSnapshot2(r2.SnapshotId);
            if (load && r2.InstanceId != null) r2.Instance = FindInstance2(r2.InstanceId);
            if (load && r2.CreationUserId != null) r2.CreationUser = FindUser2(r2.CreationUserId);
            if (load && r2.LastWriteUserId != null) r2.LastWriteUser = FindUser2(r2.LastWriteUserId);
            return r2;
        }
        public RefundReason FindRefundReason(Guid? id, bool load = false) => Query<RefundReason>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds WHERE id = @id", new { id }).SingleOrDefault();
        public RefundReason2 FindRefundReason2(Guid? id, bool load = false)
        {
            var rr2 = Query<RefundReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", account_id AS \"AccountId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}refund_reasons WHERE id = @id", new { id }).SingleOrDefault();
            if (rr2 == null) return null;
            if (load && rr2.CreationUserId != null) rr2.CreationUser = FindUser2(rr2.CreationUserId);
            if (load && rr2.LastWriteUserId != null) rr2.LastWriteUser = FindUser2(rr2.LastWriteUserId);
            if (load && rr2.AccountId != null) rr2.Account = FindFee2(rr2.AccountId);
            return rr2;
        }
        public Relationship FindRelationship(Guid? id, bool load = false)
        {
            var r = Query<Relationship>($"SELECT id AS \"Id\", super_instance_id AS \"SuperInstanceId\", sub_instance_id AS \"SubInstanceId\", instance_relationship_type_id AS \"InstanceRelationshipTypeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}relationships WHERE id = @id", new { id }).SingleOrDefault();
            if (r == null) return null;
            if (load && r.SuperInstanceId != null) r.SuperInstance = FindInstance2(r.SuperInstanceId);
            if (load && r.SubInstanceId != null) r.SubInstance = FindInstance2(r.SubInstanceId);
            if (load && r.InstanceRelationshipTypeId != null) r.InstanceRelationshipType = FindRelationshipType(r.InstanceRelationshipTypeId);
            if (load && r.CreationUserId != null) r.CreationUser = FindUser2(r.CreationUserId);
            if (load && r.LastWriteUserId != null) r.LastWriteUser = FindUser2(r.LastWriteUserId);
            return r;
        }
        public RelationshipType FindRelationshipType(Guid? id, bool load = false)
        {
            var rt = Query<RelationshipType>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}relationship_types WHERE id = @id", new { id }).SingleOrDefault();
            if (rt == null) return null;
            if (load && rt.CreationUserId != null) rt.CreationUser = FindUser2(rt.CreationUserId);
            if (load && rt.LastWriteUserId != null) rt.LastWriteUser = FindUser2(rt.LastWriteUserId);
            return rt;
        }
        public ReportingCode FindReportingCode(Guid? id, bool load = false) => Query<ReportingCode>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code WHERE id = @id", new { id }).SingleOrDefault();
        public ReportingCode2 FindReportingCode2(Guid? id, bool load = false) => Query<ReportingCode2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}reporting_codes WHERE id = @id", new { id }).SingleOrDefault();
        public Request FindRequest(Guid? id, bool load = false)
        {
            var r = Query<Request>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", cancellationreasonid AS \"Cancellationreasonid\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request WHERE id = @id", new { id }).SingleOrDefault();
            if (r == null) return null;
            if (load && r.Cancellationreasonid != null) r.CancellationReason = FindCancellationReason(r.Cancellationreasonid);
            return r;
        }
        public Request2 FindRequest2(Guid? id, bool load = false)
        {
            var r2 = Query<Request2>($"SELECT id AS \"Id\", request_type AS \"RequestType\", request_date AS \"RequestDate\", patron_comments AS \"PatronComments\", requester_id AS \"RequesterId\", proxy_user_id AS \"ProxyUserId\", item_id AS \"ItemId\", status AS \"Status\", cancellation_reason_id AS \"CancellationReasonId\", cancelled_by_user_id AS \"CancelledByUserId\", cancellation_additional_information AS \"CancellationAdditionalInformation\", cancelled_date AS \"CancelledDate\", position AS \"Position\", item_title AS \"ItemTitle\", item_barcode AS \"ItemBarcode\", requester_first_name AS \"RequesterFirstName\", requester_last_name AS \"RequesterLastName\", requester_middle_name AS \"RequesterMiddleName\", requester_barcode AS \"RequesterBarcode\", requester_patron_group AS \"RequesterPatronGroup\", proxy_first_name AS \"ProxyFirstName\", proxy_last_name AS \"ProxyLastName\", proxy_middle_name AS \"ProxyMiddleName\", proxy_barcode AS \"ProxyBarcode\", proxy_patron_group AS \"ProxyPatronGroup\", fulfilment_preference AS \"FulfilmentPreference\", delivery_address_type_id AS \"DeliveryAddressTypeId\", request_expiration_date AS \"RequestExpirationDate\", hold_shelf_expiration_date AS \"HoldShelfExpirationDate\", pickup_service_point_id AS \"PickupServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", awaiting_pickup_request_closed_date AS \"AwaitingPickupRequestClosedDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}requests WHERE id = @id", new { id }).SingleOrDefault();
            if (r2 == null) return null;
            if (load && r2.RequesterId != null) r2.Requester = FindUser2(r2.RequesterId);
            if (load && r2.ProxyUserId != null) r2.ProxyUser = FindUser2(r2.ProxyUserId);
            if (load && r2.ItemId != null) r2.Item = FindItem2(r2.ItemId);
            if (load && r2.CancellationReasonId != null) r2.CancellationReason = FindCancellationReason2(r2.CancellationReasonId);
            if (load && r2.CancelledByUserId != null) r2.CancelledByUser = FindUser2(r2.CancelledByUserId);
            if (load && r2.DeliveryAddressTypeId != null) r2.DeliveryAddressType = FindAddressType2(r2.DeliveryAddressTypeId);
            if (load && r2.PickupServicePointId != null) r2.PickupServicePoint = FindServicePoint2(r2.PickupServicePointId);
            if (load && r2.CreationUserId != null) r2.CreationUser = FindUser2(r2.CreationUserId);
            if (load && r2.LastWriteUserId != null) r2.LastWriteUser = FindUser2(r2.LastWriteUserId);
            return r2;
        }
        public RequestIdentifier FindRequestIdentifier(string id, bool load = false)
        {
            var ri = Query<RequestIdentifier>($"SELECT id AS \"Id\", request_id AS \"RequestId\", value AS \"Value\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}request_identifiers WHERE id = @id", new { id }).SingleOrDefault();
            if (ri == null) return null;
            if (load && ri.RequestId != null) ri.Request = FindRequest2(ri.RequestId);
            if (load && ri.IdentifierTypeId != null) ri.IdentifierType = FindIdType2(ri.IdentifierTypeId);
            return ri;
        }
        public RequestNote FindRequestNote(string id, bool load = false)
        {
            var rn = Query<RequestNote>($"SELECT id AS \"Id\", request_id AS \"RequestId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}request_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (rn == null) return null;
            if (load && rn.RequestId != null) rn.Request = FindRequest2(rn.RequestId);
            if (load && rn.NoteId != null) rn.Note = FindNote3(rn.NoteId);
            return rn;
        }
        public RequestPolicy FindRequestPolicy(Guid? id, bool load = false) => Query<RequestPolicy>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy WHERE id = @id", new { id }).SingleOrDefault();
        public RequestPolicy2 FindRequestPolicy2(Guid? id, bool load = false)
        {
            var rp2 = Query<RequestPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_policies WHERE id = @id", new { id }).SingleOrDefault();
            if (rp2 == null) return null;
            if (load && rp2.CreationUserId != null) rp2.CreationUser = FindUser2(rp2.CreationUserId);
            if (load && rp2.LastWriteUserId != null) rp2.LastWriteUser = FindUser2(rp2.LastWriteUserId);
            return rp2;
        }
        public RequestPolicyRequestType FindRequestPolicyRequestType(string id, bool load = false)
        {
            var rprt = Query<RequestPolicyRequestType>($"SELECT id AS \"Id\", request_policy_id AS \"RequestPolicyId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types WHERE id = @id", new { id }).SingleOrDefault();
            if (rprt == null) return null;
            if (load && rprt.RequestPolicyId != null) rprt.RequestPolicy = FindRequestPolicy2(rprt.RequestPolicyId);
            return rprt;
        }
        public RequestTag FindRequestTag(string id, bool load = false)
        {
            var rt = Query<RequestTag>($"SELECT id AS \"Id\", request_id AS \"RequestId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (rt == null) return null;
            if (load && rt.RequestId != null) rt.Request = FindRequest2(rt.RequestId);
            return rt;
        }
        public ScheduledNotice FindScheduledNotice(Guid? id, bool load = false) => Query<ScheduledNotice>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice WHERE id = @id", new { id }).SingleOrDefault();
        public ScheduledNotice2 FindScheduledNotice2(Guid? id, bool load = false)
        {
            var sn2 = Query<ScheduledNotice2>($"SELECT id AS \"Id\", loan_id AS \"LoanId\", request_id AS \"RequestId\", payment_id AS \"PaymentId\", recipient_user_id AS \"RecipientUserId\", next_run_time AS \"NextRunTime\", triggering_event AS \"TriggeringEvent\", notice_config_timing AS \"NoticeConfigTiming\", notice_config_recurring_period_duration AS \"NoticeConfigRecurringPeriodDuration\", notice_config_recurring_period_interval_id AS \"NoticeConfigRecurringPeriodInterval\", notice_config_template_id AS \"NoticeConfigTemplateId\", notice_config_format AS \"NoticeConfigFormat\", notice_config_send_in_real_time AS \"NoticeConfigSendInRealTime\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}scheduled_notices WHERE id = @id", new { id }).SingleOrDefault();
            if (sn2 == null) return null;
            if (load && sn2.LoanId != null) sn2.Loan = FindLoan2(sn2.LoanId);
            if (load && sn2.RequestId != null) sn2.Request = FindRequest2(sn2.RequestId);
            if (load && sn2.PaymentId != null) sn2.Payment = FindPayment2(sn2.PaymentId);
            if (load && sn2.RecipientUserId != null) sn2.RecipientUser = FindUser2(sn2.RecipientUserId);
            if (load && sn2.NoticeConfigTemplateId != null) sn2.NoticeConfigTemplate = FindTemplate2(sn2.NoticeConfigTemplateId);
            if (load && sn2.CreationUserId != null) sn2.CreationUser = FindUser2(sn2.CreationUserId);
            if (load && sn2.LastWriteUserId != null) sn2.LastWriteUser = FindUser2(sn2.LastWriteUserId);
            return sn2;
        }
        public Series FindSeries(string id, Guid? instanceId, bool load = false)
        {
            var s = Query<Series>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}series WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (s == null) return null;
            if (load && s.InstanceId != null) s.Instance = FindInstance2(s.InstanceId);
            return s;
        }
        public ServicePoint FindServicePoint(Guid? id, bool load = false) => Query<ServicePoint>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point WHERE id = @id", new { id }).SingleOrDefault();
        public ServicePoint2 FindServicePoint2(Guid? id, bool load = false)
        {
            var sp2 = Query<ServicePoint2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", discovery_display_name AS \"DiscoveryDisplayName\", description AS \"Description\", shelving_lag_time AS \"ShelvingLagTime\", pickup_location AS \"PickupLocation\", hold_shelf_expiry_period_duration AS \"HoldShelfExpiryPeriodDuration\", hold_shelf_expiry_period_interval_id AS \"HoldShelfExpiryPeriodInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}service_points WHERE id = @id", new { id }).SingleOrDefault();
            if (sp2 == null) return null;
            if (load && sp2.CreationUserId != null) sp2.CreationUser = FindUser2(sp2.CreationUserId);
            if (load && sp2.LastWriteUserId != null) sp2.LastWriteUser = FindUser2(sp2.LastWriteUserId);
            return sp2;
        }
        public ServicePointOwner FindServicePointOwner(string id, bool load = false)
        {
            var spo = Query<ServicePointOwner>($"SELECT id AS \"Id\", owner_id AS \"OwnerId\", service_point_id AS \"ServicePointId\", label AS \"Label\" FROM uc{(IsMySql ? "_" : ".")}service_point_owners WHERE id = @id", new { id }).SingleOrDefault();
            if (spo == null) return null;
            if (load && spo.OwnerId != null) spo.Owner = FindOwner2(spo.OwnerId);
            if (load && spo.ServicePointId != null) spo.ServicePoint = FindServicePoint2(spo.ServicePointId);
            return spo;
        }
        public ServicePointStaffSlip FindServicePointStaffSlip(string id, bool load = false)
        {
            var spss = Query<ServicePointStaffSlip>($"SELECT id AS \"Id\", service_point_id AS \"ServicePointId\", staff_slip_id AS \"StaffSlipId\", print_by_default AS \"PrintByDefault\" FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips WHERE id = @id", new { id }).SingleOrDefault();
            if (spss == null) return null;
            if (load && spss.ServicePointId != null) spss.ServicePoint = FindServicePoint2(spss.ServicePointId);
            if (load && spss.StaffSlipId != null) spss.StaffSlip = FindStaffSlip2(spss.StaffSlipId);
            return spss;
        }
        public ServicePointUser FindServicePointUser(Guid? id, bool load = false)
        {
            var spu = Query<ServicePointUser>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", defaultservicepointid AS \"Defaultservicepointid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user WHERE id = @id", new { id }).SingleOrDefault();
            if (spu == null) return null;
            if (load && spu.Defaultservicepointid != null) spu.ServicePoint = FindServicePoint(spu.Defaultservicepointid);
            return spu;
        }
        public ServicePointUser2 FindServicePointUser2(Guid? id, bool load = false)
        {
            var spu2 = Query<ServicePointUser2>($"SELECT id AS \"Id\", user_id AS \"UserId\", default_service_point_id AS \"DefaultServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}service_point_users WHERE id = @id", new { id }).SingleOrDefault();
            if (spu2 == null) return null;
            if (load && spu2.UserId != null) spu2.User = FindUser2(spu2.UserId);
            if (load && spu2.DefaultServicePointId != null) spu2.DefaultServicePoint = FindServicePoint2(spu2.DefaultServicePointId);
            if (load && spu2.CreationUserId != null) spu2.CreationUser = FindUser2(spu2.CreationUserId);
            if (load && spu2.LastWriteUserId != null) spu2.LastWriteUser = FindUser2(spu2.LastWriteUserId);
            return spu2;
        }
        public ServicePointUserServicePoint FindServicePointUserServicePoint(string id, bool load = false)
        {
            var spusp = Query<ServicePointUserServicePoint>($"SELECT id AS \"Id\", service_point_user_id AS \"ServicePointUserId\", service_point_id AS \"ServicePointId\" FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points WHERE id = @id", new { id }).SingleOrDefault();
            if (spusp == null) return null;
            if (load && spusp.ServicePointUserId != null) spusp.ServicePointUser = FindServicePointUser2(spusp.ServicePointUserId);
            if (load && spusp.ServicePointId != null) spusp.ServicePoint = FindServicePoint2(spusp.ServicePointId);
            return spusp;
        }
        public Setting FindSetting(Guid? id, bool load = false)
        {
            var s = Query<Setting>($"SELECT id AS \"Id\", name AS \"Name\", orientation AS \"Orientation\", font_family AS \"FontFamily\", font_size AS \"FontSize\", font_weight AS \"FontWeight\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}settings WHERE id = @id", new { id }).SingleOrDefault();
            if (s == null) return null;
            if (load && s.CreationUserId != null) s.CreationUser = FindUser2(s.CreationUserId);
            if (load && s.LastWriteUserId != null) s.LastWriteUser = FindUser2(s.LastWriteUserId);
            return s;
        }
        public Snapshot FindSnapshot(Guid? id, bool load = false) => Query<Snapshot>($"SELECT id AS \"Id\", status AS \"Status\", processing_started_date AS \"ProcessingStartedDate\", created_by_user_id AS \"CreationUserId\", created_date AS \"CreationTime\", updated_by_user_id AS \"LastWriteUserId\", updated_date AS \"LastWriteTime\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb WHERE id = @id", new { id }).SingleOrDefault();
        public Snapshot2 FindSnapshot2(Guid? id, bool load = false)
        {
            var s2 = Query<Snapshot2>($"SELECT id AS \"Id\", status AS \"Status\", processing_started_date AS \"ProcessingStartedDate\", creation_user_id AS \"CreationUserId\", creation_time AS \"CreationTime\", last_write_user_id AS \"LastWriteUserId\", last_write_time AS \"LastWriteTime\" FROM uc{(IsMySql ? "_" : ".")}snapshots WHERE id = @id", new { id }).SingleOrDefault();
            if (s2 == null) return null;
            if (load && s2.CreationUserId != null) s2.CreationUser = FindUser2(s2.CreationUserId);
            if (load && s2.LastWriteUserId != null) s2.LastWriteUser = FindUser2(s2.LastWriteUserId);
            return s2;
        }
        public Source FindSource(Guid? id, bool load = false) => Query<Source>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source WHERE id = @id", new { id }).SingleOrDefault();
        public Source2 FindSource2(Guid? id, bool load = false)
        {
            var s2 = Query<Source2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}sources WHERE id = @id", new { id }).SingleOrDefault();
            if (s2 == null) return null;
            if (load && s2.CreationUserId != null) s2.CreationUser = FindUser2(s2.CreationUserId);
            if (load && s2.LastWriteUserId != null) s2.LastWriteUser = FindUser2(s2.LastWriteUserId);
            return s2;
        }
        public SourceMarc FindSourceMarc(Guid? id, bool load = false) => Query<SourceMarc>($"SELECT id AS \"Id\", leader AS \"Leader\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}source_marcs WHERE id = @id", new { id }).SingleOrDefault();
        public SourceMarcField FindSourceMarcField(string id, bool load = false)
        {
            var smf = Query<SourceMarcField>($"SELECT id AS \"Id\", source_marc_id AS \"SourceMarcId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}source_marc_fields WHERE id = @id", new { id }).SingleOrDefault();
            if (smf == null) return null;
            if (load && smf.SourceMarcId != null) smf.SourceMarc = FindSourceMarc(smf.SourceMarcId);
            return smf;
        }
        public StaffSlip FindStaffSlip(Guid? id, bool load = false) => Query<StaffSlip>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips WHERE id = @id", new { id }).SingleOrDefault();
        public StaffSlip2 FindStaffSlip2(Guid? id, bool load = false)
        {
            var ss2 = Query<StaffSlip2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", active AS \"Active\", template AS \"Template\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}staff_slips WHERE id = @id", new { id }).SingleOrDefault();
            if (ss2 == null) return null;
            if (load && ss2.CreationUserId != null) ss2.CreationUser = FindUser2(ss2.CreationUserId);
            if (load && ss2.LastWriteUserId != null) ss2.LastWriteUser = FindUser2(ss2.LastWriteUserId);
            return ss2;
        }
        public StatisticalCode FindStatisticalCode(Guid? id, bool load = false)
        {
            var sc = Query<StatisticalCode>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", statisticalcodetypeid AS \"Statisticalcodetypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code WHERE id = @id", new { id }).SingleOrDefault();
            if (sc == null) return null;
            if (load && sc.Statisticalcodetypeid != null) sc.StatisticalCodeType = FindStatisticalCodeType(sc.Statisticalcodetypeid);
            return sc;
        }
        public StatisticalCode2 FindStatisticalCode2(Guid? id, bool load = false)
        {
            var sc2 = Query<StatisticalCode2>($"SELECT id AS \"Id\", code AS \"Code\", name AS \"Name\", statistical_code_type_id AS \"StatisticalCodeTypeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statistical_codes WHERE id = @id", new { id }).SingleOrDefault();
            if (sc2 == null) return null;
            if (load && sc2.StatisticalCodeTypeId != null) sc2.StatisticalCodeType = FindStatisticalCodeType2(sc2.StatisticalCodeTypeId);
            if (load && sc2.CreationUserId != null) sc2.CreationUser = FindUser2(sc2.CreationUserId);
            if (load && sc2.LastWriteUserId != null) sc2.LastWriteUser = FindUser2(sc2.LastWriteUserId);
            return sc2;
        }
        public StatisticalCodeType FindStatisticalCodeType(Guid? id, bool load = false) => Query<StatisticalCodeType>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type WHERE id = @id", new { id }).SingleOrDefault();
        public StatisticalCodeType2 FindStatisticalCodeType2(Guid? id, bool load = false)
        {
            var sct2 = Query<StatisticalCodeType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statistical_code_types WHERE id = @id", new { id }).SingleOrDefault();
            if (sct2 == null) return null;
            if (load && sct2.CreationUserId != null) sct2.CreationUser = FindUser2(sct2.CreationUserId);
            if (load && sct2.LastWriteUserId != null) sct2.LastWriteUser = FindUser2(sct2.LastWriteUserId);
            return sct2;
        }
        public Status FindStatus(Guid? id, bool load = false)
        {
            var s = Query<Status>($"SELECT id AS \"Id\", code AS \"Code\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statuses WHERE id = @id", new { id }).SingleOrDefault();
            if (s == null) return null;
            if (load && s.CreationUserId != null) s.CreationUser = FindUser2(s.CreationUserId);
            if (load && s.LastWriteUserId != null) s.LastWriteUser = FindUser2(s.LastWriteUserId);
            return s;
        }
        public Subject FindSubject(string id, Guid? instanceId, bool load = false)
        {
            var s = Query<Subject>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}subjects WHERE id = @id AND instance_id = @instanceId", new { id, instanceId }).SingleOrDefault();
            if (s == null) return null;
            if (load && s.InstanceId != null) s.Instance = FindInstance2(s.InstanceId);
            return s;
        }
        public Suffix FindSuffix(Guid? id, bool load = false) => Query<Suffix>($"SELECT id AS \"Id\", jsonb AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes WHERE id = @id", new { id }).SingleOrDefault();
        public Suffix2 FindSuffix2(Guid? id, bool load = false) => Query<Suffix2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}suffixes WHERE id = @id", new { id }).SingleOrDefault();
        public SupplementStatement FindSupplementStatement(string id, Guid? holdingId, bool load = false)
        {
            var ss = Query<SupplementStatement>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Statement\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}supplement_statements WHERE id = @id AND holding_id = @holdingId", new { id, holdingId }).SingleOrDefault();
            if (ss == null) return null;
            if (load && ss.HoldingId != null) ss.Holding = FindHolding2(ss.HoldingId);
            return ss;
        }
        public Tag FindTag(Guid? id, bool load = false) => Query<Tag>($"SELECT id AS \"Id\", created_by AS \"CreationUserId\", label AS \"Label\", description AS \"Description\", created_date AS \"CreationTime\", updated_date AS \"LastWriteTime\", updated_by AS \"UpdatedBy\" FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags WHERE id = @id", new { id }).SingleOrDefault();
        public Tag2 FindTag2(Guid? id, bool load = false)
        {
            var t2 = Query<Tag2>($"SELECT id AS \"Id\", label AS \"Label\", description AS \"Description\", creation_time AS \"CreationTime\", last_write_time AS \"LastWriteTime\", updated_by AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}tags WHERE id = @id", new { id }).SingleOrDefault();
            if (t2 == null) return null;
            if (load && t2.LastWriteUserId != null) t2.LastWriteUser = FindUser2(t2.LastWriteUserId);
            return t2;
        }
        public Template FindTemplate(Guid? id, bool load = false) => Query<Template>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template WHERE id = @id", new { id }).SingleOrDefault();
        public Template2 FindTemplate2(Guid? id, bool load = false)
        {
            var t2 = Query<Template2>($"SELECT id AS \"Id\", name AS \"Name\", active AS \"Active\", category AS \"Category\", description AS \"Description\", template_resolver AS \"TemplateResolver\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}templates WHERE id = @id", new { id }).SingleOrDefault();
            if (t2 == null) return null;
            if (load && t2.CreationUserId != null) t2.CreationUser = FindUser2(t2.CreationUserId);
            if (load && t2.LastWriteUserId != null) t2.LastWriteUser = FindUser2(t2.LastWriteUserId);
            return t2;
        }
        public TemplateOutputFormat FindTemplateOutputFormat(string id, bool load = false)
        {
            var tof = Query<TemplateOutputFormat>($"SELECT id AS \"Id\", template_id AS \"TemplateId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}template_output_formats WHERE id = @id", new { id }).SingleOrDefault();
            if (tof == null) return null;
            if (load && tof.TemplateId != null) tof.Template = FindTemplate2(tof.TemplateId);
            return tof;
        }
        public Title FindTitle(Guid? id, bool load = false)
        {
            var t = Query<Title>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", polineid AS \"Polineid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles WHERE id = @id", new { id }).SingleOrDefault();
            if (t == null) return null;
            if (load && t.Polineid != null) t.OrderItem = FindOrderItem(t.Polineid);
            return t;
        }
        public Title2 FindTitle2(Guid? id, bool load = false)
        {
            var t2 = Query<Title2>($"SELECT id AS \"Id\", expected_receipt_date AS \"ExpectedReceiptDate\", title AS \"Title\", po_line_id AS \"OrderItemId\", instance_id AS \"InstanceId\", publisher AS \"Publisher\", edition AS \"Edition\", package_name AS \"PackageName\", po_line_number AS \"OrderItemNumber\", published_date AS \"PublishedDate\", receiving_note AS \"ReceivingNote\", subscription_from AS \"SubscriptionFrom\", subscription_to AS \"SubscriptionTo\", subscription_interval AS \"SubscriptionInterval\", is_acknowledged AS \"IsAcknowledged\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}titles WHERE id = @id", new { id }).SingleOrDefault();
            if (t2 == null) return null;
            if (load && t2.OrderItemId != null) t2.OrderItem = FindOrderItem2(t2.OrderItemId);
            if (load && t2.InstanceId != null) t2.Instance = FindInstance2(t2.InstanceId);
            if (load && t2.CreationUserId != null) t2.CreationUser = FindUser2(t2.CreationUserId);
            if (load && t2.LastWriteUserId != null) t2.LastWriteUser = FindUser2(t2.LastWriteUserId);
            return t2;
        }
        public TitleContributor FindTitleContributor(string id, bool load = false)
        {
            var tc = Query<TitleContributor>($"SELECT id AS \"Id\", title_id AS \"TitleId\", contributor AS \"Contributor\", contributor_name_type_id AS \"ContributorNameTypeId\" FROM uc{(IsMySql ? "_" : ".")}title_contributors WHERE id = @id", new { id }).SingleOrDefault();
            if (tc == null) return null;
            if (load && tc.TitleId != null) tc.Title = FindTitle2(tc.TitleId);
            if (load && tc.ContributorNameTypeId != null) tc.ContributorNameType = FindContributorNameType2(tc.ContributorNameTypeId);
            return tc;
        }
        public TitleProductId FindTitleProductId(string id, bool load = false)
        {
            var tpi = Query<TitleProductId>($"SELECT id AS \"Id\", title_id AS \"TitleId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", qualifier AS \"Qualifier\" FROM uc{(IsMySql ? "_" : ".")}title_product_ids WHERE id = @id", new { id }).SingleOrDefault();
            if (tpi == null) return null;
            if (load && tpi.TitleId != null) tpi.Title = FindTitle2(tpi.TitleId);
            if (load && tpi.ProductIdTypeId != null) tpi.ProductIdType = FindIdType2(tpi.ProductIdTypeId);
            return tpi;
        }
        public Transaction FindTransaction(Guid? id, bool load = false)
        {
            var t = Query<Transaction>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fiscalyearid AS \"Fiscalyearid\", fromfundid AS \"Fromfundid\", sourcefiscalyearid AS \"Sourcefiscalyearid\", tofundid AS \"Tofundid\", expenseclassid AS \"Expenseclassid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction WHERE id = @id", new { id }).SingleOrDefault();
            if (t == null) return null;
            if (load && t.Fiscalyearid != null) t.FiscalYear = FindFiscalYear(t.Fiscalyearid);
            if (load && t.Fromfundid != null) t.Fund = FindFund(t.Fromfundid);
            if (load && t.Sourcefiscalyearid != null) t.FiscalYear1 = FindFiscalYear(t.Sourcefiscalyearid);
            if (load && t.Tofundid != null) t.Fund1 = FindFund(t.Tofundid);
            if (load && t.Expenseclassid != null) t.ExpenseClass = FindExpenseClass(t.Expenseclassid);
            return t;
        }
        public Transaction2 FindTransaction2(Guid? id, bool load = false)
        {
            var t2 = Query<Transaction2>($"SELECT id AS \"Id\", amount AS \"Amount\", awaiting_payment_encumbrance_id AS \"AwaitingPaymentEncumbranceId\", awaiting_payment_release_encumbrance AS \"AwaitingPaymentReleaseEncumbrance\", currency AS \"Currency\", description AS \"Description\", encumbrance_amount_awaiting_payment AS \"AwaitingPaymentAmount\", encumbrance_amount_expended AS \"ExpendedAmount\", encumbrance_initial_amount_encumbered AS \"InitialEncumberedAmount\", encumbrance_status AS \"Status\", encumbrance_order_type AS \"OrderType\", encumbrance_order_status AS \"OrderStatus\", encumbrance_subscription AS \"Subscription\", encumbrance_re_encumber AS \"ReEncumber\", encumbrance_source_purchase_order_id AS \"OrderId\", encumbrance_source_po_line_id AS \"OrderItemId\", expense_class_id AS \"ExpenseClassId\", fiscal_year_id AS \"FiscalYearId\", from_fund_id AS \"FromFundId\", invoice_cancelled AS \"InvoiceCancelled\", payment_encumbrance_id AS \"PaymentEncumbranceId\", source AS \"Source\", source_fiscal_year_id AS \"SourceFiscalYearId\", source_invoice_id AS \"InvoiceId\", source_invoice_line_id AS \"InvoiceItemId\", to_fund_id AS \"ToFundId\", transaction_type AS \"TransactionType\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transactions WHERE id = @id", new { id }).SingleOrDefault();
            if (t2 == null) return null;
            if (load && t2.AwaitingPaymentEncumbranceId != null) t2.AwaitingPaymentEncumbrance = FindTransaction2(t2.AwaitingPaymentEncumbranceId);
            if (load && t2.OrderId != null) t2.Order = FindOrder2(t2.OrderId);
            if (load && t2.OrderItemId != null) t2.OrderItem = FindOrderItem2(t2.OrderItemId);
            if (load && t2.ExpenseClassId != null) t2.ExpenseClass = FindExpenseClass2(t2.ExpenseClassId);
            if (load && t2.FiscalYearId != null) t2.FiscalYear = FindFiscalYear2(t2.FiscalYearId);
            if (load && t2.FromFundId != null) t2.FromFund = FindFund2(t2.FromFundId);
            if (load && t2.PaymentEncumbranceId != null) t2.PaymentEncumbrance = FindTransaction2(t2.PaymentEncumbranceId);
            if (load && t2.SourceFiscalYearId != null) t2.SourceFiscalYear = FindFiscalYear2(t2.SourceFiscalYearId);
            if (load && t2.InvoiceId != null) t2.Invoice = FindInvoice2(t2.InvoiceId);
            if (load && t2.InvoiceItemId != null) t2.InvoiceItem = FindInvoiceItem2(t2.InvoiceItemId);
            if (load && t2.ToFundId != null) t2.ToFund = FindFund2(t2.ToFundId);
            if (load && t2.CreationUserId != null) t2.CreationUser = FindUser2(t2.CreationUserId);
            if (load && t2.LastWriteUserId != null) t2.LastWriteUser = FindUser2(t2.LastWriteUserId);
            return t2;
        }
        public TransactionTag FindTransactionTag(string id, bool load = false)
        {
            var tt = Query<TransactionTag>($"SELECT id AS \"Id\", transaction_id AS \"TransactionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transaction_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (tt == null) return null;
            if (load && tt.TransactionId != null) tt.Transaction = FindTransaction2(tt.TransactionId);
            return tt;
        }
        public TransferAccount FindTransferAccount(Guid? id, bool load = false) => Query<TransferAccount>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers WHERE id = @id", new { id }).SingleOrDefault();
        public TransferAccount2 FindTransferAccount2(Guid? id, bool load = false)
        {
            var ta2 = Query<TransferAccount2>($"SELECT id AS \"Id\", name AS \"Name\", \"desc\" AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", owner_id AS \"OwnerId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transfer_accounts WHERE id = @id", new { id }).SingleOrDefault();
            if (ta2 == null) return null;
            if (load && ta2.CreationUserId != null) ta2.CreationUser = FindUser2(ta2.CreationUserId);
            if (load && ta2.LastWriteUserId != null) ta2.LastWriteUser = FindUser2(ta2.LastWriteUserId);
            if (load && ta2.OwnerId != null) ta2.Owner = FindOwner2(ta2.OwnerId);
            return ta2;
        }
        public TransferCriteria FindTransferCriteria(Guid? id, bool load = false) => Query<TransferCriteria>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria WHERE id = @id", new { id }).SingleOrDefault();
        public TransferCriteria2 FindTransferCriteria2(Guid? id, bool load = false) => Query<TransferCriteria2>($"SELECT id AS \"Id\", criteria AS \"Criteria\", type AS \"Type\", value AS \"Value\", interval AS \"Interval\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transfer_criterias WHERE id = @id", new { id }).SingleOrDefault();
        public User FindUser(Guid? id, bool load = false)
        {
            var u = Query<User>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", patrongroup AS \"Patrongroup\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users WHERE id = @id", new { id }).SingleOrDefault();
            if (u == null) return null;
            if (load && u.Patrongroup != null) u.Group = FindGroup(u.Patrongroup);
            return u;
        }
        public User2 FindUser2(Guid? id, bool load = false)
        {
            var u2 = Query<User2>($"SELECT id AS \"Id\", username AS \"Username\", external_system_id AS \"ExternalSystemId\", barcode AS \"Barcode\", active AS \"Active\", type AS \"Type\", group_id AS \"GroupId\", name AS \"Name\", last_name AS \"LastName\", first_name AS \"FirstName\", middle_name AS \"MiddleName\", preferred_first_name AS \"PreferredFirstName\", email AS \"EmailAddress\", phone AS \"PhoneNumber\", mobile_phone AS \"MobilePhoneNumber\", date_of_birth AS \"BirthDate\", preferred_contact_type_id AS \"PreferredContactTypeId\", enrollment_date AS \"StartDate\", expiration_date AS \"EndDate\", source AS \"Source\", category AS \"Category\", status AS \"Status\", statuses AS \"Statuses\", staff_status AS \"StaffStatus\", staff_privileges AS \"StaffPrivileges\", staff_division AS \"StaffDivision\", staff_department AS \"StaffDepartment\", student_id AS \"StudentId\", student_status AS \"StudentStatus\", student_restriction AS \"StudentRestriction\", student_division AS \"StudentDivision\", student_department AS \"StudentDepartment\", deceased AS \"Deceased\", collections AS \"Collections\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}users WHERE id = @id", new { id }).SingleOrDefault();
            if (u2 == null) return null;
            if (load && u2.GroupId != null) u2.Group = FindGroup2(u2.GroupId);
            if (load && u2.PreferredContactTypeId != null) u2.PreferredContactType = FindContactType(u2.PreferredContactTypeId);
            if (load && u2.CreationUserId != null) u2.CreationUser = FindUser2(u2.CreationUserId);
            if (load && u2.LastWriteUserId != null) u2.LastWriteUser = FindUser2(u2.LastWriteUserId);
            return u2;
        }
        public UserAcquisitionsUnit FindUserAcquisitionsUnit(Guid? id, bool load = false)
        {
            var uau = Query<UserAcquisitionsUnit>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", acquisitionsunitid AS \"Acquisitionsunitid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership WHERE id = @id", new { id }).SingleOrDefault();
            if (uau == null) return null;
            if (load && uau.Acquisitionsunitid != null) uau.AcquisitionsUnit = FindAcquisitionsUnit(uau.Acquisitionsunitid);
            return uau;
        }
        public UserAcquisitionsUnit2 FindUserAcquisitionsUnit2(Guid? id, bool load = false)
        {
            var uau2 = Query<UserAcquisitionsUnit2>($"SELECT id AS \"Id\", user_id AS \"UserId\", acquisitions_unit_id AS \"AcquisitionsUnitId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (uau2 == null) return null;
            if (load && uau2.UserId != null) uau2.User = FindUser2(uau2.UserId);
            if (load && uau2.AcquisitionsUnitId != null) uau2.AcquisitionsUnit = FindAcquisitionsUnit2(uau2.AcquisitionsUnitId);
            if (load && uau2.CreationUserId != null) uau2.CreationUser = FindUser2(uau2.CreationUserId);
            if (load && uau2.LastWriteUserId != null) uau2.LastWriteUser = FindUser2(uau2.LastWriteUserId);
            return uau2;
        }
        public UserAddress FindUserAddress(string id, bool load = false)
        {
            var ua = Query<UserAddress>($"SELECT id AS \"Id\", user_id AS \"UserId\", id2 AS \"Id2\", country_id AS \"CountryCode\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", region AS \"State\", postal_code AS \"PostalCode\", address_type_id AS \"AddressTypeId\", primary_address AS \"Default\" FROM uc{(IsMySql ? "_" : ".")}user_addresses WHERE id = @id", new { id }).SingleOrDefault();
            if (ua == null) return null;
            if (load && ua.UserId != null) ua.User = FindUser2(ua.UserId);
            if (load && ua.AddressTypeId != null) ua.AddressType = FindAddressType2(ua.AddressTypeId);
            return ua;
        }
        public UserDepartment FindUserDepartment(string id, bool load = false)
        {
            var ud = Query<UserDepartment>($"SELECT id AS \"Id\", user_id AS \"UserId\", department_id AS \"DepartmentId\" FROM uc{(IsMySql ? "_" : ".")}user_departments WHERE id = @id", new { id }).SingleOrDefault();
            if (ud == null) return null;
            if (load && ud.UserId != null) ud.User = FindUser2(ud.UserId);
            if (load && ud.DepartmentId != null) ud.Department = FindDepartment2(ud.DepartmentId);
            return ud;
        }
        public UserNote FindUserNote(string id, bool load = false)
        {
            var un = Query<UserNote>($"SELECT id AS \"Id\", user_id AS \"UserId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}user_notes WHERE id = @id", new { id }).SingleOrDefault();
            if (un == null) return null;
            if (load && un.UserId != null) un.User = FindUser2(un.UserId);
            if (load && un.NoteId != null) un.Note = FindNote3(un.NoteId);
            return un;
        }
        public UserRequestPreference FindUserRequestPreference(Guid? id, bool load = false) => Query<UserRequestPreference>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference WHERE id = @id", new { id }).SingleOrDefault();
        public UserRequestPreference2 FindUserRequestPreference2(Guid? id, bool load = false)
        {
            var urp2 = Query<UserRequestPreference2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hold_shelf AS \"HoldShelf\", delivery AS \"Delivery\", default_service_point_id AS \"DefaultServicePointId\", default_delivery_address_type_id AS \"DefaultDeliveryAddressTypeId\", fulfillment AS \"Fulfillment\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_request_preferences WHERE id = @id", new { id }).SingleOrDefault();
            if (urp2 == null) return null;
            if (load && urp2.UserId != null) urp2.User = FindUser2(urp2.UserId);
            if (load && urp2.DefaultServicePointId != null) urp2.DefaultServicePoint = FindServicePoint2(urp2.DefaultServicePointId);
            if (load && urp2.DefaultDeliveryAddressTypeId != null) urp2.DefaultDeliveryAddressType = FindAddressType2(urp2.DefaultDeliveryAddressTypeId);
            if (load && urp2.CreationUserId != null) urp2.CreationUser = FindUser2(urp2.CreationUserId);
            if (load && urp2.LastWriteUserId != null) urp2.LastWriteUser = FindUser2(urp2.LastWriteUserId);
            return urp2;
        }
        public UserSummary FindUserSummary(Guid? id, bool load = false) => Query<UserSummary>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary WHERE id = @id", new { id }).SingleOrDefault();
        public UserSummary2 FindUserSummary2(Guid? id, bool load = false)
        {
            var us2 = Query<UserSummary2>($"SELECT id AS \"Id\", _version AS \"Version\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_summaries WHERE id = @id", new { id }).SingleOrDefault();
            if (us2 == null) return null;
            if (load && us2.UserId != null) us2.User = FindUser2(us2.UserId);
            if (load && us2.CreationUserId != null) us2.CreationUser = FindUser2(us2.CreationUserId);
            if (load && us2.LastWriteUserId != null) us2.LastWriteUser = FindUser2(us2.LastWriteUserId);
            return us2;
        }
        public UserSummaryOpenFeesFine FindUserSummaryOpenFeesFine(string id, bool load = false)
        {
            var usoff = Query<UserSummaryOpenFeesFine>($"SELECT id AS \"Id\", user_summary_id AS \"UserSummaryId\", fee_fine_id AS \"FeeFineId\", fee_fine_type_id AS \"FeeFineTypeId\", loan_id AS \"LoanId\", balance AS \"Balance\" FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines WHERE id = @id", new { id }).SingleOrDefault();
            if (usoff == null) return null;
            if (load && usoff.UserSummaryId != null) usoff.UserSummary = FindUserSummary2(usoff.UserSummaryId);
            if (load && usoff.FeeFineId != null) usoff.FeeFine = FindFee2(usoff.FeeFineId);
            if (load && usoff.FeeFineTypeId != null) usoff.FeeFineType = FindFeeType2(usoff.FeeFineTypeId);
            if (load && usoff.LoanId != null) usoff.Loan = FindLoan2(usoff.LoanId);
            return usoff;
        }
        public UserSummaryOpenLoan FindUserSummaryOpenLoan(string id, bool load = false)
        {
            var usol = Query<UserSummaryOpenLoan>($"SELECT id AS \"Id\", user_summary_id AS \"UserSummaryId\", loan_id AS \"LoanId\", due_date AS \"DueDate\", recall AS \"Recall\", item_lost AS \"ItemLost\", item_claimed_returned AS \"ItemClaimedReturned\", grace_period_duration AS \"GracePeriodDuration\", grace_period_interval_id AS \"GracePeriodInterval\" FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans WHERE id = @id", new { id }).SingleOrDefault();
            if (usol == null) return null;
            if (load && usol.UserSummaryId != null) usol.UserSummary = FindUserSummary2(usol.UserSummaryId);
            if (load && usol.LoanId != null) usol.Loan = FindLoan2(usol.LoanId);
            return usol;
        }
        public UserTag FindUserTag(string id, bool load = false)
        {
            var ut = Query<UserTag>($"SELECT id AS \"Id\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_tags WHERE id = @id", new { id }).SingleOrDefault();
            if (ut == null) return null;
            if (load && ut.UserId != null) ut.User = FindUser2(ut.UserId);
            return ut;
        }
        public Voucher FindVoucher(Guid? id, bool load = false)
        {
            var v = Query<Voucher>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers WHERE id = @id", new { id }).SingleOrDefault();
            if (v == null) return null;
            if (load && v.Invoiceid != null) v.Invoice = FindInvoice(v.Invoiceid);
            if (load && v.Batchgroupid != null) v.BatchGroup = FindBatchGroup(v.Batchgroupid);
            return v;
        }
        public Voucher2 FindVoucher2(Guid? id, bool load = false)
        {
            var v2 = Query<Voucher2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", account_no AS \"AccountNumber\", amount AS \"Amount\", batch_group_id AS \"BatchGroupId\", disbursement_number AS \"DisbursementNumber\", disbursement_date AS \"DisbursementDate\", disbursement_amount AS \"DisbursementAmount\", enclosure_needed AS \"Enclosure\", invoice_currency AS \"InvoiceCurrency\", invoice_id AS \"InvoiceId\", exchange_rate AS \"ExchangeRate\", export_to_accounting AS \"ExportToAccounting\", status AS \"Status\", system_currency AS \"SystemCurrency\", type AS \"Type\", voucher_date AS \"VoucherDate\", voucher_number AS \"Number\", vendor_id AS \"VendorId\", vendor_address_address_line1 AS \"VendorStreetAddress1\", vendor_address_address_line2 AS \"VendorStreetAddress2\", vendor_address_city AS \"VendorCity\", vendor_address_state_region AS \"VendorState\", vendor_address_zip_code AS \"VendorPostalCode\", vendor_address_country AS \"VendorCountryCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}vouchers WHERE id = @id", new { id }).SingleOrDefault();
            if (v2 == null) return null;
            if (load && v2.BatchGroupId != null) v2.BatchGroup = FindBatchGroup2(v2.BatchGroupId);
            if (load && v2.InvoiceId != null) v2.Invoice = FindInvoice2(v2.InvoiceId);
            if (load && v2.VendorId != null) v2.Vendor = FindOrganization2(v2.VendorId);
            if (load && v2.CreationUserId != null) v2.CreationUser = FindUser2(v2.CreationUserId);
            if (load && v2.LastWriteUserId != null) v2.LastWriteUser = FindUser2(v2.LastWriteUserId);
            return v2;
        }
        public VoucherAcquisitionsUnit FindVoucherAcquisitionsUnit(string id, bool load = false)
        {
            var vau = Query<VoucherAcquisitionsUnit>($"SELECT id AS \"Id\", voucher_id AS \"VoucherId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units WHERE id = @id", new { id }).SingleOrDefault();
            if (vau == null) return null;
            if (load && vau.VoucherId != null) vau.Voucher = FindVoucher2(vau.VoucherId);
            if (load && vau.AcquisitionsUnitId != null) vau.AcquisitionsUnit = FindAcquisitionsUnit2(vau.AcquisitionsUnitId);
            return vau;
        }
        public VoucherItem FindVoucherItem(Guid? id, bool load = false)
        {
            var vi = Query<VoucherItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", voucherid AS \"Voucherid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines WHERE id = @id", new { id }).SingleOrDefault();
            if (vi == null) return null;
            if (load && vi.Voucherid != null) vi.Voucher = FindVoucher(vi.Voucherid);
            return vi;
        }
        public VoucherItem2 FindVoucherItem2(Guid? id, bool load = false)
        {
            var vi2 = Query<VoucherItem2>($"SELECT id AS \"Id\", amount AS \"Amount\", external_account_number AS \"AccountNumber\", sub_transaction_id AS \"SubTransactionId\", voucher_id AS \"VoucherId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}voucher_items WHERE id = @id", new { id }).SingleOrDefault();
            if (vi2 == null) return null;
            if (load && vi2.SubTransactionId != null) vi2.SubTransaction = FindTransaction2(vi2.SubTransactionId);
            if (load && vi2.VoucherId != null) vi2.Voucher = FindVoucher2(vi2.VoucherId);
            if (load && vi2.CreationUserId != null) vi2.CreationUser = FindUser2(vi2.CreationUserId);
            if (load && vi2.LastWriteUserId != null) vi2.LastWriteUser = FindUser2(vi2.LastWriteUserId);
            return vi2;
        }
        public VoucherItemFund FindVoucherItemFund(string id, bool load = false)
        {
            var vif = Query<VoucherItemFund>($"SELECT id AS \"Id\", voucher_item_id AS \"VoucherItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions WHERE id = @id", new { id }).SingleOrDefault();
            if (vif == null) return null;
            if (load && vif.VoucherItemId != null) vif.VoucherItem = FindVoucherItem2(vif.VoucherItemId);
            if (load && vif.EncumbranceId != null) vif.Encumbrance = FindTransaction2(vif.EncumbranceId);
            if (load && vif.FundId != null) vif.Fund = FindFund2(vif.FundId);
            if (load && vif.InvoiceItemId != null) vif.InvoiceItem = FindInvoiceItem2(vif.InvoiceItemId);
            if (load && vif.ExpenseClassId != null) vif.ExpenseClass = FindExpenseClass2(vif.ExpenseClassId);
            return vif;
        }
        public VoucherItemInvoiceItem FindVoucherItemInvoiceItem(string id, bool load = false)
        {
            var viii = Query<VoucherItemInvoiceItem>($"SELECT id AS \"Id\", voucher_item_id AS \"VoucherItemId\", invoice_item_id AS \"InvoiceItemId\" FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items WHERE id = @id", new { id }).SingleOrDefault();
            if (viii == null) return null;
            if (load && viii.VoucherItemId != null) viii.VoucherItem = FindVoucherItem2(viii.VoucherItemId);
            if (load && viii.InvoiceItemId != null) viii.InvoiceItem = FindInvoiceItem2(viii.InvoiceItemId);
            return viii;
        }
        public VoucherStatus FindVoucherStatus(int? id, bool load = false) => Query<VoucherStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}voucher_statuses WHERE id = @id", new { id }).SingleOrDefault();
        public WaiveReason FindWaiveReason(Guid? id, bool load = false) => Query<WaiveReason>($"SELECT id AS \"Id\", jsonb AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives WHERE id = @id", new { id }).SingleOrDefault();
        public WaiveReason2 FindWaiveReason2(Guid? id, bool load = false)
        {
            var wr2 = Query<WaiveReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", account_id AS \"AccountId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}waive_reasons WHERE id = @id", new { id }).SingleOrDefault();
            if (wr2 == null) return null;
            if (load && wr2.CreationUserId != null) wr2.CreationUser = FindUser2(wr2.CreationUserId);
            if (load && wr2.LastWriteUserId != null) wr2.LastWriteUser = FindUser2(wr2.LastWriteUserId);
            if (load && wr2.AccountId != null) wr2.Account = FindFee2(wr2.AccountId);
            return wr2;
        }

        public void AddAcquisitionsUnitsIndexes()
        {
        }
        public void AddAcquisitionsUnit2sIndexes()
        {
        }
        public void AddAddressesIndexes()
        {
        }
        public void AddAddressTypesIndexes()
        {
        }
        public void AddAddressType2sIndexes()
        {
        }
        public void AddAlertsIndexes()
        {
        }
        public void AddAlert2sIndexes()
        {
        }
        public void AddAllocatedFromFundsIndexes()
        {
        }
        public void AddAllocatedToFundsIndexes()
        {
        }
        public void AddAlternativeTitlesIndexes()
        {
        }
        public void AddAlternativeTitleTypesIndexes()
        {
        }
        public void AddAlternativeTitleType2sIndexes()
        {
        }
        public void AddAuthAttemptsIndexes()
        {
        }
        public void AddAuthAttempt2sIndexes()
        {
        }
        public void AddAuthCredentialsHistoriesIndexes()
        {
        }
        public void AddAuthCredentialsHistory2sIndexes()
        {
        }
        public void AddAuthPasswordActionsIndexes()
        {
        }
        public void AddBatchGroupsIndexes()
        {
        }
        public void AddBatchGroup2sIndexes()
        {
        }
        public void AddBatchVouchersIndexes()
        {
        }
        public void AddBatchVoucher2sIndexes()
        {
        }
        public void AddBatchVoucherBatchedVouchersIndexes()
        {
        }
        public void AddBatchVoucherBatchedVoucherBatchedVoucherLinesIndexes()
        {
        }
        public void AddBatchVoucherBatchedVoucherBatchedVoucherLineFundCodesIndexes()
        {
        }
        public void AddBatchVoucherExportsIndexes()
        {
        }
        public void AddBatchVoucherExport2sIndexes()
        {
        }
        public void AddBatchVoucherExportConfigsIndexes()
        {
        }
        public void AddBatchVoucherExportConfig2sIndexes()
        {
        }
        public void AddBatchVoucherExportConfigWeekdaysIndexes()
        {
        }
        public void AddBlocksIndexes()
        {
        }
        public void AddBlock2sIndexes()
        {
        }
        public void AddBlockConditionsIndexes()
        {
        }
        public void AddBlockCondition2sIndexes()
        {
        }
        public void AddBlockLimitsIndexes()
        {
        }
        public void AddBlockLimit2sIndexes()
        {
        }
        public void AddBoundWithPartsIndexes()
        {
        }
        public void AddBoundWithPart2sIndexes()
        {
        }
        public void AddBudgetsIndexes()
        {
        }
        public void AddBudget2sIndexes()
        {
        }
        public void AddBudgetAcquisitionsUnitsIndexes()
        {
        }
        public void AddBudgetExpenseClassesIndexes()
        {
        }
        public void AddBudgetExpenseClass2sIndexes()
        {
        }
        public void AddBudgetGroupsIndexes()
        {
        }
        public void AddBudgetGroup2sIndexes()
        {
        }
        public void AddBudgetTagsIndexes()
        {
        }
        public void AddCallNumberTypesIndexes()
        {
        }
        public void AddCallNumberType2sIndexes()
        {
        }
        public void AddCampusesIndexes()
        {
        }
        public void AddCampus2sIndexes()
        {
        }
        public void AddCancellationReasonsIndexes()
        {
        }
        public void AddCancellationReason2sIndexes()
        {
        }
        public void AddCategoriesIndexes()
        {
        }
        public void AddCategory2sIndexes()
        {
        }
        public void AddCheckInsIndexes()
        {
        }
        public void AddCheckIn2sIndexes()
        {
        }
        public void AddCirculationNotesIndexes()
        {
        }
        public void AddCirculationRulesIndexes()
        {
        }
        public void AddCirculationRule2sIndexes()
        {
        }
        public void AddClassificationsIndexes()
        {
        }
        public void AddClassificationTypesIndexes()
        {
        }
        public void AddClassificationType2sIndexes()
        {
        }
        public void AddCloseReasonsIndexes()
        {
        }
        public void AddCloseReason2sIndexes()
        {
        }
        public void AddCommentsIndexes()
        {
        }
        public void AddComment2sIndexes()
        {
        }
        public void AddConfigurationsIndexes()
        {
        }
        public void AddConfiguration2sIndexes()
        {
        }
        public void AddContactsIndexes()
        {
        }
        public void AddContact2sIndexes()
        {
        }
        public void AddContactAddressesIndexes()
        {
        }
        public void AddContactAddressCategoriesIndexes()
        {
        }
        public void AddContactCategoriesIndexes()
        {
        }
        public void AddContactEmailsIndexes()
        {
        }
        public void AddContactEmailCategoriesIndexes()
        {
        }
        public void AddContactPhoneNumbersIndexes()
        {
        }
        public void AddContactPhoneNumberCategoriesIndexes()
        {
        }
        public void AddContactTypesIndexes()
        {
        }
        public void AddContactUrlsIndexes()
        {
        }
        public void AddContactUrlCategoriesIndexes()
        {
        }
        public void AddContributorsIndexes()
        {
        }
        public void AddContributorNameTypesIndexes()
        {
        }
        public void AddContributorNameType2sIndexes()
        {
        }
        public void AddContributorTypesIndexes()
        {
        }
        public void AddContributorType2sIndexes()
        {
        }
        public void AddCountriesIndexes()
        {
        }
        public void AddCurrenciesIndexes()
        {
        }
        public void AddCustomFieldsIndexes()
        {
        }
        public void AddCustomField2sIndexes()
        {
        }
        public void AddCustomFieldValuesIndexes()
        {
        }
        public void AddDepartmentsIndexes()
        {
        }
        public void AddDepartment2sIndexes()
        {
        }
        public void AddDocumentsIndexes()
        {
        }
        public void AddDocument2sIndexes()
        {
        }
        public void AddEditionsIndexes()
        {
        }
        public void AddElectronicAccessesIndexes()
        {
        }
        public void AddElectronicAccessRelationshipsIndexes()
        {
        }
        public void AddElectronicAccessRelationship2sIndexes()
        {
        }
        public void AddErrorRecordsIndexes()
        {
        }
        public void AddErrorRecord2sIndexes()
        {
        }
        public void AddEventLogsIndexes()
        {
        }
        public void AddEventLog2sIndexes()
        {
        }
        public void AddExpenseClassesIndexes()
        {
        }
        public void AddExpenseClass2sIndexes()
        {
        }
        public void AddExportConfigCredentialsIndexes()
        {
        }
        public void AddExportConfigCredential2sIndexes()
        {
        }
        public void AddExtentsIndexes()
        {
        }
        public void AddFeesIndexes()
        {
        }
        public void AddFee2sIndexes()
        {
        }
        public void AddFeeTypesIndexes()
        {
        }
        public void AddFeeType2sIndexes()
        {
        }
        public void AddFinanceGroupsIndexes()
        {
        }
        public void AddFinanceGroup2sIndexes()
        {
        }
        public void AddFinanceGroupAcquisitionsUnitsIndexes()
        {
        }
        public void AddFiscalYearsIndexes()
        {
        }
        public void AddFiscalYear2sIndexes()
        {
        }
        public void AddFiscalYearAcquisitionsUnitsIndexes()
        {
        }
        public void AddFixedDueDateSchedulesIndexes()
        {
        }
        public void AddFixedDueDateSchedule2sIndexes()
        {
        }
        public void AddFixedDueDateScheduleSchedulesIndexes()
        {
        }
        public void AddFormatsIndexes()
        {
        }
        public void AddFundsIndexes()
        {
        }
        public void AddFund2sIndexes()
        {
        }
        public void AddFundAcquisitionsUnitsIndexes()
        {
        }
        public void AddFundTagsIndexes()
        {
        }
        public void AddFundTypesIndexes()
        {
        }
        public void AddFundType2sIndexes()
        {
        }
        public void AddGroupsIndexes()
        {
        }
        public void AddGroup2sIndexes()
        {
        }
        public void AddHoldingsIndexes()
        {
        }
        public void AddHolding2sIndexes()
        {
        }
        public void AddHoldingDonorsIndexes()
        {
        }
        public void AddHoldingElectronicAccessesIndexes()
        {
        }
        public void AddHoldingEntriesIndexes()
        {
        }
        public void AddHoldingFormerIdsIndexes()
        {
        }
        public void AddHoldingNotesIndexes()
        {
        }
        public void AddHoldingNoteTypesIndexes()
        {
        }
        public void AddHoldingNoteType2sIndexes()
        {
        }
        public void AddHoldingStatisticalCodesIndexes()
        {
        }
        public void AddHoldingTagsIndexes()
        {
        }
        public void AddHoldingTypesIndexes()
        {
        }
        public void AddHoldingType2sIndexes()
        {
        }
        public void AddHridSettingsIndexes()
        {
        }
        public void AddHridSetting2sIndexes()
        {
        }
        public void AddIdentifiersIndexes()
        {
        }
        public void AddIdTypesIndexes()
        {
        }
        public void AddIdType2sIndexes()
        {
        }
        public void AddIllPoliciesIndexes()
        {
        }
        public void AddIllPolicy2sIndexes()
        {
        }
        public void AddIndexStatementsIndexes()
        {
        }
        public void AddInstancesIndexes()
        {
        }
        public void AddInstance2sIndexes()
        {
        }
        public void AddInstanceFormatsIndexes()
        {
        }
        public void AddInstanceFormat2sIndexes()
        {
        }
        public void AddInstanceNatureOfContentTermsIndexes()
        {
        }
        public void AddInstanceNoteTypesIndexes()
        {
        }
        public void AddInstanceNoteType2sIndexes()
        {
        }
        public void AddInstanceRelationshipsIndexes()
        {
        }
        public void AddInstanceRelationshipTypesIndexes()
        {
        }
        public void AddInstanceSourceMarcsIndexes()
        {
        }
        public void AddInstanceStatisticalCodesIndexes()
        {
        }
        public void AddInstanceStatusesIndexes()
        {
        }
        public void AddInstanceTagsIndexes()
        {
        }
        public void AddInstanceTypesIndexes()
        {
        }
        public void AddInstanceType2sIndexes()
        {
        }
        public void AddInstitutionsIndexes()
        {
        }
        public void AddInstitution2sIndexes()
        {
        }
        public void AddInterfacesIndexes()
        {
        }
        public void AddInterface2sIndexes()
        {
        }
        public void AddInterfaceCredentialsIndexes()
        {
        }
        public void AddInterfaceCredential2sIndexes()
        {
        }
        public void AddInterfaceTypesIndexes()
        {
        }
        public void AddInvoicesIndexes()
        {
        }
        public void AddInvoice2sIndexes()
        {
        }
        public void AddInvoiceAcquisitionsUnitsIndexes()
        {
        }
        public void AddInvoiceAdjustmentsIndexes()
        {
        }
        public void AddInvoiceAdjustmentFundsIndexes()
        {
        }
        public void AddInvoiceItemsIndexes()
        {
        }
        public void AddInvoiceItem2sIndexes()
        {
        }
        public void AddInvoiceItemAdjustmentsIndexes()
        {
        }
        public void AddInvoiceItemAdjustmentFundsIndexes()
        {
        }
        public void AddInvoiceItemFundsIndexes()
        {
        }
        public void AddInvoiceItemReferenceNumbersIndexes()
        {
        }
        public void AddInvoiceItemTagsIndexes()
        {
        }
        public void AddInvoiceOrderNumbersIndexes()
        {
        }
        public void AddInvoiceStatusesIndexes()
        {
        }
        public void AddInvoiceTagsIndexes()
        {
        }
        public void AddInvoiceTransactionSummariesIndexes()
        {
        }
        public void AddInvoiceTransactionSummary2sIndexes()
        {
        }
        public void AddIsbnsIndexes()
        {
        }
        public void AddIssnsIndexes()
        {
        }
        public void AddIssuanceModesIndexes()
        {
        }
        public void AddItemsIndexes()
        {
        }
        public void AddItem2sIndexes()
        {
        }
        public void AddItemDamagedStatusesIndexes()
        {
        }
        public void AddItemDamagedStatus2sIndexes()
        {
        }
        public void AddItemDonorsIndexes()
        {
        }
        public void AddItemElectronicAccessesIndexes()
        {
        }
        public void AddItemFormerIdsIndexes()
        {
        }
        public void AddItemNotesIndexes()
        {
        }
        public void AddItemNoteTypesIndexes()
        {
        }
        public void AddItemNoteType2sIndexes()
        {
        }
        public void AddItemStatisticalCodesIndexes()
        {
        }
        public void AddItemStatusesIndexes()
        {
        }
        public void AddItemTagsIndexes()
        {
        }
        public void AddItemYearCaptionsIndexes()
        {
        }
        public void AddJobExecutionsIndexes()
        {
        }
        public void AddJobExecution2sIndexes()
        {
        }
        public void AddJobExecutionProgressesIndexes()
        {
        }
        public void AddJobExecutionProgress2sIndexes()
        {
        }
        public void AddJobExecutionSourceChunksIndexes()
        {
        }
        public void AddJobExecutionSourceChunk2sIndexes()
        {
        }
        public void AddJobMonitoringsIndexes()
        {
        }
        public void AddJobMonitoring2sIndexes()
        {
        }
        public void AddJournalRecordsIndexes()
        {
        }
        public void AddJournalRecord2sIndexes()
        {
        }
        public void AddLanguagesIndexes()
        {
        }
        public void AddLedgersIndexes()
        {
        }
        public void AddLedger2sIndexes()
        {
        }
        public void AddLedgerAcquisitionsUnitsIndexes()
        {
        }
        public void AddLedgerRolloversIndexes()
        {
        }
        public void AddLedgerRollover2sIndexes()
        {
        }
        public void AddLedgerRolloverBudgetsRolloversIndexes()
        {
        }
        public void AddLedgerRolloverEncumbrancesRolloversIndexes()
        {
        }
        public void AddLedgerRolloverErrorsIndexes()
        {
        }
        public void AddLedgerRolloverError2sIndexes()
        {
        }
        public void AddLedgerRolloverProgressesIndexes()
        {
        }
        public void AddLedgerRolloverProgress2sIndexes()
        {
        }
        public void AddLibrariesIndexes()
        {
        }
        public void AddLibrary2sIndexes()
        {
        }
        public void AddLoansIndexes()
        {
        }
        public void AddLoan2sIndexes()
        {
        }
        public void AddLoanEventsIndexes()
        {
        }
        public void AddLoanEvent2sIndexes()
        {
        }
        public void AddLoanPoliciesIndexes()
        {
        }
        public void AddLoanPolicy2sIndexes()
        {
        }
        public void AddLoanTypesIndexes()
        {
        }
        public void AddLoanType2sIndexes()
        {
        }
        public void AddLocationsIndexes()
        {
        }
        public void AddLocation2sIndexes()
        {
        }
        public void AddLocationServicePointsIndexes()
        {
        }
        public void AddLocationSettingsIndexes()
        {
        }
        public void AddLoginsIndexes()
        {
        }
        public void AddLogin2sIndexes()
        {
        }
        public void AddLostItemFeePoliciesIndexes()
        {
        }
        public void AddLostItemFeePolicy2sIndexes()
        {
        }
        public void AddManualBlockTemplatesIndexes()
        {
        }
        public void AddManualBlockTemplate2sIndexes()
        {
        }
        public void AddMappingParamsSnapshotsIndexes()
        {
        }
        public void AddMappingRulesIndexes()
        {
        }
        public void AddMappingRulesSnapshotsIndexes()
        {
        }
        public void AddMarcRecordsIndexes()
        {
        }
        public void AddMarcRecord2sIndexes()
        {
        }
        public void AddMaterialTypesIndexes()
        {
        }
        public void AddMaterialType2sIndexes()
        {
        }
        public void AddModeOfIssuancesIndexes()
        {
        }
        public void AddNatureOfContentTermsIndexes()
        {
        }
        public void AddNatureOfContentTerm2sIndexes()
        {
        }
        public void AddNotesIndexes()
        {
        }
        public void AddNote2sIndexes()
        {
        }
        public void AddNote3sIndexes()
        {
        }
        public void AddNoteTypesIndexes()
        {
        }
        public void AddNoteType2sIndexes()
        {
        }
        public void AddObjectNotesIndexes()
        {
        }
        public void AddOclcNumbersIndexes()
        {
        }
        public void AddOrdersIndexes()
        {
        }
        public void AddOrder2sIndexes()
        {
        }
        public void AddOrderAcquisitionsUnitsIndexes()
        {
        }
        public void AddOrderInvoicesIndexes()
        {
        }
        public void AddOrderInvoice2sIndexes()
        {
        }
        public void AddOrderItemsIndexes()
        {
        }
        public void AddOrderItem2sIndexes()
        {
        }
        public void AddOrderItemAlertsIndexes()
        {
        }
        public void AddOrderItemClaimsIndexes()
        {
        }
        public void AddOrderItemContributorsIndexes()
        {
        }
        public void AddOrderItemFundsIndexes()
        {
        }
        public void AddOrderItemLocation2sIndexes()
        {
        }
        public void AddOrderItemNotesIndexes()
        {
        }
        public void AddOrderItemProductIdsIndexes()
        {
        }
        public void AddOrderItemReferenceNumbersIndexes()
        {
        }
        public void AddOrderItemReportingCodesIndexes()
        {
        }
        public void AddOrderItemTagsIndexes()
        {
        }
        public void AddOrderItemVolumesIndexes()
        {
        }
        public void AddOrderNotesIndexes()
        {
        }
        public void AddOrderStatusesIndexes()
        {
        }
        public void AddOrderTagsIndexes()
        {
        }
        public void AddOrderTemplatesIndexes()
        {
        }
        public void AddOrderTemplate2sIndexes()
        {
        }
        public void AddOrderTransactionSummariesIndexes()
        {
        }
        public void AddOrderTransactionSummary2sIndexes()
        {
        }
        public void AddOrderTypesIndexes()
        {
        }
        public void AddOrganizationsIndexes()
        {
        }
        public void AddOrganization2sIndexes()
        {
        }
        public void AddOrganizationAccountsIndexes()
        {
        }
        public void AddOrganizationAccountAcquisitionsUnitsIndexes()
        {
        }
        public void AddOrganizationAcquisitionsUnitsIndexes()
        {
        }
        public void AddOrganizationAddressesIndexes()
        {
        }
        public void AddOrganizationAddressCategoriesIndexes()
        {
        }
        public void AddOrganizationAgreementsIndexes()
        {
        }
        public void AddOrganizationAliasesIndexes()
        {
        }
        public void AddOrganizationChangelogsIndexes()
        {
        }
        public void AddOrganizationContactsIndexes()
        {
        }
        public void AddOrganizationEmailsIndexes()
        {
        }
        public void AddOrganizationEmailCategoriesIndexes()
        {
        }
        public void AddOrganizationInterfacesIndexes()
        {
        }
        public void AddOrganizationNotesIndexes()
        {
        }
        public void AddOrganizationPhoneNumbersIndexes()
        {
        }
        public void AddOrganizationPhoneNumberCategoriesIndexes()
        {
        }
        public void AddOrganizationTagsIndexes()
        {
        }
        public void AddOrganizationUrlsIndexes()
        {
        }
        public void AddOrganizationUrlCategoriesIndexes()
        {
        }
        public void AddOverdueFinePoliciesIndexes()
        {
        }
        public void AddOverdueFinePolicy2sIndexes()
        {
        }
        public void AddOwnersIndexes()
        {
        }
        public void AddOwner2sIndexes()
        {
        }
        public void AddPatronActionSessionsIndexes()
        {
        }
        public void AddPatronActionSession2sIndexes()
        {
        }
        public void AddPatronNoticePoliciesIndexes()
        {
        }
        public void AddPatronNoticePolicy2sIndexes()
        {
        }
        public void AddPatronNoticePolicyFeeFineNoticesIndexes()
        {
        }
        public void AddPatronNoticePolicyLoanNoticesIndexes()
        {
        }
        public void AddPatronNoticePolicyRequestNoticesIndexes()
        {
        }
        public void AddPaymentsIndexes()
        {
        }
        public void AddPayment2sIndexes()
        {
        }
        public void AddPaymentMethodsIndexes()
        {
        }
        public void AddPaymentMethod2sIndexes()
        {
        }
        public void AddPaymentTypesIndexes()
        {
        }
        public void AddPermissionsIndexes()
        {
        }
        public void AddPermission2sIndexes()
        {
        }
        public void AddPermissionChildOfsIndexes()
        {
        }
        public void AddPermissionGrantedTosIndexes()
        {
        }
        public void AddPermissionSubPermissionsIndexes()
        {
        }
        public void AddPermissionsUsersIndexes()
        {
        }
        public void AddPermissionsUser2sIndexes()
        {
        }
        public void AddPermissionsUserPermissionsIndexes()
        {
        }
        public void AddPermissionTagsIndexes()
        {
        }
        public void AddPhysicalDescriptionsIndexes()
        {
        }
        public void AddPrecedingSucceedingTitlesIndexes()
        {
        }
        public void AddPrecedingSucceedingTitle2sIndexes()
        {
        }
        public void AddPrecedingSucceedingTitleIdentifiersIndexes()
        {
        }
        public void AddPrefixesIndexes()
        {
        }
        public void AddPrefix2sIndexes()
        {
        }
        public void AddPrintersIndexes()
        {
        }
        public void AddProxiesIndexes()
        {
        }
        public void AddProxy2sIndexes()
        {
        }
        public void AddPublicationsIndexes()
        {
        }
        public void AddPublicationFrequenciesIndexes()
        {
        }
        public void AddPublicationRangesIndexes()
        {
        }
        public void AddRawRecordsIndexes()
        {
        }
        public void AddRawRecord2sIndexes()
        {
        }
        public void AddReceiptStatusesIndexes()
        {
        }
        public void AddReceivingsIndexes()
        {
        }
        public void AddReceiving2sIndexes()
        {
        }
        public void AddRecordsIndexes()
        {
        }
        public void AddRecord2sIndexes()
        {
        }
        public void AddRefundReasonsIndexes()
        {
        }
        public void AddRefundReason2sIndexes()
        {
        }
        public void AddRelationshipsIndexes()
        {
        }
        public void AddRelationshipTypesIndexes()
        {
        }
        public void AddReportingCodesIndexes()
        {
        }
        public void AddReportingCode2sIndexes()
        {
        }
        public void AddRequestsIndexes()
        {
        }
        public void AddRequest2sIndexes()
        {
        }
        public void AddRequestIdentifiersIndexes()
        {
        }
        public void AddRequestNotesIndexes()
        {
        }
        public void AddRequestPoliciesIndexes()
        {
        }
        public void AddRequestPolicy2sIndexes()
        {
        }
        public void AddRequestPolicyRequestTypesIndexes()
        {
        }
        public void AddRequestTagsIndexes()
        {
        }
        public void AddScheduledNoticesIndexes()
        {
        }
        public void AddScheduledNotice2sIndexes()
        {
        }
        public void AddSeriesIndexes()
        {
        }
        public void AddServicePointsIndexes()
        {
        }
        public void AddServicePoint2sIndexes()
        {
        }
        public void AddServicePointOwnersIndexes()
        {
        }
        public void AddServicePointStaffSlipsIndexes()
        {
        }
        public void AddServicePointUsersIndexes()
        {
        }
        public void AddServicePointUser2sIndexes()
        {
        }
        public void AddServicePointUserServicePointsIndexes()
        {
        }
        public void AddSettingsIndexes()
        {
        }
        public void AddSnapshotsIndexes()
        {
        }
        public void AddSnapshot2sIndexes()
        {
        }
        public void AddSourcesIndexes()
        {
        }
        public void AddSource2sIndexes()
        {
        }
        public void AddSourceMarcsIndexes()
        {
        }
        public void AddSourceMarcFieldsIndexes()
        {
        }
        public void AddStaffSlipsIndexes()
        {
        }
        public void AddStaffSlip2sIndexes()
        {
        }
        public void AddStatisticalCodesIndexes()
        {
        }
        public void AddStatisticalCode2sIndexes()
        {
        }
        public void AddStatisticalCodeTypesIndexes()
        {
        }
        public void AddStatisticalCodeType2sIndexes()
        {
        }
        public void AddStatusesIndexes()
        {
        }
        public void AddSubjectsIndexes()
        {
        }
        public void AddSuffixesIndexes()
        {
        }
        public void AddSuffix2sIndexes()
        {
        }
        public void AddSupplementStatementsIndexes()
        {
        }
        public void AddTagsIndexes()
        {
        }
        public void AddTag2sIndexes()
        {
        }
        public void AddTemplatesIndexes()
        {
        }
        public void AddTemplate2sIndexes()
        {
        }
        public void AddTemplateOutputFormatsIndexes()
        {
        }
        public void AddTitlesIndexes()
        {
        }
        public void AddTitle2sIndexes()
        {
        }
        public void AddTitleContributorsIndexes()
        {
        }
        public void AddTitleProductIdsIndexes()
        {
        }
        public void AddTransactionsIndexes()
        {
        }
        public void AddTransaction2sIndexes()
        {
        }
        public void AddTransactionTagsIndexes()
        {
        }
        public void AddTransferAccountsIndexes()
        {
        }
        public void AddTransferAccount2sIndexes()
        {
        }
        public void AddTransferCriteriasIndexes()
        {
        }
        public void AddTransferCriteria2sIndexes()
        {
        }
        public void AddUsersIndexes()
        {
        }
        public void AddUser2sIndexes()
        {
        }
        public void AddUserAcquisitionsUnitsIndexes()
        {
        }
        public void AddUserAcquisitionsUnit2sIndexes()
        {
        }
        public void AddUserAddressesIndexes()
        {
        }
        public void AddUserDepartmentsIndexes()
        {
        }
        public void AddUserNotesIndexes()
        {
        }
        public void AddUserRequestPreferencesIndexes()
        {
        }
        public void AddUserRequestPreference2sIndexes()
        {
        }
        public void AddUserSummariesIndexes()
        {
        }
        public void AddUserSummary2sIndexes()
        {
        }
        public void AddUserSummaryOpenFeesFinesIndexes()
        {
        }
        public void AddUserSummaryOpenLoansIndexes()
        {
        }
        public void AddUserTagsIndexes()
        {
        }
        public void AddVouchersIndexes()
        {
        }
        public void AddVoucher2sIndexes()
        {
        }
        public void AddVoucherAcquisitionsUnitsIndexes()
        {
        }
        public void AddVoucherItemsIndexes()
        {
        }
        public void AddVoucherItem2sIndexes()
        {
        }
        public void AddVoucherItemFundsIndexes()
        {
        }
        public void AddVoucherItemInvoiceItemsIndexes()
        {
        }
        public void AddVoucherStatusesIndexes()
        {
        }
        public void AddWaiveReasonsIndexes()
        {
        }
        public void AddWaiveReason2sIndexes()
        {
        }

        public void RemoveAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveAcquisitionsUnit2sIndexes()
        {
        }
        public void RemoveAddressesIndexes()
        {
        }
        public void RemoveAddressTypesIndexes()
        {
        }
        public void RemoveAddressType2sIndexes()
        {
        }
        public void RemoveAlertsIndexes()
        {
        }
        public void RemoveAlert2sIndexes()
        {
        }
        public void RemoveAllocatedFromFundsIndexes()
        {
        }
        public void RemoveAllocatedToFundsIndexes()
        {
        }
        public void RemoveAlternativeTitlesIndexes()
        {
        }
        public void RemoveAlternativeTitleTypesIndexes()
        {
        }
        public void RemoveAlternativeTitleType2sIndexes()
        {
        }
        public void RemoveAuthAttemptsIndexes()
        {
        }
        public void RemoveAuthAttempt2sIndexes()
        {
        }
        public void RemoveAuthCredentialsHistoriesIndexes()
        {
        }
        public void RemoveAuthCredentialsHistory2sIndexes()
        {
        }
        public void RemoveAuthPasswordActionsIndexes()
        {
        }
        public void RemoveBatchGroupsIndexes()
        {
        }
        public void RemoveBatchGroup2sIndexes()
        {
        }
        public void RemoveBatchVouchersIndexes()
        {
        }
        public void RemoveBatchVoucher2sIndexes()
        {
        }
        public void RemoveBatchVoucherBatchedVouchersIndexes()
        {
        }
        public void RemoveBatchVoucherBatchedVoucherBatchedVoucherLinesIndexes()
        {
        }
        public void RemoveBatchVoucherBatchedVoucherBatchedVoucherLineFundCodesIndexes()
        {
        }
        public void RemoveBatchVoucherExportsIndexes()
        {
        }
        public void RemoveBatchVoucherExport2sIndexes()
        {
        }
        public void RemoveBatchVoucherExportConfigsIndexes()
        {
        }
        public void RemoveBatchVoucherExportConfig2sIndexes()
        {
        }
        public void RemoveBatchVoucherExportConfigWeekdaysIndexes()
        {
        }
        public void RemoveBlocksIndexes()
        {
        }
        public void RemoveBlock2sIndexes()
        {
        }
        public void RemoveBlockConditionsIndexes()
        {
        }
        public void RemoveBlockCondition2sIndexes()
        {
        }
        public void RemoveBlockLimitsIndexes()
        {
        }
        public void RemoveBlockLimit2sIndexes()
        {
        }
        public void RemoveBoundWithPartsIndexes()
        {
        }
        public void RemoveBoundWithPart2sIndexes()
        {
        }
        public void RemoveBudgetsIndexes()
        {
        }
        public void RemoveBudget2sIndexes()
        {
        }
        public void RemoveBudgetAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveBudgetExpenseClassesIndexes()
        {
        }
        public void RemoveBudgetExpenseClass2sIndexes()
        {
        }
        public void RemoveBudgetGroupsIndexes()
        {
        }
        public void RemoveBudgetGroup2sIndexes()
        {
        }
        public void RemoveBudgetTagsIndexes()
        {
        }
        public void RemoveCallNumberTypesIndexes()
        {
        }
        public void RemoveCallNumberType2sIndexes()
        {
        }
        public void RemoveCampusesIndexes()
        {
        }
        public void RemoveCampus2sIndexes()
        {
        }
        public void RemoveCancellationReasonsIndexes()
        {
        }
        public void RemoveCancellationReason2sIndexes()
        {
        }
        public void RemoveCategoriesIndexes()
        {
        }
        public void RemoveCategory2sIndexes()
        {
        }
        public void RemoveCheckInsIndexes()
        {
        }
        public void RemoveCheckIn2sIndexes()
        {
        }
        public void RemoveCirculationNotesIndexes()
        {
        }
        public void RemoveCirculationRulesIndexes()
        {
        }
        public void RemoveCirculationRule2sIndexes()
        {
        }
        public void RemoveClassificationsIndexes()
        {
        }
        public void RemoveClassificationTypesIndexes()
        {
        }
        public void RemoveClassificationType2sIndexes()
        {
        }
        public void RemoveCloseReasonsIndexes()
        {
        }
        public void RemoveCloseReason2sIndexes()
        {
        }
        public void RemoveCommentsIndexes()
        {
        }
        public void RemoveComment2sIndexes()
        {
        }
        public void RemoveConfigurationsIndexes()
        {
        }
        public void RemoveConfiguration2sIndexes()
        {
        }
        public void RemoveContactsIndexes()
        {
        }
        public void RemoveContact2sIndexes()
        {
        }
        public void RemoveContactAddressesIndexes()
        {
        }
        public void RemoveContactAddressCategoriesIndexes()
        {
        }
        public void RemoveContactCategoriesIndexes()
        {
        }
        public void RemoveContactEmailsIndexes()
        {
        }
        public void RemoveContactEmailCategoriesIndexes()
        {
        }
        public void RemoveContactPhoneNumbersIndexes()
        {
        }
        public void RemoveContactPhoneNumberCategoriesIndexes()
        {
        }
        public void RemoveContactTypesIndexes()
        {
        }
        public void RemoveContactUrlsIndexes()
        {
        }
        public void RemoveContactUrlCategoriesIndexes()
        {
        }
        public void RemoveContributorsIndexes()
        {
        }
        public void RemoveContributorNameTypesIndexes()
        {
        }
        public void RemoveContributorNameType2sIndexes()
        {
        }
        public void RemoveContributorTypesIndexes()
        {
        }
        public void RemoveContributorType2sIndexes()
        {
        }
        public void RemoveCountriesIndexes()
        {
        }
        public void RemoveCurrenciesIndexes()
        {
        }
        public void RemoveCustomFieldsIndexes()
        {
        }
        public void RemoveCustomField2sIndexes()
        {
        }
        public void RemoveCustomFieldValuesIndexes()
        {
        }
        public void RemoveDepartmentsIndexes()
        {
        }
        public void RemoveDepartment2sIndexes()
        {
        }
        public void RemoveDocumentsIndexes()
        {
        }
        public void RemoveDocument2sIndexes()
        {
        }
        public void RemoveEditionsIndexes()
        {
        }
        public void RemoveElectronicAccessesIndexes()
        {
        }
        public void RemoveElectronicAccessRelationshipsIndexes()
        {
        }
        public void RemoveElectronicAccessRelationship2sIndexes()
        {
        }
        public void RemoveErrorRecordsIndexes()
        {
        }
        public void RemoveErrorRecord2sIndexes()
        {
        }
        public void RemoveEventLogsIndexes()
        {
        }
        public void RemoveEventLog2sIndexes()
        {
        }
        public void RemoveExpenseClassesIndexes()
        {
        }
        public void RemoveExpenseClass2sIndexes()
        {
        }
        public void RemoveExportConfigCredentialsIndexes()
        {
        }
        public void RemoveExportConfigCredential2sIndexes()
        {
        }
        public void RemoveExtentsIndexes()
        {
        }
        public void RemoveFeesIndexes()
        {
        }
        public void RemoveFee2sIndexes()
        {
        }
        public void RemoveFeeTypesIndexes()
        {
        }
        public void RemoveFeeType2sIndexes()
        {
        }
        public void RemoveFinanceGroupsIndexes()
        {
        }
        public void RemoveFinanceGroup2sIndexes()
        {
        }
        public void RemoveFinanceGroupAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveFiscalYearsIndexes()
        {
        }
        public void RemoveFiscalYear2sIndexes()
        {
        }
        public void RemoveFiscalYearAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveFixedDueDateSchedulesIndexes()
        {
        }
        public void RemoveFixedDueDateSchedule2sIndexes()
        {
        }
        public void RemoveFixedDueDateScheduleSchedulesIndexes()
        {
        }
        public void RemoveFormatsIndexes()
        {
        }
        public void RemoveFundsIndexes()
        {
        }
        public void RemoveFund2sIndexes()
        {
        }
        public void RemoveFundAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveFundTagsIndexes()
        {
        }
        public void RemoveFundTypesIndexes()
        {
        }
        public void RemoveFundType2sIndexes()
        {
        }
        public void RemoveGroupsIndexes()
        {
        }
        public void RemoveGroup2sIndexes()
        {
        }
        public void RemoveHoldingsIndexes()
        {
        }
        public void RemoveHolding2sIndexes()
        {
        }
        public void RemoveHoldingDonorsIndexes()
        {
        }
        public void RemoveHoldingElectronicAccessesIndexes()
        {
        }
        public void RemoveHoldingEntriesIndexes()
        {
        }
        public void RemoveHoldingFormerIdsIndexes()
        {
        }
        public void RemoveHoldingNotesIndexes()
        {
        }
        public void RemoveHoldingNoteTypesIndexes()
        {
        }
        public void RemoveHoldingNoteType2sIndexes()
        {
        }
        public void RemoveHoldingStatisticalCodesIndexes()
        {
        }
        public void RemoveHoldingTagsIndexes()
        {
        }
        public void RemoveHoldingTypesIndexes()
        {
        }
        public void RemoveHoldingType2sIndexes()
        {
        }
        public void RemoveHridSettingsIndexes()
        {
        }
        public void RemoveHridSetting2sIndexes()
        {
        }
        public void RemoveIdentifiersIndexes()
        {
        }
        public void RemoveIdTypesIndexes()
        {
        }
        public void RemoveIdType2sIndexes()
        {
        }
        public void RemoveIllPoliciesIndexes()
        {
        }
        public void RemoveIllPolicy2sIndexes()
        {
        }
        public void RemoveIndexStatementsIndexes()
        {
        }
        public void RemoveInstancesIndexes()
        {
        }
        public void RemoveInstance2sIndexes()
        {
        }
        public void RemoveInstanceFormatsIndexes()
        {
        }
        public void RemoveInstanceFormat2sIndexes()
        {
        }
        public void RemoveInstanceNatureOfContentTermsIndexes()
        {
        }
        public void RemoveInstanceNoteTypesIndexes()
        {
        }
        public void RemoveInstanceNoteType2sIndexes()
        {
        }
        public void RemoveInstanceRelationshipsIndexes()
        {
        }
        public void RemoveInstanceRelationshipTypesIndexes()
        {
        }
        public void RemoveInstanceSourceMarcsIndexes()
        {
        }
        public void RemoveInstanceStatisticalCodesIndexes()
        {
        }
        public void RemoveInstanceStatusesIndexes()
        {
        }
        public void RemoveInstanceTagsIndexes()
        {
        }
        public void RemoveInstanceTypesIndexes()
        {
        }
        public void RemoveInstanceType2sIndexes()
        {
        }
        public void RemoveInstitutionsIndexes()
        {
        }
        public void RemoveInstitution2sIndexes()
        {
        }
        public void RemoveInterfacesIndexes()
        {
        }
        public void RemoveInterface2sIndexes()
        {
        }
        public void RemoveInterfaceCredentialsIndexes()
        {
        }
        public void RemoveInterfaceCredential2sIndexes()
        {
        }
        public void RemoveInterfaceTypesIndexes()
        {
        }
        public void RemoveInvoicesIndexes()
        {
        }
        public void RemoveInvoice2sIndexes()
        {
        }
        public void RemoveInvoiceAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveInvoiceAdjustmentsIndexes()
        {
        }
        public void RemoveInvoiceAdjustmentFundsIndexes()
        {
        }
        public void RemoveInvoiceItemsIndexes()
        {
        }
        public void RemoveInvoiceItem2sIndexes()
        {
        }
        public void RemoveInvoiceItemAdjustmentsIndexes()
        {
        }
        public void RemoveInvoiceItemAdjustmentFundsIndexes()
        {
        }
        public void RemoveInvoiceItemFundsIndexes()
        {
        }
        public void RemoveInvoiceItemReferenceNumbersIndexes()
        {
        }
        public void RemoveInvoiceItemTagsIndexes()
        {
        }
        public void RemoveInvoiceOrderNumbersIndexes()
        {
        }
        public void RemoveInvoiceStatusesIndexes()
        {
        }
        public void RemoveInvoiceTagsIndexes()
        {
        }
        public void RemoveInvoiceTransactionSummariesIndexes()
        {
        }
        public void RemoveInvoiceTransactionSummary2sIndexes()
        {
        }
        public void RemoveIsbnsIndexes()
        {
        }
        public void RemoveIssnsIndexes()
        {
        }
        public void RemoveIssuanceModesIndexes()
        {
        }
        public void RemoveItemsIndexes()
        {
        }
        public void RemoveItem2sIndexes()
        {
        }
        public void RemoveItemDamagedStatusesIndexes()
        {
        }
        public void RemoveItemDamagedStatus2sIndexes()
        {
        }
        public void RemoveItemDonorsIndexes()
        {
        }
        public void RemoveItemElectronicAccessesIndexes()
        {
        }
        public void RemoveItemFormerIdsIndexes()
        {
        }
        public void RemoveItemNotesIndexes()
        {
        }
        public void RemoveItemNoteTypesIndexes()
        {
        }
        public void RemoveItemNoteType2sIndexes()
        {
        }
        public void RemoveItemStatisticalCodesIndexes()
        {
        }
        public void RemoveItemStatusesIndexes()
        {
        }
        public void RemoveItemTagsIndexes()
        {
        }
        public void RemoveItemYearCaptionsIndexes()
        {
        }
        public void RemoveJobExecutionsIndexes()
        {
        }
        public void RemoveJobExecution2sIndexes()
        {
        }
        public void RemoveJobExecutionProgressesIndexes()
        {
        }
        public void RemoveJobExecutionProgress2sIndexes()
        {
        }
        public void RemoveJobExecutionSourceChunksIndexes()
        {
        }
        public void RemoveJobExecutionSourceChunk2sIndexes()
        {
        }
        public void RemoveJobMonitoringsIndexes()
        {
        }
        public void RemoveJobMonitoring2sIndexes()
        {
        }
        public void RemoveJournalRecordsIndexes()
        {
        }
        public void RemoveJournalRecord2sIndexes()
        {
        }
        public void RemoveLanguagesIndexes()
        {
        }
        public void RemoveLedgersIndexes()
        {
        }
        public void RemoveLedger2sIndexes()
        {
        }
        public void RemoveLedgerAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveLedgerRolloversIndexes()
        {
        }
        public void RemoveLedgerRollover2sIndexes()
        {
        }
        public void RemoveLedgerRolloverBudgetsRolloversIndexes()
        {
        }
        public void RemoveLedgerRolloverEncumbrancesRolloversIndexes()
        {
        }
        public void RemoveLedgerRolloverErrorsIndexes()
        {
        }
        public void RemoveLedgerRolloverError2sIndexes()
        {
        }
        public void RemoveLedgerRolloverProgressesIndexes()
        {
        }
        public void RemoveLedgerRolloverProgress2sIndexes()
        {
        }
        public void RemoveLibrariesIndexes()
        {
        }
        public void RemoveLibrary2sIndexes()
        {
        }
        public void RemoveLoansIndexes()
        {
        }
        public void RemoveLoan2sIndexes()
        {
        }
        public void RemoveLoanEventsIndexes()
        {
        }
        public void RemoveLoanEvent2sIndexes()
        {
        }
        public void RemoveLoanPoliciesIndexes()
        {
        }
        public void RemoveLoanPolicy2sIndexes()
        {
        }
        public void RemoveLoanTypesIndexes()
        {
        }
        public void RemoveLoanType2sIndexes()
        {
        }
        public void RemoveLocationsIndexes()
        {
        }
        public void RemoveLocation2sIndexes()
        {
        }
        public void RemoveLocationServicePointsIndexes()
        {
        }
        public void RemoveLocationSettingsIndexes()
        {
        }
        public void RemoveLoginsIndexes()
        {
        }
        public void RemoveLogin2sIndexes()
        {
        }
        public void RemoveLostItemFeePoliciesIndexes()
        {
        }
        public void RemoveLostItemFeePolicy2sIndexes()
        {
        }
        public void RemoveManualBlockTemplatesIndexes()
        {
        }
        public void RemoveManualBlockTemplate2sIndexes()
        {
        }
        public void RemoveMappingParamsSnapshotsIndexes()
        {
        }
        public void RemoveMappingRulesIndexes()
        {
        }
        public void RemoveMappingRulesSnapshotsIndexes()
        {
        }
        public void RemoveMarcRecordsIndexes()
        {
        }
        public void RemoveMarcRecord2sIndexes()
        {
        }
        public void RemoveMaterialTypesIndexes()
        {
        }
        public void RemoveMaterialType2sIndexes()
        {
        }
        public void RemoveModeOfIssuancesIndexes()
        {
        }
        public void RemoveNatureOfContentTermsIndexes()
        {
        }
        public void RemoveNatureOfContentTerm2sIndexes()
        {
        }
        public void RemoveNotesIndexes()
        {
        }
        public void RemoveNote2sIndexes()
        {
        }
        public void RemoveNote3sIndexes()
        {
        }
        public void RemoveNoteTypesIndexes()
        {
        }
        public void RemoveNoteType2sIndexes()
        {
        }
        public void RemoveObjectNotesIndexes()
        {
        }
        public void RemoveOclcNumbersIndexes()
        {
        }
        public void RemoveOrdersIndexes()
        {
        }
        public void RemoveOrder2sIndexes()
        {
        }
        public void RemoveOrderAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveOrderInvoicesIndexes()
        {
        }
        public void RemoveOrderInvoice2sIndexes()
        {
        }
        public void RemoveOrderItemsIndexes()
        {
        }
        public void RemoveOrderItem2sIndexes()
        {
        }
        public void RemoveOrderItemAlertsIndexes()
        {
        }
        public void RemoveOrderItemClaimsIndexes()
        {
        }
        public void RemoveOrderItemContributorsIndexes()
        {
        }
        public void RemoveOrderItemFundsIndexes()
        {
        }
        public void RemoveOrderItemLocation2sIndexes()
        {
        }
        public void RemoveOrderItemNotesIndexes()
        {
        }
        public void RemoveOrderItemProductIdsIndexes()
        {
        }
        public void RemoveOrderItemReferenceNumbersIndexes()
        {
        }
        public void RemoveOrderItemReportingCodesIndexes()
        {
        }
        public void RemoveOrderItemTagsIndexes()
        {
        }
        public void RemoveOrderItemVolumesIndexes()
        {
        }
        public void RemoveOrderNotesIndexes()
        {
        }
        public void RemoveOrderStatusesIndexes()
        {
        }
        public void RemoveOrderTagsIndexes()
        {
        }
        public void RemoveOrderTemplatesIndexes()
        {
        }
        public void RemoveOrderTemplate2sIndexes()
        {
        }
        public void RemoveOrderTransactionSummariesIndexes()
        {
        }
        public void RemoveOrderTransactionSummary2sIndexes()
        {
        }
        public void RemoveOrderTypesIndexes()
        {
        }
        public void RemoveOrganizationsIndexes()
        {
        }
        public void RemoveOrganization2sIndexes()
        {
        }
        public void RemoveOrganizationAccountsIndexes()
        {
        }
        public void RemoveOrganizationAccountAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveOrganizationAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveOrganizationAddressesIndexes()
        {
        }
        public void RemoveOrganizationAddressCategoriesIndexes()
        {
        }
        public void RemoveOrganizationAgreementsIndexes()
        {
        }
        public void RemoveOrganizationAliasesIndexes()
        {
        }
        public void RemoveOrganizationChangelogsIndexes()
        {
        }
        public void RemoveOrganizationContactsIndexes()
        {
        }
        public void RemoveOrganizationEmailsIndexes()
        {
        }
        public void RemoveOrganizationEmailCategoriesIndexes()
        {
        }
        public void RemoveOrganizationInterfacesIndexes()
        {
        }
        public void RemoveOrganizationNotesIndexes()
        {
        }
        public void RemoveOrganizationPhoneNumbersIndexes()
        {
        }
        public void RemoveOrganizationPhoneNumberCategoriesIndexes()
        {
        }
        public void RemoveOrganizationTagsIndexes()
        {
        }
        public void RemoveOrganizationUrlsIndexes()
        {
        }
        public void RemoveOrganizationUrlCategoriesIndexes()
        {
        }
        public void RemoveOverdueFinePoliciesIndexes()
        {
        }
        public void RemoveOverdueFinePolicy2sIndexes()
        {
        }
        public void RemoveOwnersIndexes()
        {
        }
        public void RemoveOwner2sIndexes()
        {
        }
        public void RemovePatronActionSessionsIndexes()
        {
        }
        public void RemovePatronActionSession2sIndexes()
        {
        }
        public void RemovePatronNoticePoliciesIndexes()
        {
        }
        public void RemovePatronNoticePolicy2sIndexes()
        {
        }
        public void RemovePatronNoticePolicyFeeFineNoticesIndexes()
        {
        }
        public void RemovePatronNoticePolicyLoanNoticesIndexes()
        {
        }
        public void RemovePatronNoticePolicyRequestNoticesIndexes()
        {
        }
        public void RemovePaymentsIndexes()
        {
        }
        public void RemovePayment2sIndexes()
        {
        }
        public void RemovePaymentMethodsIndexes()
        {
        }
        public void RemovePaymentMethod2sIndexes()
        {
        }
        public void RemovePaymentTypesIndexes()
        {
        }
        public void RemovePermissionsIndexes()
        {
        }
        public void RemovePermission2sIndexes()
        {
        }
        public void RemovePermissionChildOfsIndexes()
        {
        }
        public void RemovePermissionGrantedTosIndexes()
        {
        }
        public void RemovePermissionSubPermissionsIndexes()
        {
        }
        public void RemovePermissionsUsersIndexes()
        {
        }
        public void RemovePermissionsUser2sIndexes()
        {
        }
        public void RemovePermissionsUserPermissionsIndexes()
        {
        }
        public void RemovePermissionTagsIndexes()
        {
        }
        public void RemovePhysicalDescriptionsIndexes()
        {
        }
        public void RemovePrecedingSucceedingTitlesIndexes()
        {
        }
        public void RemovePrecedingSucceedingTitle2sIndexes()
        {
        }
        public void RemovePrecedingSucceedingTitleIdentifiersIndexes()
        {
        }
        public void RemovePrefixesIndexes()
        {
        }
        public void RemovePrefix2sIndexes()
        {
        }
        public void RemovePrintersIndexes()
        {
        }
        public void RemoveProxiesIndexes()
        {
        }
        public void RemoveProxy2sIndexes()
        {
        }
        public void RemovePublicationsIndexes()
        {
        }
        public void RemovePublicationFrequenciesIndexes()
        {
        }
        public void RemovePublicationRangesIndexes()
        {
        }
        public void RemoveRawRecordsIndexes()
        {
        }
        public void RemoveRawRecord2sIndexes()
        {
        }
        public void RemoveReceiptStatusesIndexes()
        {
        }
        public void RemoveReceivingsIndexes()
        {
        }
        public void RemoveReceiving2sIndexes()
        {
        }
        public void RemoveRecordsIndexes()
        {
        }
        public void RemoveRecord2sIndexes()
        {
        }
        public void RemoveRefundReasonsIndexes()
        {
        }
        public void RemoveRefundReason2sIndexes()
        {
        }
        public void RemoveRelationshipsIndexes()
        {
        }
        public void RemoveRelationshipTypesIndexes()
        {
        }
        public void RemoveReportingCodesIndexes()
        {
        }
        public void RemoveReportingCode2sIndexes()
        {
        }
        public void RemoveRequestsIndexes()
        {
        }
        public void RemoveRequest2sIndexes()
        {
        }
        public void RemoveRequestIdentifiersIndexes()
        {
        }
        public void RemoveRequestNotesIndexes()
        {
        }
        public void RemoveRequestPoliciesIndexes()
        {
        }
        public void RemoveRequestPolicy2sIndexes()
        {
        }
        public void RemoveRequestPolicyRequestTypesIndexes()
        {
        }
        public void RemoveRequestTagsIndexes()
        {
        }
        public void RemoveScheduledNoticesIndexes()
        {
        }
        public void RemoveScheduledNotice2sIndexes()
        {
        }
        public void RemoveSeriesIndexes()
        {
        }
        public void RemoveServicePointsIndexes()
        {
        }
        public void RemoveServicePoint2sIndexes()
        {
        }
        public void RemoveServicePointOwnersIndexes()
        {
        }
        public void RemoveServicePointStaffSlipsIndexes()
        {
        }
        public void RemoveServicePointUsersIndexes()
        {
        }
        public void RemoveServicePointUser2sIndexes()
        {
        }
        public void RemoveServicePointUserServicePointsIndexes()
        {
        }
        public void RemoveSettingsIndexes()
        {
        }
        public void RemoveSnapshotsIndexes()
        {
        }
        public void RemoveSnapshot2sIndexes()
        {
        }
        public void RemoveSourcesIndexes()
        {
        }
        public void RemoveSource2sIndexes()
        {
        }
        public void RemoveSourceMarcsIndexes()
        {
        }
        public void RemoveSourceMarcFieldsIndexes()
        {
        }
        public void RemoveStaffSlipsIndexes()
        {
        }
        public void RemoveStaffSlip2sIndexes()
        {
        }
        public void RemoveStatisticalCodesIndexes()
        {
        }
        public void RemoveStatisticalCode2sIndexes()
        {
        }
        public void RemoveStatisticalCodeTypesIndexes()
        {
        }
        public void RemoveStatisticalCodeType2sIndexes()
        {
        }
        public void RemoveStatusesIndexes()
        {
        }
        public void RemoveSubjectsIndexes()
        {
        }
        public void RemoveSuffixesIndexes()
        {
        }
        public void RemoveSuffix2sIndexes()
        {
        }
        public void RemoveSupplementStatementsIndexes()
        {
        }
        public void RemoveTagsIndexes()
        {
        }
        public void RemoveTag2sIndexes()
        {
        }
        public void RemoveTemplatesIndexes()
        {
        }
        public void RemoveTemplate2sIndexes()
        {
        }
        public void RemoveTemplateOutputFormatsIndexes()
        {
        }
        public void RemoveTitlesIndexes()
        {
        }
        public void RemoveTitle2sIndexes()
        {
        }
        public void RemoveTitleContributorsIndexes()
        {
        }
        public void RemoveTitleProductIdsIndexes()
        {
        }
        public void RemoveTransactionsIndexes()
        {
        }
        public void RemoveTransaction2sIndexes()
        {
        }
        public void RemoveTransactionTagsIndexes()
        {
        }
        public void RemoveTransferAccountsIndexes()
        {
        }
        public void RemoveTransferAccount2sIndexes()
        {
        }
        public void RemoveTransferCriteriasIndexes()
        {
        }
        public void RemoveTransferCriteria2sIndexes()
        {
        }
        public void RemoveUsersIndexes()
        {
        }
        public void RemoveUser2sIndexes()
        {
        }
        public void RemoveUserAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveUserAcquisitionsUnit2sIndexes()
        {
        }
        public void RemoveUserAddressesIndexes()
        {
        }
        public void RemoveUserDepartmentsIndexes()
        {
        }
        public void RemoveUserNotesIndexes()
        {
        }
        public void RemoveUserRequestPreferencesIndexes()
        {
        }
        public void RemoveUserRequestPreference2sIndexes()
        {
        }
        public void RemoveUserSummariesIndexes()
        {
        }
        public void RemoveUserSummary2sIndexes()
        {
        }
        public void RemoveUserSummaryOpenFeesFinesIndexes()
        {
        }
        public void RemoveUserSummaryOpenLoansIndexes()
        {
        }
        public void RemoveUserTagsIndexes()
        {
        }
        public void RemoveVouchersIndexes()
        {
        }
        public void RemoveVoucher2sIndexes()
        {
        }
        public void RemoveVoucherAcquisitionsUnitsIndexes()
        {
        }
        public void RemoveVoucherItemsIndexes()
        {
        }
        public void RemoveVoucherItem2sIndexes()
        {
        }
        public void RemoveVoucherItemFundsIndexes()
        {
        }
        public void RemoveVoucherItemInvoiceItemsIndexes()
        {
        }
        public void RemoveVoucherStatusesIndexes()
        {
        }
        public void RemoveWaiveReasonsIndexes()
        {
        }
        public void RemoveWaiveReason2sIndexes()
        {
        }

        public IEnumerable<AcquisitionsUnit> AcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AcquisitionsUnit>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AcquisitionsUnit2> AcquisitionsUnit2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AcquisitionsUnit2>($"SELECT id AS \"Id\", name AS \"Name\", is_deleted AS \"IsDeleted\", protect_create AS \"ProtectCreate\", protect_read AS \"ProtectRead\", protect_update AS \"ProtectUpdate\", protect_delete AS \"ProtectDelete\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Address> Addresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Address>($"SELECT id AS \"Id\", name AS \"Name\", content AS \"Content\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}addresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AddressType> AddressTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AddressType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AddressType2> AddressType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AddressType2>($"SELECT id AS \"Id\", address_type AS \"Name\", \"desc\" AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}address_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Alert> Alerts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Alert>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Alert2> Alert2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Alert2>($"SELECT id AS \"Id\", alert AS \"Alert\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alerts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AllocatedFromFund> AllocatedFromFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AllocatedFromFund>($"SELECT id AS \"Id\", fund_id AS \"FundId\", from_fund_id AS \"FromFundId\" FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AllocatedToFund> AllocatedToFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AllocatedToFund>($"SELECT id AS \"Id\", fund_id AS \"FundId\", to_fund_id AS \"ToFundId\" FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AlternativeTitle> AlternativeTitles(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AlternativeTitle>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", alternative_title_type_id AS \"AlternativeTitleTypeId\", alternative_title AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alternative_titles{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<AlternativeTitleType> AlternativeTitleTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AlternativeTitleType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AlternativeTitleType2> AlternativeTitleType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AlternativeTitleType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}alternative_title_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AuthAttempt> AuthAttempts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AuthAttempt>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AuthAttempt2> AuthAttempt2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AuthAttempt2>($"SELECT id AS \"Id\", user_id AS \"UserId\", last_attempt AS \"LastAttempt\", attempt_count AS \"AttemptCount\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AuthCredentialsHistory> AuthCredentialsHistories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AuthCredentialsHistory>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AuthCredentialsHistory2> AuthCredentialsHistory2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AuthCredentialsHistory2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hash AS \"Hash\", salt AS \"Salt\", date AS \"Date\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<AuthPasswordAction> AuthPasswordActions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<AuthPasswordAction>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchGroup> BatchGroups(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchGroup>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchGroup2> BatchGroup2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchGroup2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucher> BatchVouchers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucher>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucher2> BatchVoucher2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucher2>($"SELECT id AS \"Id\", batch_group AS \"BatchGroup\", created AS \"Created\", start AS \"Start\", \"end\" AS \"End\", total_records AS \"TotalRecords\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherBatchedVoucher> BatchVoucherBatchedVouchers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherBatchedVoucher>($"SELECT id AS \"Id\", batch_voucher_id AS \"BatchVoucherId\", accounting_code AS \"AccountingCode\", account_no AS \"AccountNumber\", amount AS \"Amount\", disbursement_number AS \"DisbursementNumber\", disbursement_date AS \"DisbursementDate\", disbursement_amount AS \"DisbursementAmount\", enclosure_needed AS \"Enclosure\", exchange_rate AS \"ExchangeRate\", folio_invoice_no AS \"FolioInvoiceNumber\", invoice_currency AS \"InvoiceCurrency\", invoice_note AS \"InvoiceNote\", status AS \"Status\", system_currency AS \"SystemCurrency\", type AS \"Type\", vendor_invoice_no AS \"VendorInvoiceNumber\", vendor_name AS \"VendorName\", voucher_date AS \"VoucherDate\", voucher_number AS \"VoucherNumber\", vendor_address_address_line1 AS \"VendorStreetAddress1\", vendor_address_address_line2 AS \"VendorStreetAddress2\", vendor_address_city AS \"VendorCity\", vendor_address_state_region AS \"VendorState\", vendor_address_zip_code AS \"VendorPostalCode\", vendor_address_country AS \"VendorCountryCode\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherBatchedVoucherBatchedVoucherLine> BatchVoucherBatchedVoucherBatchedVoucherLines(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherBatchedVoucherBatchedVoucherLine>($"SELECT id AS \"Id\", batch_voucher_batched_voucher_id AS \"BatchVoucherBatchedVoucherId\", amount AS \"Amount\", external_account_number AS \"AccountNumber\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherBatchedVoucherBatchedVoucherLineFundCode> BatchVoucherBatchedVoucherBatchedVoucherLineFundCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherBatchedVoucherBatchedVoucherLineFundCode>($"SELECT id AS \"Id\", batch_voucher_batched_voucher_batched_voucher_line_id AS \"BatchVoucherBatchedVoucherBatchedVoucherLineId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherExport> BatchVoucherExports(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherExport>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\", batchvoucherid AS \"Batchvoucherid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherExport2> BatchVoucherExport2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherExport2>($"SELECT id AS \"Id\", status AS \"Status\", message AS \"Message\", batch_group_id AS \"BatchGroupId\", start AS \"Start\", \"end\" AS \"End\", batch_voucher_id AS \"BatchVoucherId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherExportConfig> BatchVoucherExportConfigs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherExportConfig>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherExportConfig2> BatchVoucherExportConfig2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherExportConfig2>($"SELECT id AS \"Id\", batch_group_id AS \"BatchGroupId\", enable_scheduled_export AS \"EnableScheduledExport\", format AS \"Format\", start_time AS \"StartTime\", upload_uri AS \"UploadUri\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BatchVoucherExportConfigWeekday> BatchVoucherExportConfigWeekdays(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BatchVoucherExportConfigWeekday>($"SELECT id AS \"Id\", batch_voucher_export_config_id AS \"BatchVoucherExportConfigId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Block> Blocks(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Block>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Block2> Block2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Block2>($"SELECT id AS \"Id\", type AS \"Type\", \"desc\" AS \"Description\", code AS \"Code\", staff_information AS \"StaffInformation\", patron_message AS \"PatronMessage\", expiration_date AS \"ExpirationDate\", borrowing AS \"Borrowing\", renewals AS \"Renewals\", requests AS \"Requests\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}blocks{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BlockCondition> BlockConditions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BlockCondition>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BlockCondition2> BlockCondition2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BlockCondition2>($"SELECT id AS \"Id\", name AS \"Name\", block_borrowing AS \"BlockBorrowing\", block_renewals AS \"BlockRenewals\", block_requests AS \"BlockRequests\", value_type AS \"ValueType\", message AS \"Message\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}block_conditions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BlockLimit> BlockLimits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BlockLimit>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", conditionid AS \"Conditionid\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BlockLimit2> BlockLimit2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BlockLimit2>($"SELECT id AS \"Id\", group_id AS \"GroupId\", condition_id AS \"ConditionId\", value AS \"Value\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", conditionid AS \"Conditionid\" FROM uc{(IsMySql ? "_" : ".")}block_limits{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BoundWithPart> BoundWithParts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BoundWithPart>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", itemid AS \"Itemid\", holdingsrecordid AS \"Holdingsrecordid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BoundWithPart2> BoundWithPart2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BoundWithPart2>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", item_id AS \"ItemId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}bound_with_parts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Budget> Budgets(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Budget>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fundid AS \"FundId\", fiscalyearid AS \"FiscalYearId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Budget2> Budget2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Budget2>($"SELECT id AS \"Id\", name AS \"Name\", budget_status AS \"BudgetStatus\", allowable_encumbrance AS \"AllowableEncumbrance\", allowable_expenditure AS \"AllowableExpenditure\", allocated AS \"Allocated\", awaiting_payment AS \"AwaitingPayment\", available AS \"Available\", encumbered AS \"Encumbered\", expenditures AS \"Expenditures\", net_transfers AS \"NetTransfers\", unavailable AS \"Unavailable\", over_encumbrance AS \"OverEncumbrance\", over_expended AS \"OverExpended\", fund_id AS \"FundId\", fiscal_year_id AS \"FiscalYearId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", initial_allocation AS \"InitialAllocation\", allocation_to AS \"AllocationTo\", allocation_from AS \"AllocationFrom\", total_funding AS \"TotalFunding\", cash_balance AS \"CashBalance\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budgets{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetAcquisitionsUnit> BudgetAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetAcquisitionsUnit>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetExpenseClass> BudgetExpenseClasses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetExpenseClass>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", budgetid AS \"Budgetid\", expenseclassid AS \"Expenseclassid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetExpenseClass2> BudgetExpenseClass2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetExpenseClass2>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", expense_class_id AS \"ExpenseClassId\", status AS \"Status\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetGroup> BudgetGroups(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetGroup>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", budgetid AS \"Budgetid\", groupid AS \"Groupid\", fundid AS \"Fundid\", fiscalyearid AS \"Fiscalyearid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetGroup2> BudgetGroup2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetGroup2>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", group_id AS \"GroupId\", fiscal_year_id AS \"FiscalYearId\", fund_id AS \"FundId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}budget_groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<BudgetTag> BudgetTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<BudgetTag>($"SELECT id AS \"Id\", budget_id AS \"BudgetId\", tag_id AS \"TagId\" FROM uc{(IsMySql ? "_" : ".")}budget_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CallNumberType> CallNumberTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CallNumberType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CallNumberType2> CallNumberType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CallNumberType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}call_number_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Campus> Campuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Campus>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", institutionid AS \"Institutionid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Campus2> Campus2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Campus2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", institution_id AS \"InstitutionId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}campuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CancellationReason> CancellationReasons(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CancellationReason>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CancellationReason2> CancellationReason2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CancellationReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", public_description AS \"PublicDescription\", requires_additional_information AS \"RequiresAdditionalInformation\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Category> Categories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Category>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Category2> Category2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Category2>($"SELECT id AS \"Id\", value AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CheckIn> CheckIns(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CheckIn>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CheckIn2> CheckIn2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CheckIn2>($"SELECT id AS \"Id\", occurred_date_time AS \"OccurredDateTime\", item_id AS \"ItemId\", item_status_prior_to_check_in AS \"ItemStatusPriorToCheckIn\", request_queue_size AS \"RequestQueueSize\", item_location_id AS \"ItemLocationId\", service_point_id AS \"ServicePointId\", performed_by_user_id AS \"PerformedByUserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}check_ins{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CirculationNote> CirculationNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CirculationNote>($"SELECT id AS \"Id\", item_id AS \"ItemId\", id2 AS \"Id2\", note_type AS \"NoteType\", note AS \"Note\", source_id AS \"SourceId\", source_personal_last_name AS \"SourcePersonalLastName\", source_personal_first_name AS \"SourcePersonalFirstName\", date AS \"Date\", staff_only AS \"StaffOnly\" FROM uc{(IsMySql ? "_" : ".")}circulation_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<CirculationRule> CirculationRules(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CirculationRule>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", lock AS \"Lock\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CirculationRule2> CirculationRule2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CirculationRule2>($"SELECT id AS \"Id\", rules_as_text AS \"RulesAsText\", content AS \"Content\", lock AS \"Lock\" FROM uc{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Classification> Classifications(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Classification>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", classification_number AS \"Number\", classification_type_id AS \"ClassificationTypeId\" FROM uc{(IsMySql ? "_" : ".")}classifications{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<ClassificationType> ClassificationTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ClassificationType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ClassificationType2> ClassificationType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ClassificationType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}classification_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CloseReason> CloseReasons(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CloseReason>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CloseReason2> CloseReason2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CloseReason2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}close_reasons{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Comment> Comments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Comment>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Comment2> Comment2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Comment2>($"SELECT id AS \"Id\", paid AS \"Paid\", waived AS \"Waived\", refunded AS \"Refunded\", transferred_manually AS \"TransferredManually\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Configuration> Configurations(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Configuration>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Configuration2> Configuration2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Configuration2>($"SELECT id AS \"Id\", module AS \"Module\", config_name AS \"ConfigName\", code AS \"Code\", description AS \"Description\", \"default\" AS \"Default\", enabled AS \"Enabled\", value AS \"Value\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}configurations{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Contact> Contacts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Contact>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Contact2> Contact2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Contact2>($"SELECT id AS \"Id\", name AS \"Name\", prefix AS \"Prefix\", first_name AS \"FirstName\", last_name AS \"LastName\", language AS \"Language\", notes AS \"Notes\", inactive AS \"Inactive\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactAddress> ContactAddresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactAddress>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", state_region AS \"State\", zip_code AS \"PostalCode\", country AS \"CountryCode\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_addresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactAddressCategory> ContactAddressCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactAddressCategory>($"SELECT id AS \"Id\", contact_address_id AS \"ContactAddressId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_address_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactCategory> ContactCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactCategory>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactEmail> ContactEmails(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactEmail>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_emails{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactEmailCategory> ContactEmailCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactEmailCategory>($"SELECT id AS \"Id\", contact_email_id AS \"ContactEmailId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_email_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactPhoneNumber> ContactPhoneNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactPhoneNumber>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", phone_number AS \"PhoneNumber\", type AS \"Type\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactPhoneNumberCategory> ContactPhoneNumberCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactPhoneNumberCategory>($"SELECT id AS \"Id\", contact_phone_number_id AS \"ContactPhoneNumberId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactType> ContactTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactType>($"SELECT id AS \"Id\", name AS \"Name\" FROM uc{(IsMySql ? "_" : ".")}contact_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactUrl> ContactUrls(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactUrl>($"SELECT id AS \"Id\", contact_id AS \"ContactId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", language AS \"Language\", is_primary AS \"IsPrimary\", notes AS \"Notes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}contact_urls{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContactUrlCategory> ContactUrlCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContactUrlCategory>($"SELECT id AS \"Id\", contact_url_id AS \"ContactUrlId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}contact_url_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Contributor> Contributors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Contributor>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", name AS \"Name\", contributor_type_id AS \"ContributorTypeId\", contributor_type_text AS \"ContributorTypeText\", contributor_name_type_id AS \"ContributorNameTypeId\", primary AS \"Primary\" FROM uc{(IsMySql ? "_" : ".")}contributors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<ContributorNameType> ContributorNameTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContributorNameType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContributorNameType2> ContributorNameType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContributorNameType2>($"SELECT id AS \"Id\", name AS \"Name\", ordering AS \"Ordering\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contributor_name_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContributorType> ContributorTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContributorType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ContributorType2> ContributorType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ContributorType2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}contributor_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Country> Countries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Country>($"SELECT id AS \"Id\", alpha2_code AS \"Alpha2Code\", alpha3_code AS \"Alpha3Code\", name AS \"Name\" FROM uc{(IsMySql ? "_" : ".")}countries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Currency> Currencies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Currency>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}currencies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CustomField> CustomFields(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CustomField>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CustomField2> CustomField2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CustomField2>($"SELECT id AS \"Id\", name AS \"Name\", ref_id AS \"RefId\", type AS \"Type\", entity_type AS \"EntityType\", visible AS \"Visible\", required AS \"Required\", is_repeatable AS \"IsRepeatable\", \"order\" AS \"Order\", help_text AS \"HelpText\", checkbox_field_default AS \"CheckboxFieldDefault\", select_field_multi_select AS \"SelectFieldMultiSelect\", select_field_options_sorting_order AS \"SelectFieldOptionsSortingOrder\", text_field_field_format AS \"TextFieldFieldFormat\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<CustomFieldValue> CustomFieldValues(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<CustomFieldValue>($"SELECT id AS \"Id\", custom_field_id AS \"CustomFieldId\", id2 AS \"Id2\", value AS \"Value\", \"default\" AS \"Default\" FROM uc{(IsMySql ? "_" : ".")}custom_field_values{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Department> Departments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Department>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Department2> Department2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Department2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", usage_number AS \"UsageNumber\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Document> Documents(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Document>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\", document_data AS \"DocumentData\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Document2> Document2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Document2>($"SELECT id AS \"Id\", document_metadata_name AS \"DocumentMetadataName\", document_metadata_invoice_id AS \"DocumentMetadataInvoiceId\", document_metadata_url AS \"DocumentMetadataUrl\", document_metadata_metadata_created_date AS \"DocumentMetadataMetadataCreatedDate\", document_metadata_metadata_created_by_user_id AS \"DocumentMetadataMetadataCreatedByUserId\", document_metadata_metadata_created_by_username AS \"DocumentMetadataMetadataCreatedByUsername\", document_metadata_metadata_updated_date AS \"DocumentMetadataMetadataUpdatedDate\", document_metadata_metadata_updated_by_user_id AS \"DocumentMetadataMetadataUpdatedByUserId\", document_metadata_metadata_updated_by_username AS \"DocumentMetadataMetadataUpdatedByUsername\", contents_data AS \"ContentsData\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", invoiceid AS \"Invoiceid\", document_data AS \"DocumentData\" FROM uc{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Edition> Editions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Edition>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}editions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<ElectronicAccess> ElectronicAccesses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ElectronicAccess>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<ElectronicAccessRelationship> ElectronicAccessRelationships(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ElectronicAccessRelationship>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ElectronicAccessRelationship2> ElectronicAccessRelationship2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ElectronicAccessRelationship2>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ErrorRecord> ErrorRecords(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ErrorRecord>($"SELECT id AS \"Id\", content AS \"Content\", description AS \"Description\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ErrorRecord2> ErrorRecord2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ErrorRecord2>($"SELECT id AS \"Id\", content AS \"Content\", description AS \"Description\" FROM uc{(IsMySql ? "_" : ".")}error_records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<EventLog> EventLogs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<EventLog>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<EventLog2> EventLog2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<EventLog2>($"SELECT id AS \"Id\", tenant AS \"Tenant\", user_id AS \"UserId\", ip AS \"Ip\", browser_information AS \"BrowserInformation\", timestamp AS \"Timestamp\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ExpenseClass> ExpenseClasses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ExpenseClass>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ExpenseClass2> ExpenseClass2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ExpenseClass2>($"SELECT id AS \"Id\", code AS \"Code\", external_account_number_ext AS \"AccountNumberExtension\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}expense_classes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ExportConfigCredential> ExportConfigCredentials(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ExportConfigCredential>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", exportconfigid AS \"Exportconfigid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ExportConfigCredential2> ExportConfigCredential2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ExportConfigCredential2>($"SELECT id AS \"Id\", username AS \"Username\", password AS \"Password\", export_config_id AS \"ExportConfigId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Extent> Extents(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Extent>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Content\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}extents{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<Fee> Fees(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Fee>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Fee2> Fee2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Fee2>($"SELECT id AS \"Id\", amount AS \"Amount\", remaining AS \"RemainingAmount\", date_created AS \"DateCreated\", date_updated AS \"DateUpdated\", status_name AS \"StatusName\", payment_status_name AS \"PaymentStatusName\", fee_fine_type AS \"FeeFineType\", fee_fine_owner AS \"FeeFineOwner\", title AS \"Title\", call_number AS \"CallNumber\", barcode AS \"Barcode\", material_type AS \"MaterialType\", item_status_name AS \"ItemStatusName\", location AS \"Location\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", due_date AS \"DueTime\", returned_date AS \"ReturnedTime\", loan_id AS \"LoanId\", user_id AS \"UserId\", item_id AS \"ItemId\", material_type_id AS \"MaterialTypeId\", fee_type_id AS \"FeeTypeId\", owner_id AS \"OwnerId\", holding_id AS \"HoldingId\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fees{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FeeType> FeeTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FeeType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ownerid AS \"Ownerid\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FeeType2> FeeType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FeeType2>($"SELECT id AS \"Id\", automatic AS \"Automatic\", fee_fine_type AS \"Name\", default_amount AS \"DefaultAmount\", charge_notice_id AS \"ChargeNoticeId\", action_notice_id AS \"ActionNoticeId\", owner_id AS \"OwnerId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fee_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FinanceGroup> FinanceGroups(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FinanceGroup>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FinanceGroup2> FinanceGroup2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FinanceGroup2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", name AS \"Name\", status AS \"Status\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}finance_groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FinanceGroupAcquisitionsUnit> FinanceGroupAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FinanceGroupAcquisitionsUnit>($"SELECT id AS \"Id\", finance_group_id AS \"FinanceGroupId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FiscalYear> FiscalYears(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FiscalYear>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FiscalYear2> FiscalYear2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FiscalYear2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", currency AS \"Currency\", description AS \"Description\", period_start AS \"StartDate\", period_end AS \"EndDate\", series AS \"Series\", financial_summary_allocated AS \"FinancialSummaryAllocated\", financial_summary_available AS \"FinancialSummaryAvailable\", financial_summary_unavailable AS \"FinancialSummaryUnavailable\", financial_summary_initial_allocation AS \"FinancialSummaryInitialAllocation\", financial_summary_allocation_to AS \"FinancialSummaryAllocationTo\", financial_summary_allocation_from AS \"FinancialSummaryAllocationFrom\", financial_summary_total_funding AS \"FinancialSummaryTotalFunding\", financial_summary_cash_balance AS \"FinancialSummaryCashBalance\", financial_summary_awaiting_payment AS \"FinancialSummaryAwaitingPayment\", financial_summary_encumbered AS \"FinancialSummaryEncumbered\", financial_summary_expenditures AS \"FinancialSummaryExpenditures\", financial_summary_over_encumbrance AS \"FinancialSummaryOverEncumbrance\", financial_summary_over_expended AS \"FinancialSummaryOverExpended\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fiscal_years{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FiscalYearAcquisitionsUnit> FiscalYearAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FiscalYearAcquisitionsUnit>($"SELECT id AS \"Id\", fiscal_year_id AS \"FiscalYearId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FixedDueDateSchedule> FixedDueDateSchedules(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FixedDueDateSchedule>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FixedDueDateSchedule2> FixedDueDateSchedule2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FixedDueDateSchedule2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FixedDueDateScheduleSchedule> FixedDueDateScheduleSchedules(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FixedDueDateScheduleSchedule>($"SELECT id AS \"Id\", fixed_due_date_schedule_id AS \"FixedDueDateScheduleId\", from AS \"From\", \"to\" AS \"To\", due AS \"Due\" FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Format> Formats(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Format>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}formats{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Fund> Funds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Fund>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerid AS \"LedgerId\", fundtypeid AS \"Fundtypeid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Fund2> Fund2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Fund2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", external_account_no AS \"AccountNumber\", fund_status AS \"FundStatus\", fund_type_id AS \"FundTypeId\", ledger_id AS \"LedgerId\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}funds{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FundAcquisitionsUnit> FundAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FundAcquisitionsUnit>($"SELECT id AS \"Id\", fund_id AS \"FundId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FundTag> FundTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FundTag>($"SELECT id AS \"Id\", fund_id AS \"FundId\", tag_id AS \"TagId\" FROM uc{(IsMySql ? "_" : ".")}fund_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FundType> FundTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FundType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<FundType2> FundType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<FundType2>($"SELECT id AS \"Id\", name AS \"Name\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}fund_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Group> Groups(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Group>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Group2> Group2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Group2>($"SELECT id AS \"Id\", \"group\" AS \"Name\", \"desc\" AS \"Description\", expiration_offset_in_days AS \"ExpirationOffsetInDays\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Holding> Holdings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Holding>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", instanceid AS \"Instanceid\", permanentlocationid AS \"Permanentlocationid\", temporarylocationid AS \"Temporarylocationid\", effectivelocationid AS \"Effectivelocationid\", holdingstypeid AS \"Holdingstypeid\", callnumbertypeid AS \"Callnumbertypeid\", illpolicyid AS \"Illpolicyid\", sourceid AS \"Sourceid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Holding2> Holding2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Holding2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", holding_type_id AS \"HoldingTypeId\", instance_id AS \"InstanceId\", permanent_location_id AS \"LocationId\", temporary_location_id AS \"TemporaryLocationId\", effective_location_id AS \"EffectiveLocationId\", call_number_type_id AS \"CallNumberTypeId\", call_number_prefix AS \"CallNumberPrefix\", call_number AS \"CallNumber\", call_number_suffix AS \"CallNumberSuffix\", shelving_title AS \"ShelvingTitle\", acquisition_format AS \"AcquisitionFormat\", acquisition_method AS \"AcquisitionMethod\", receipt_status AS \"ReceiptStatus\", ill_policy_id AS \"IllPolicyId\", retention_policy AS \"RetentionPolicy\", digitization_policy AS \"DigitizationPolicy\", copy_number AS \"CopyNumber\", number_of_items AS \"ItemCount\", receiving_history_display_type AS \"ReceivingHistoryDisplayType\", discovery_suppress AS \"DiscoverySuppress\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", source_id AS \"SourceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holdings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingDonor> HoldingDonors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingDonor>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", donor_code AS \"DonorCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}holding_donors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingElectronicAccess> HoldingElectronicAccesses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingElectronicAccess>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingEntry> HoldingEntries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingEntry>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", public_display AS \"PublicDisplay\", enumeration AS \"Enumeration\", chronology AS \"Chronology\" FROM uc{(IsMySql ? "_" : ".")}holding_entries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingFormerId> HoldingFormerIds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingFormerId>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_former_ids{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingNote> HoldingNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingNote>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", holding_note_type_id AS \"HoldingNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}holding_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingNoteType> HoldingNoteTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingNoteType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingNoteType2> HoldingNoteType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_note_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingStatisticalCode> HoldingStatisticalCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingStatisticalCode>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingTag> HoldingTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingTag>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingType> HoldingTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HoldingType2> HoldingType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HoldingType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}holding_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HridSetting> HridSettings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HridSetting>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", lock AS \"Lock\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<HridSetting2> HridSetting2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<HridSetting2>($"SELECT id AS \"Id\", instances_prefix AS \"InstancesPrefix\", instances_start_number AS \"InstancesStartNumber\", holdings_prefix AS \"HoldingsPrefix\", holdings_start_number AS \"HoldingsStartNumber\", items_prefix AS \"ItemsPrefix\", items_start_number AS \"ItemsStartNumber\", common_retain_leading_zeroes AS \"ZeroPad\", content AS \"Content\", lock AS \"Lock\" FROM uc{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Identifier> Identifiers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Identifier>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", value AS \"Content\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}identifiers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<IdType> IdTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IdType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<IdType2> IdType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IdType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}id_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<IllPolicy> IllPolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IllPolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<IllPolicy2> IllPolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IllPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ill_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<IndexStatement> IndexStatements(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IndexStatement>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Statement\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}index_statements{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<Instance> Instances(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Instance>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", instancestatusid AS \"Instancestatusid\", modeofissuanceid AS \"Modeofissuanceid\", instancetypeid AS \"Instancetypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Instance2> Instance2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Instance2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", match_key AS \"MatchKey\", source AS \"Source\", title AS \"Title\", author AS \"Author\", index_title AS \"IndexTitle\", publication_period_start AS \"PublicationStartYear\", publication_period_end AS \"PublicationEndYear\", instance_type_id AS \"InstanceTypeId\", mode_of_issuance_id AS \"IssuanceModeId\", cataloged_date AS \"CatalogedDate\", previously_held AS \"PreviouslyHeld\", staff_suppress AS \"StaffSuppress\", discovery_suppress AS \"DiscoverySuppress\", source_record_format AS \"SourceRecordFormat\", status_id AS \"StatusId\", status_updated_date AS \"StatusLastWriteTime\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instances{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceFormat> InstanceFormats(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceFormat>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceFormat2> InstanceFormat2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceFormat2>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", format_id AS \"FormatId\" FROM uc{(IsMySql ? "_" : ".")}instance_formats{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceNatureOfContentTerm> InstanceNatureOfContentTerms(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceNatureOfContentTerm>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", nature_of_content_term_id AS \"NatureOfContentTermId\" FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceNoteType> InstanceNoteTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceNoteType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceNoteType2> InstanceNoteType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_note_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceRelationship> InstanceRelationships(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceRelationship>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", superinstanceid AS \"Superinstanceid\", subinstanceid AS \"Subinstanceid\", instancerelationshiptypeid AS \"Instancerelationshiptypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceRelationshipType> InstanceRelationshipTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceRelationshipType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceSourceMarc> InstanceSourceMarcs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceSourceMarc>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceStatisticalCode> InstanceStatisticalCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceStatisticalCode>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceStatus> InstanceStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceStatus>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceTag> InstanceTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceTag>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceType> InstanceTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InstanceType2> InstanceType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InstanceType2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}instance_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Institution> Institutions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Institution>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Institution2> Institution2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Institution2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}institutions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Interface> Interfaces(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Interface>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Interface2> Interface2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Interface2>($"SELECT id AS \"Id\", name AS \"Name\", uri AS \"Uri\", notes AS \"Notes\", available AS \"Available\", delivery_method AS \"DeliveryMethod\", statistics_format AS \"StatisticsFormat\", locally_stored AS \"LocallyStored\", online_location AS \"OnlineLocation\", statistics_notes AS \"StatisticsNotes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InterfaceCredential> InterfaceCredentials(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InterfaceCredential>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", interfaceid AS \"Interfaceid\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InterfaceCredential2> InterfaceCredential2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InterfaceCredential2>($"SELECT id AS \"Id\", username AS \"Username\", password AS \"Password\", interface_id AS \"InterfaceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InterfaceType> InterfaceTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InterfaceType>($"SELECT id AS \"Id\", interface_id AS \"InterfaceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}interface_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Invoice> Invoices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Invoice>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Invoice2> Invoice2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Invoice2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", adjustments_total AS \"AdjustmentsTotal\", approved_by_id AS \"ApprovedById\", approval_date AS \"ApprovalDate\", batch_group_id AS \"BatchGroupId\", bill_to_id AS \"BillToId\", chk_subscription_overlap AS \"CheckSubscriptionOverlap\", cancellation_note AS \"CancellationNote\", currency AS \"Currency\", enclosure_needed AS \"Enclosure\", exchange_rate AS \"ExchangeRate\", export_to_accounting AS \"ExportToAccounting\", folio_invoice_no AS \"Number\", invoice_date AS \"InvoiceDate\", lock_total AS \"LockTotal\", note AS \"Note\", payment_due AS \"PaymentDueDate\", payment_date AS \"PaymentDate\", payment_terms AS \"PaymentTerms\", payment_method AS \"PaymentMethod\", status AS \"Status\", source AS \"Source\", sub_total AS \"SubTotal\", total AS \"Total\", vendor_invoice_no AS \"VendorInvoiceNumber\", disbursement_number AS \"DisbursementNumber\", voucher_number AS \"VoucherNumber\", payment_id AS \"PaymentId\", disbursement_date AS \"DisbursementDate\", vendor_id AS \"VendorId\", account_no AS \"AccountNumber\", manual_payment AS \"ManualPayment\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceAcquisitionsUnit> InvoiceAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceAcquisitionsUnit>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceAdjustment> InvoiceAdjustments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceAdjustment>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", id2 AS \"Id2\", adjustment_id AS \"AdjustmentId\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", prorate AS \"Prorate\", relation_to_total AS \"RelationToTotal\", type AS \"Type\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceAdjustmentFund> InvoiceAdjustmentFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceAdjustmentFund>($"SELECT id AS \"Id\", invoice_adjustment_id AS \"InvoiceAdjustmentId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItem> InvoiceItems(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItem2> InvoiceItem2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItem2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", account_number AS \"AccountNumber\", adjustments_total AS \"AdjustmentsTotal\", comment AS \"Comment\", description AS \"Description\", invoice_id AS \"InvoiceId\", invoice_line_number AS \"Number\", invoice_line_status AS \"InvoiceLineStatus\", po_line_id AS \"OrderItemId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", quantity AS \"Quantity\", release_encumbrance AS \"ReleaseEncumbrance\", subscription_info AS \"SubscriptionInfo\", subscription_start AS \"SubscriptionStartDate\", subscription_end AS \"SubscriptionEndDate\", sub_total AS \"SubTotal\", total AS \"Total\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_items{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItemAdjustment> InvoiceItemAdjustments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItemAdjustment>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", id2 AS \"Id2\", adjustment_id AS \"AdjustmentId\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", prorate AS \"Prorate\", relation_to_total AS \"RelationToTotal\", type AS \"Type\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItemAdjustmentFund> InvoiceItemAdjustmentFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItemAdjustmentFund>($"SELECT id AS \"Id\", invoice_item_adjustment_id AS \"InvoiceItemAdjustmentId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItemFund> InvoiceItemFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItemFund>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItemReferenceNumber> InvoiceItemReferenceNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItemReferenceNumber>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", ref_number AS \"ReferenceNumber\", ref_number_type AS \"ReferenceNumberType\", vendor_details_source AS \"VendorDetailsSource\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceItemTag> InvoiceItemTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceItemTag>($"SELECT id AS \"Id\", invoice_item_id AS \"InvoiceItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceOrderNumber> InvoiceOrderNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceOrderNumber>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceStatus> InvoiceStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}invoice_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceTag> InvoiceTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceTag>($"SELECT id AS \"Id\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceTransactionSummary> InvoiceTransactionSummaries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceTransactionSummary>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<InvoiceTransactionSummary2> InvoiceTransactionSummary2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<InvoiceTransactionSummary2>($"SELECT id AS \"Id\", num_pending_payments AS \"NumPendingPayments\", num_payments_credits AS \"NumPaymentsCredits\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Isbn> Isbns(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Isbn>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}isbns{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<Issn> Issns(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Issn>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}issns{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<IssuanceMode> IssuanceModes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<IssuanceMode>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Item> Items(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Item>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", holdingsrecordid AS \"Holdingsrecordid\", permanentloantypeid AS \"Permanentloantypeid\", temporaryloantypeid AS \"Temporaryloantypeid\", materialtypeid AS \"Materialtypeid\", permanentlocationid AS \"Permanentlocationid\", temporarylocationid AS \"Temporarylocationid\", effectivelocationid AS \"Effectivelocationid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Item2> Item2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Item2>($"SELECT id AS \"Id\", _version AS \"Version\", hrid AS \"ShortId\", holding_id AS \"HoldingId\", discovery_suppress AS \"DiscoverySuppress\", accession_number AS \"AccessionNumber\", barcode AS \"Barcode\", effective_shelving_order AS \"EffectiveShelvingOrder\", call_number AS \"CallNumber\", call_number_prefix AS \"CallNumberPrefix\", call_number_suffix AS \"CallNumberSuffix\", call_number_type_id AS \"CallNumberTypeId\", effective_call_number AS \"EffectiveCallNumber\", effective_call_number_prefix AS \"EffectiveCallNumberPrefix\", effective_call_number_suffix AS \"EffectiveCallNumberSuffix\", effective_call_number_type_id AS \"EffectiveCallNumberTypeId\", volume AS \"Volume\", enumeration AS \"Enumeration\", chronology AS \"Chronology\", item_identifier AS \"ItemIdentifier\", copy_number AS \"CopyNumber\", number_of_pieces AS \"PiecesCount\", description_of_pieces AS \"PiecesDescription\", number_of_missing_pieces AS \"MissingPiecesCount\", missing_pieces AS \"MissingPiecesDescription\", missing_pieces_date AS \"MissingPiecesTime\", item_damaged_status_id AS \"DamagedStatusId\", item_damaged_status_date AS \"DamagedStatusTime\", status_name AS \"Status\", status_date AS \"StatusLastWriteTime\", material_type_id AS \"MaterialTypeId\", permanent_loan_type_id AS \"PermanentLoanTypeId\", temporary_loan_type_id AS \"TemporaryLoanTypeId\", permanent_location_id AS \"PermanentLocationId\", temporary_location_id AS \"TemporaryLocationId\", effective_location_id AS \"EffectiveLocationId\", in_transit_destination_service_point_id AS \"InTransitDestinationServicePointId\", order_item_id AS \"OrderItemId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", last_check_in_date_time AS \"LastCheckInDateTime\", last_check_in_service_point_id AS \"LastCheckInServicePointId\", last_check_in_staff_member_id AS \"LastCheckInStaffMemberId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}items{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemDamagedStatus> ItemDamagedStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemDamagedStatus>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemDamagedStatus2> ItemDamagedStatus2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemDamagedStatus2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemDonor> ItemDonors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemDonor>($"SELECT id AS \"Id\", item_id AS \"ItemId\", donor_code AS \"DonorCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}item_donors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemElectronicAccess> ItemElectronicAccesses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemElectronicAccess>($"SELECT id AS \"Id\", item_id AS \"ItemId\", uri AS \"Uri\", link_text AS \"LinkText\", materials_specification AS \"MaterialsSpecification\", public_note AS \"PublicNote\", relationship_id AS \"RelationshipId\" FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemFormerId> ItemFormerIds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemFormerId>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_former_ids{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemNote> ItemNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemNote>($"SELECT id AS \"Id\", item_id AS \"ItemId\", item_note_type_id AS \"ItemNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}item_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemNoteType> ItemNoteTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemNoteType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemNoteType2> ItemNoteType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemNoteType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_note_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemStatisticalCode> ItemStatisticalCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemStatisticalCode>($"SELECT id AS \"Id\", item_id AS \"ItemId\", statistical_code_id AS \"StatisticalCodeId\" FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemStatus> ItemStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}item_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ItemTag> ItemTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemTag>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<ItemYearCaption> ItemYearCaptions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ItemYearCaption>($"SELECT id AS \"Id\", item_id AS \"ItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}item_year_caption{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, item_id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecution> JobExecutions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecution>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecution2> JobExecution2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecution2>($"SELECT id AS \"Id\", hr_id AS \"HrId\", parent_job_id AS \"ParentJobId\", subordination_type AS \"SubordinationType\", job_profile_info_name AS \"JobProfileInfoName\", job_profile_info_data_type AS \"JobProfileInfoDataType\", job_profile_snapshot_wrapper_profile_id AS \"JobProfileSnapshotWrapperProfileId\", job_profile_snapshot_wrapper_content_type AS \"JobProfileSnapshotWrapperContentType\", job_profile_snapshot_wrapper_react_to AS \"JobProfileSnapshotWrapperReactTo\", job_profile_snapshot_wrapper_order AS \"JobProfileSnapshotWrapperOrder\", source_path AS \"SourcePath\", file_name AS \"FileName\", run_by_first_name AS \"RunByFirstName\", run_by_last_name AS \"RunByLastName\", progress_job_execution_id AS \"ProgressJobExecutionId\", progress_current AS \"ProgressCurrent\", progress_total AS \"ProgressTotal\", started_date AS \"StartedDate\", completed_date AS \"CompletedDate\", status AS \"Status\", ui_status AS \"UiStatus\", error_status AS \"ErrorStatus\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecutionProgress> JobExecutionProgresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecutionProgress>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", jobexecutionid AS \"Jobexecutionid\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecutionProgress2> JobExecutionProgress2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecutionProgress2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", currently_succeeded AS \"CurrentlySucceeded\", currently_failed AS \"CurrentlyFailed\", total AS \"Total\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecutionSourceChunk> JobExecutionSourceChunks(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecutionSourceChunk>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", jobexecutionid AS \"Jobexecutionid\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobExecutionSourceChunk2> JobExecutionSourceChunk2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobExecutionSourceChunk2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last AS \"Last\", state AS \"State\", chunk_size AS \"ChunkSize\", processed_amount AS \"ProcessedAmount\", completed_date AS \"CompletedDate\", error AS \"Error\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobMonitoring> JobMonitorings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobMonitoring>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last_event_timestamp AS \"LastEventTimestamp\", notification_sent AS \"NotificationSent\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JobMonitoring2> JobMonitoring2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JobMonitoring2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", last_event_timestamp AS \"LastEventTimestamp\", notification_sent AS \"NotificationSent\" FROM uc{(IsMySql ? "_" : ".")}job_monitorings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JournalRecord> JournalRecords(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JournalRecord>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", source_id AS \"SourceId\", entity_type AS \"EntityType\", entity_id AS \"EntityId\", entity_hrid AS \"EntityHrid\", action_type AS \"ActionType\", action_status AS \"ActionStatus\", action_date AS \"ActionDate\", source_record_order AS \"SourceRecordOrder\", error AS \"Error\", title AS \"Title\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<JournalRecord2> JournalRecord2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<JournalRecord2>($"SELECT id AS \"Id\", job_execution_id AS \"JobExecutionId\", source_id AS \"SourceId\", entity_type AS \"EntityType\", entity_id AS \"EntityId\", entity_hrid AS \"EntityHrid\", action_type AS \"ActionType\", action_status AS \"ActionStatus\", action_date AS \"ActionDate\", source_record_order AS \"SourceRecordOrder\", error AS \"Error\", title AS \"Title\" FROM uc{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Language> Languages(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Language>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}languages{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<Ledger> Ledgers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Ledger>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fiscalyearoneid AS \"Fiscalyearoneid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Ledger2> Ledger2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Ledger2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", fiscal_year_one_id AS \"FiscalYearOneId\", ledger_status AS \"LedgerStatus\", allocated AS \"Allocated\", available AS \"Available\", net_transfers AS \"NetTransfers\", unavailable AS \"Unavailable\", currency AS \"Currency\", restrict_encumbrance AS \"RestrictEncumbrance\", restrict_expenditures AS \"RestrictExpenditures\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", initial_allocation AS \"InitialAllocation\", allocation_to AS \"AllocationTo\", allocation_from AS \"AllocationFrom\", total_funding AS \"TotalFunding\", cash_balance AS \"CashBalance\", awaiting_payment AS \"AwaitingPayment\", encumbered AS \"Encumbered\", expenditures AS \"Expenditures\", over_encumbrance AS \"OverEncumbrance\", over_expended AS \"OverExpended\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledgers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerAcquisitionsUnit> LedgerAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerAcquisitionsUnit>($"SELECT id AS \"Id\", ledger_id AS \"LedgerId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRollover> LedgerRollovers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRollover>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerid AS \"Ledgerid\", fromfiscalyearid AS \"Fromfiscalyearid\", tofiscalyearid AS \"Tofiscalyearid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRollover2> LedgerRollover2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRollover2>($"SELECT id AS \"Id\", ledger_id AS \"LedgerId\", from_fiscal_year_id AS \"FromFiscalYearId\", to_fiscal_year_id AS \"ToFiscalYearId\", restrict_encumbrance AS \"RestrictEncumbrance\", restrict_expenditures AS \"RestrictExpenditures\", need_close_budgets AS \"NeedCloseBudgets\", currency_factor AS \"CurrencyFactor\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverBudgetsRollover> LedgerRolloverBudgetsRollovers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverBudgetsRollover>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", fund_type_id AS \"FundTypeId\", rollover_allocation AS \"RolloverAllocation\", rollover_available AS \"RolloverAvailable\", set_allowances AS \"SetAllowances\", adjust_allocation AS \"AdjustAllocation\", add_available_to AS \"AddAvailableTo\", allowable_encumbrance AS \"AllowableEncumbrance\", allowable_expenditure AS \"AllowableExpenditure\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverEncumbrancesRollover> LedgerRolloverEncumbrancesRollovers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverEncumbrancesRollover>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", order_type AS \"OrderType\", based_on AS \"BasedOn\", increase_by AS \"IncreaseBy\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverError> LedgerRolloverErrors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverError>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerrolloverid AS \"Ledgerrolloverid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverError2> LedgerRolloverError2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverError2>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", error_type AS \"ErrorType\", failed_action AS \"FailedAction\", error_message AS \"ErrorMessage\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverProgress> LedgerRolloverProgresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverProgress>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", ledgerrolloverid AS \"Ledgerrolloverid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LedgerRolloverProgress2> LedgerRolloverProgress2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LedgerRolloverProgress2>($"SELECT id AS \"Id\", ledger_rollover_id AS \"LedgerRolloverId\", overall_rollover_status AS \"OverallRolloverStatus\", budgets_closing_rollover_status AS \"BudgetsClosingRolloverStatus\", financial_rollover_status AS \"FinancialRolloverStatus\", orders_rollover_status AS \"OrdersRolloverStatus\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Library> Libraries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Library>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", campusid AS \"Campusid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Library2> Library2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Library2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", campus_id AS \"CampusId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}libraries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Loan> Loans(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Loan>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Loan2> Loan2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Loan2>($"SELECT id AS \"Id\", user_id AS \"UserId\", proxy_user_id AS \"ProxyUserId\", item_id AS \"ItemId\", item_effective_location_at_check_out_id AS \"ItemEffectiveLocationAtCheckOutId\", status_name AS \"StatusName\", loan_date AS \"LoanTime\", due_date AS \"DueTime\", return_date AS \"ReturnTime\", system_return_date AS \"SystemReturnTime\", action AS \"Action\", action_comment AS \"ActionComment\", item_status AS \"ItemStatus\", renewal_count AS \"RenewalCount\", loan_policy_id AS \"LoanPolicyId\", checkout_service_point_id AS \"CheckoutServicePointId\", checkin_service_point_id AS \"CheckinServicePointId\", group_id AS \"GroupId\", due_date_changed_by_recall AS \"DueDateChangedByRecall\", declared_lost_date AS \"DeclaredLostDate\", claimed_returned_date AS \"ClaimedReturnedDate\", overdue_fine_policy_id AS \"OverdueFinePolicyId\", lost_item_policy_id AS \"LostItemPolicyId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", aged_to_lost_delayed_billing_lost_item_has_been_billed AS \"AgedToLostDelayedBillingLostItemHasBeenBilled\", aged_to_lost_delayed_billing_date_lost_item_should_be_billed AS \"AgedToLostDelayedBillingDateLostItemShouldBeBilled\", aged_to_lost_delayed_billing_aged_to_lost_date AS \"AgedToLostDelayedBillingAgedToLostDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loans{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanEvent> LoanEvents(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanEvent>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanEvent2> LoanEvent2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanEvent2>($"SELECT id AS \"Id\", operation AS \"Operation\", creation_date AS \"CreationTime\", loan_user_id AS \"LoanUserId\", loan_proxy_user_id AS \"LoanProxyUserId\", loan_item_id AS \"LoanItemId\", loan_item_effective_location_id_at_check_out_id AS \"LoanItemEffectiveLocationIdAtCheckOutId\", loan_status_name AS \"LoanStatusName\", loan_loan_date AS \"LoanLoanDate\", loan_due_date AS \"LoanDueDate\", loan_return_date AS \"LoanReturnDate\", loan_system_return_date AS \"LoanSystemReturnDate\", loan_action AS \"LoanAction\", loan_action_comment AS \"LoanActionComment\", loan_item_status AS \"LoanItemStatus\", loan_renewal_count AS \"LoanRenewalCount\", loan_loan_policy_id AS \"LoanLoanPolicyId\", loan_checkout_service_point_id AS \"LoanCheckoutServicePointId\", loan_checkin_service_point_id AS \"LoanCheckinServicePointId\", loan_patron_group_id_at_checkout AS \"LoanPatronGroupIdAtCheckout\", loan_due_date_changed_by_recall AS \"LoanDueDateChangedByRecall\", loan_declared_lost_date AS \"LoanDeclaredLostDate\", loan_claimed_returned_date AS \"LoanClaimedReturnedDate\", loan_overdue_fine_policy_id AS \"LoanOverdueFinePolicyId\", loan_lost_item_policy_id AS \"LoanLostItemPolicyId\", loan_metadata_created_date AS \"LoanMetadataCreatedDate\", loan_metadata_created_by_user_id AS \"LoanMetadataCreatedByUserId\", loan_metadata_created_by_username AS \"LoanMetadataCreatedByUsername\", loan_metadata_updated_date AS \"LoanMetadataUpdatedDate\", loan_metadata_updated_by_user_id AS \"LoanMetadataUpdatedByUserId\", loan_metadata_updated_by_username AS \"LoanMetadataUpdatedByUsername\", loan_aged_to_lost_delayed_billing_lost_item_has_been_billed AS \"LoanAgedToLostDelayedBillingLostItemHasBeenBilled\", loan_aged_to_lost_delayed_billing_date_lost_item_should_be_bill AS \"LoanAgedToLostDelayedBillingDateLostItemShouldBeBill\", loan_aged_to_lost_delayed_billing_aged_to_lost_date AS \"LoanAgedToLostDelayedBillingAgedToLostDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_events{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanPolicy> LoanPolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanPolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", loanspolicy_fixedduedatescheduleid AS \"LoanspolicyFixedduedatescheduleid\", renewalspolicy_alternatefixedduedatescheduleid AS \"RenewalspolicyAlternatefixedduedatescheduleid\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanPolicy2> LoanPolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", loanable AS \"Loanable\", loans_policy_profile_id AS \"LoansPolicyProfileId\", loans_policy_period_duration AS \"LoansPolicyPeriodDuration\", loans_policy_period_interval_id AS \"LoansPolicyPeriodInterval\", loans_policy_closed_library_due_date_management_id AS \"LoansPolicyClosedLibraryDueDateManagementId\", loans_policy_grace_period_duration AS \"LoansPolicyGracePeriodDuration\", loans_policy_grace_period_interval_id AS \"LoansPolicyGracePeriodInterval\", loans_policy_opening_time_offset_duration AS \"LoansPolicyOpeningTimeOffsetDuration\", loans_policy_opening_time_offset_interval_id AS \"LoansPolicyOpeningTimeOffsetInterval\", loans_policy_fixed_due_date_schedule_id AS \"LoansPolicyFixedDueDateScheduleId\", loans_policy_item_limit AS \"LoansPolicyItemLimit\", renewable AS \"Renewable\", renewals_policy_unlimited AS \"RenewalsPolicyUnlimited\", renewals_policy_number_allowed AS \"RenewalsPolicyNumberAllowed\", renewals_policy_renew_from_id AS \"RenewalsPolicyRenewFromId\", renewals_policy_different_period AS \"RenewalsPolicyDifferentPeriod\", renewals_policy_period_duration AS \"RenewalsPolicyPeriodDuration\", renewals_policy_period_interval_id AS \"RenewalsPolicyPeriodInterval\", renewals_policy_alternate_fixed_due_date_schedule_id AS \"RenewalsPolicyAlternateFixedDueDateScheduleId\", recalls_alternate_grace_period_duration AS \"RecallsAlternateGracePeriodDuration\", recalls_alternate_grace_period_interval_id AS \"RecallsAlternateGracePeriodInterval\", recalls_minimum_guaranteed_loan_period_duration AS \"RecallsMinimumGuaranteedLoanPeriodDuration\", recalls_minimum_guaranteed_loan_period_interval_id AS \"RecallsMinimumGuaranteedLoanPeriodInterval\", recalls_recall_return_interval_duration AS \"RecallsRecallReturnIntervalDuration\", recalls_recall_return_interval_interval_id AS \"RecallsRecallReturnIntervalInterval\", recalls_allow_recalls_to_extend_overdue_loans AS \"RecallsAllowRecallsToExtendOverdueLoans\", recalls_alternate_recall_return_interval_duration AS \"RecallsAlternateRecallReturnIntervalDuration\", recalls_alternate_recall_return_interval_interval_id AS \"RecallsAlternateRecallReturnIntervalInterval\", holds_alternate_checkout_loan_period_duration AS \"HoldsAlternateCheckoutLoanPeriodDuration\", holds_alternate_checkout_loan_period_interval_id AS \"HoldsAlternateCheckoutLoanPeriodInterval\", holds_renew_items_with_request AS \"HoldsRenewItemsWithRequest\", holds_alternate_renewal_loan_period_duration AS \"HoldsAlternateRenewalLoanPeriodDuration\", holds_alternate_renewal_loan_period_interval_id AS \"HoldsAlternateRenewalLoanPeriodInterval\", pages_alternate_checkout_loan_period_duration AS \"PagesAlternateCheckoutLoanPeriodDuration\", pages_alternate_checkout_loan_period_interval_id AS \"PagesAlternateCheckoutLoanPeriodInterval\", pages_renew_items_with_request AS \"PagesRenewItemsWithRequest\", pages_alternate_renewal_loan_period_duration AS \"PagesAlternateRenewalLoanPeriodDuration\", pages_alternate_renewal_loan_period_interval_id AS \"PagesAlternateRenewalLoanPeriodInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanType> LoanTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LoanType2> LoanType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LoanType2>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}loan_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Location> Locations(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Location>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", institutionid AS \"Institutionid\", campusid AS \"Campusid\", libraryid AS \"Libraryid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Location2> Location2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Location2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", discovery_display_name AS \"DiscoveryDisplayName\", is_active AS \"IsActive\", institution_id AS \"InstitutionId\", campus_id AS \"CampusId\", library_id AS \"LibraryId\", primary_service_point_id AS \"PrimaryServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}locations{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LocationServicePoint> LocationServicePoints(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LocationServicePoint>($"SELECT id AS \"Id\", location_id AS \"LocationId\", service_point_id AS \"ServicePointId\" FROM uc{(IsMySql ? "_" : ".")}location_service_points{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LocationSetting> LocationSettings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LocationSetting>($"SELECT id AS \"Id\", location_id AS \"LocationId\", settings_id AS \"SettingsId\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}location_settings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Login> Logins(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Login>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Login2> Login2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Login2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hash AS \"Hash\", salt AS \"Salt\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}logins{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LostItemFeePolicy> LostItemFeePolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LostItemFeePolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<LostItemFeePolicy2> LostItemFeePolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<LostItemFeePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", item_aged_lost_overdue_duration AS \"ItemAgedLostOverdueDuration\", item_aged_lost_overdue_interval_id AS \"ItemAgedLostOverdueInterval\", patron_billed_after_aged_lost_duration AS \"PatronBilledAfterAgedLostDuration\", patron_billed_after_aged_lost_interval_id AS \"PatronBilledAfterAgedLostInterval\", recalled_item_aged_lost_overdue_duration AS \"RecalledItemAgedLostOverdueDuration\", recalled_item_aged_lost_overdue_interval_id AS \"RecalledItemAgedLostOverdueInterval\", patron_billed_after_recalled_item_aged_lost_duration AS \"PatronBilledAfterRecalledItemAgedLostDuration\", patron_billed_after_recalled_item_aged_lost_interval_id AS \"PatronBilledAfterRecalledItemAgedLostInterval\", charge_amount_item_charge_type AS \"ChargeAmountItemChargeType\", charge_amount_item_amount AS \"ChargeAmountItemAmount\", lost_item_processing_fee AS \"LostItemProcessingFee\", charge_amount_item_patron AS \"ChargeAmountItemPatron\", charge_amount_item_system AS \"ChargeAmountItemSystem\", lost_item_charge_fee_fine_duration AS \"LostItemChargeFeeFineDuration\", lost_item_charge_fee_fine_interval_id AS \"LostItemChargeFeeFineInterval\", returned_lost_item_processing_fee AS \"ReturnedLostItemProcessingFee\", replaced_lost_item_processing_fee AS \"ReplacedLostItemProcessingFee\", replacement_processing_fee AS \"ReplacementProcessingFee\", replacement_allowed AS \"ReplacementAllowed\", lost_item_returned AS \"LostItemReturned\", fees_fines_shall_refunded_duration AS \"FeesFinesShallRefundedDuration\", fees_fines_shall_refunded_interval_id AS \"FeesFinesShallRefundedInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ManualBlockTemplate> ManualBlockTemplates(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ManualBlockTemplate>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ManualBlockTemplate2> ManualBlockTemplate2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ManualBlockTemplate2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", \"desc\" AS \"Description\", block_template_desc AS \"BlockTemplateDescription\", block_template_patron_message AS \"BlockTemplatePatronMessage\", block_template_borrowing AS \"BlockTemplateBorrowing\", block_template_renewals AS \"BlockTemplateRenewals\", block_template_requests AS \"BlockTemplateRequests\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<MappingParamsSnapshot> MappingParamsSnapshots(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MappingParamsSnapshot>($"SELECT job_execution_id AS \"Id\", params AS \"Params\", saved_timestamp AS \"SavedTimestamp\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "job_execution_id"}" : "")}", param, skip, take);
        public IEnumerable<MappingRule> MappingRules(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MappingRule>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", record_type AS \"RecordType\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<MappingRulesSnapshot> MappingRulesSnapshots(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MappingRulesSnapshot>($"SELECT job_execution_id AS \"Id\", rules AS \"Rules\", saved_timestamp AS \"SavedTimestamp\" FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "job_execution_id"}" : "")}", param, skip, take);
        public IEnumerable<MarcRecord> MarcRecords(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MarcRecord>($"SELECT id AS \"Id\", content AS \"Content\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<MarcRecord2> MarcRecord2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MarcRecord2>($"SELECT id AS \"Id\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}marc_records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<MaterialType> MaterialTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MaterialType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<MaterialType2> MaterialType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<MaterialType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}material_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ModeOfIssuance> ModeOfIssuances(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ModeOfIssuance>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<NatureOfContentTerm> NatureOfContentTerms(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<NatureOfContentTerm>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<NatureOfContentTerm2> NatureOfContentTerm2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<NatureOfContentTerm2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Note> Notes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Note>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", temporary_type_id AS \"TemporaryTypeId\", search_content AS \"SearchContent\" FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Note2> Note2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Note2>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", instance_note_type_id AS \"InstanceNoteTypeId\", note AS \"Note\", staff_only AS \"StaffOnly\" FROM uc{(IsMySql ? "_" : ".")}notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<Note3> Note3s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Note3>($"SELECT id AS \"Id\", type_id AS \"TypeId\", type AS \"Type\", domain AS \"Domain\", title AS \"Title\", content2 AS \"Content2\", status AS \"Status\", creator_last_name AS \"CreatorLastName\", creator_first_name AS \"CreatorFirstName\", creator_middle_name AS \"CreatorMiddleName\", updater_last_name AS \"UpdaterLastName\", updater_first_name AS \"UpdaterFirstName\", updater_middle_name AS \"UpdaterMiddleName\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\", temporary_type_id AS \"TemporaryTypeId\", search_content AS \"SearchContent\" FROM uc{(IsMySql ? "_" : ".")}notes2{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<NoteType> NoteTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<NoteType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<NoteType2> NoteType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<NoteType2>($"SELECT id AS \"Id\", name AS \"Name\", usage_note_total AS \"UsageNoteTotal\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}note_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ObjectNote> ObjectNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ObjectNote>($"SELECT id AS \"Id\", note_id AS \"NoteId\", object_id AS \"ObjectId\", type AS \"Type\" FROM uc{(IsMySql ? "_" : ".")}object_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OclcNumber> OclcNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OclcNumber>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}oclc_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<Order> Orders(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Order>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Order2> Order2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Order2>($"SELECT id AS \"Id\", approved AS \"Approved\", approved_by_id AS \"ApprovedById\", approval_date AS \"ApprovalDate\", assigned_to_id AS \"AssignedToId\", bill_to_id AS \"BillToId\", close_reason_reason AS \"CloseReasonReason\", close_reason_note AS \"CloseReasonNote\", date_ordered AS \"OrderDate\", manual_po AS \"Manual\", po_number AS \"Number\", po_number_prefix AS \"NumberPrefix\", po_number_suffix AS \"NumberSuffix\", order_type AS \"OrderType\", re_encumber AS \"Reencumber\", ongoing_interval AS \"OngoingInterval\", ongoing_is_subscription AS \"OngoingIsSubscription\", ongoing_manual_renewal AS \"OngoingManualRenewal\", ongoing_notes AS \"OngoingNotes\", ongoing_review_period AS \"OngoingReviewPeriod\", ongoing_renewal_date AS \"OngoingRenewalDate\", ongoing_review_date AS \"OngoingReviewDate\", ship_to_id AS \"ShipToId\", template_id AS \"TemplateId\", vendor_id AS \"VendorId\", status AS \"Status\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}orders{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderAcquisitionsUnit> OrderAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderAcquisitionsUnit>($"SELECT id AS \"Id\", order_id AS \"OrderId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderInvoice> OrderInvoices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderInvoice>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", purchaseorderid AS \"Purchaseorderid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderInvoice2> OrderInvoice2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderInvoice2>($"SELECT id AS \"Id\", order_id AS \"OrderId\", invoice_id AS \"InvoiceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_invoices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItem> OrderItems(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", purchaseorderid AS \"Purchaseorderid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItem2> OrderItem2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItem2>($"SELECT id AS \"Id\", edition AS \"Edition\", checkin_items AS \"CheckinItems\", agreement_id AS \"AgreementId\", acquisition_method AS \"AcquisitionMethod\", cancellation_restriction AS \"CancellationRestriction\", cancellation_restriction_note AS \"CancellationRestrictionNote\", collection AS \"Collection\", cost_list_unit_price AS \"PhysicalUnitListPrice\", cost_list_unit_price_electronic AS \"ElectronicUnitListPrice\", cost_currency AS \"Currency\", cost_additional_cost AS \"AdditionalCost\", cost_discount AS \"Discount\", cost_discount_type AS \"DiscountType\", cost_exchange_rate AS \"ExchangeRate\", cost_quantity_physical AS \"PhysicalQuantity\", cost_quantity_electronic AS \"ElectronicQuantity\", cost_po_line_estimated_price AS \"EstimatedPrice\", cost_fyro_adjustment_amount AS \"FiscalYearRolloverAdjustmentAmount\", description AS \"InternalNote\", details_receiving_note AS \"ReceivingNote\", details_subscription_from AS \"SubscriptionFrom\", details_subscription_interval AS \"SubscriptionInterval\", details_subscription_to AS \"SubscriptionTo\", donor AS \"Donor\", eresource_activated AS \"EresourceActivated\", eresource_activation_due AS \"EresourceActivationDue\", eresource_create_inventory AS \"EresourceCreateInventory\", eresource_trial AS \"EresourceTrial\", eresource_expected_activation AS \"EresourceExpectedActivationDate\", eresource_user_limit AS \"EresourceUserLimit\", eresource_access_provider_id AS \"EresourceAccessProviderId\", eresource_license_code AS \"EresourceLicenseCode\", eresource_license_description AS \"EresourceLicenseDescription\", eresource_license_reference AS \"EresourceLicenseReference\", eresource_material_type_id AS \"EresourceMaterialTypeId\", eresource_resource_url AS \"EresourceResourceUrl\", instance_id AS \"InstanceId\", is_package AS \"IsPackage\", order_format AS \"OrderFormat\", package_po_line_id AS \"PackageOrderItemId\", payment_status AS \"PaymentStatus\", physical_create_inventory AS \"PhysicalCreateInventory\", physical_material_type_id AS \"PhysicalMaterialTypeId\", physical_material_supplier_id AS \"PhysicalMaterialSupplierId\", physical_expected_receipt_date AS \"PhysicalExpectedReceiptDate\", physical_receipt_due AS \"PhysicalReceiptDue\", po_line_description AS \"Description\", po_line_number AS \"Number\", publication_year AS \"PublicationYear\", publisher AS \"Publisher\", order_id AS \"OrderId\", receipt_date AS \"ReceiptDate\", receipt_status AS \"ReceiptStatus\", requester AS \"Requester\", rush AS \"Rush\", selector AS \"Selector\", source AS \"Source\", title_or_package AS \"TitleOrPackage\", vendor_detail_instructions AS \"VendorInstructions\", vendor_detail_note_from_vendor AS \"VendorNote\", vendor_detail_vendor_account AS \"VendorCustomerId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_items{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemAlert> OrderItemAlerts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemAlert>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", alert_id AS \"AlertId\" FROM uc{(IsMySql ? "_" : ".")}order_item_alerts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemClaim> OrderItemClaims(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemClaim>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", claimed AS \"Claimed\", sent AS \"Sent\", grace AS \"Grace\" FROM uc{(IsMySql ? "_" : ".")}order_item_claims{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemContributor> OrderItemContributors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemContributor>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", contributor AS \"Contributor\", contributor_name_type_id AS \"ContributorNameTypeId\" FROM uc{(IsMySql ? "_" : ".")}order_item_contributors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemFund> OrderItemFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemFund>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", expense_class_id AS \"ExpenseClassId\", distribution_type AS \"DistributionType\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemLocation2> OrderItemLocation2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemLocation2>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", location_id AS \"LocationId\", holding_id AS \"HoldingId\", quantity AS \"Quantity\", quantity_electronic AS \"ElectronicQuantity\", quantity_physical AS \"PhysicalQuantity\" FROM uc{(IsMySql ? "_" : ".")}order_item_locations{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemNote> OrderItemNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemNote>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}order_item_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemProductId> OrderItemProductIds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemProductId>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", qualifier AS \"Qualifier\" FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemReferenceNumber> OrderItemReferenceNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemReferenceNumber>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", ref_number AS \"ReferenceNumber\", ref_number_type AS \"ReferenceNumberType\", vendor_details_source AS \"VendorDetailsSource\" FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemReportingCode> OrderItemReportingCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemReportingCode>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", reporting_code_id AS \"ReportingCodeId\" FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemTag> OrderItemTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemTag>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_item_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderItemVolume> OrderItemVolumes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderItemVolume>($"SELECT id AS \"Id\", order_item_id AS \"OrderItemId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_item_volumes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderNote> OrderNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderNote>($"SELECT id AS \"Id\", order_id AS \"OrderId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderStatus> OrderStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}order_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderTag> OrderTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderTag>($"SELECT id AS \"Id\", order_id AS \"OrderId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderTemplate> OrderTemplates(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderTemplate>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderTemplate2> OrderTemplate2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderTemplate2>($"SELECT id AS \"Id\", template_name AS \"Name\", template_code AS \"Code\", template_description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderTransactionSummary> OrderTransactionSummaries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderTransactionSummary>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderTransactionSummary2> OrderTransactionSummary2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderTransactionSummary2>($"SELECT id AS \"Id\", num_transactions AS \"NumTransactions\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrderType> OrderTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrderType>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}order_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Organization> Organizations(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Organization>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Organization2> Organization2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Organization2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", description AS \"Description\", export_to_accounting AS \"ExportToAccounting\", status AS \"Status\", language AS \"Language\", erp_code AS \"AccountingCode\", payment_method AS \"PaymentMethod\", access_provider AS \"AccessProvider\", governmental AS \"Governmental\", licensor AS \"Licensor\", material_supplier AS \"MaterialSupplier\", claiming_interval AS \"ClaimingInterval\", discount_percent AS \"DiscountPercent\", expected_activation_interval AS \"ExpectedActivationInterval\", expected_invoice_interval AS \"ExpectedInvoiceInterval\", renewal_activation_interval AS \"RenewalActivationInterval\", subscription_interval AS \"SubscriptionInterval\", expected_receipt_interval AS \"ExpectedReceiptInterval\", tax_id AS \"TaxId\", liable_for_vat AS \"LiableForVat\", tax_percentage AS \"TaxPercentage\", edi_vendor_edi_code AS \"EdiVendorEdiCode\", edi_vendor_edi_type AS \"EdiVendorEdiType\", edi_lib_edi_code AS \"EdiLibEdiCode\", edi_lib_edi_type AS \"EdiLibEdiType\", edi_prorate_tax AS \"EdiProrateTax\", edi_prorate_fees AS \"EdiProrateFees\", edi_naming_convention AS \"EdiNamingConvention\", edi_send_acct_num AS \"EdiSendAcctNum\", edi_support_order AS \"EdiSupportOrder\", edi_support_invoice AS \"EdiSupportInvoice\", edi_notes AS \"EdiNotes\", edi_ftp_ftp_format AS \"EdiFtpFtpFormat\", edi_ftp_server_address AS \"EdiFtpServerAddress\", edi_ftp_username AS \"EdiFtpUsername\", edi_ftp_password AS \"EdiFtpPassword\", edi_ftp_ftp_mode AS \"EdiFtpFtpMode\", edi_ftp_ftp_conn_mode AS \"EdiFtpFtpConnMode\", edi_ftp_ftp_port AS \"EdiFtpFtpPort\", edi_ftp_order_directory AS \"EdiFtpOrderDirectory\", edi_ftp_invoice_directory AS \"EdiFtpInvoiceDirectory\", edi_ftp_notes AS \"EdiFtpNotes\", edi_job_schedule_edi AS \"EdiJobScheduleEdi\", edi_job_scheduling_date AS \"EdiJobSchedulingDate\", edi_job_time AS \"EdiJobTime\", edi_job_is_monday AS \"EdiJobIsMonday\", edi_job_is_tuesday AS \"EdiJobIsTuesday\", edi_job_is_wednesday AS \"EdiJobIsWednesday\", edi_job_is_thursday AS \"EdiJobIsThursday\", edi_job_is_friday AS \"EdiJobIsFriday\", edi_job_is_saturday AS \"EdiJobIsSaturday\", edi_job_is_sunday AS \"EdiJobIsSunday\", edi_job_send_to_emails AS \"EdiJobSendToEmails\", edi_job_notify_all_edi AS \"EdiJobNotifyAllEdi\", edi_job_notify_invoice_only AS \"EdiJobNotifyInvoiceOnly\", edi_job_notify_error_only AS \"EdiJobNotifyErrorOnly\", edi_job_scheduling_notes AS \"EdiJobSchedulingNotes\", is_vendor AS \"IsVendor\", san_code AS \"SanCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAccount> OrganizationAccounts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAccount>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", name AS \"Name\", account_no AS \"AccountNumber\", description AS \"Description\", app_system_no AS \"AppSystemNumber\", payment_method AS \"PaymentMethod\", account_status AS \"AccountStatus\", contact_info AS \"ContactInfo\", library_code AS \"LibraryCode\", library_edi_code AS \"LibraryEdiCode\", notes AS \"Notes\" FROM uc{(IsMySql ? "_" : ".")}organization_accounts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAccountAcquisitionsUnit> OrganizationAccountAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAccountAcquisitionsUnit>($"SELECT id AS \"Id\", organization_account_id AS \"OrganizationAccountId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAcquisitionsUnit> OrganizationAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAcquisitionsUnit>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAddress> OrganizationAddresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAddress>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", state_region AS \"State\", zip_code AS \"PostalCode\", country AS \"CountryCode\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_addresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAddressCategory> OrganizationAddressCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAddressCategory>($"SELECT id AS \"Id\", organization_address_id AS \"OrganizationAddressId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_address_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAgreement> OrganizationAgreements(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAgreement>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", name AS \"Name\", discount AS \"Discount\", reference_url AS \"ReferenceUrl\", notes AS \"Notes\" FROM uc{(IsMySql ? "_" : ".")}organization_agreements{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationAlias> OrganizationAliases(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationAlias>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", value AS \"Value\", description AS \"Description\" FROM uc{(IsMySql ? "_" : ".")}organization_aliases{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationChangelog> OrganizationChangelogs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationChangelog>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", description AS \"Description\", timestamp AS \"Timestamp\" FROM uc{(IsMySql ? "_" : ".")}organization_changelogs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationContact> OrganizationContacts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationContact>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", contact_id AS \"ContactId\" FROM uc{(IsMySql ? "_" : ".")}organization_contacts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationEmail> OrganizationEmails(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationEmail>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_emails{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationEmailCategory> OrganizationEmailCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationEmailCategory>($"SELECT id AS \"Id\", organization_email_id AS \"OrganizationEmailId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_email_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationInterface> OrganizationInterfaces(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationInterface>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", interface_id AS \"InterfaceId\" FROM uc{(IsMySql ? "_" : ".")}organization_interfaces{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationNote> OrganizationNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationNote>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}organization_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationPhoneNumber> OrganizationPhoneNumbers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationPhoneNumber>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", phone_number AS \"PhoneNumber\", type AS \"Type\", is_primary AS \"IsPrimary\", language AS \"Language\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationPhoneNumberCategory> OrganizationPhoneNumberCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationPhoneNumberCategory>($"SELECT id AS \"Id\", organization_phone_number_id AS \"OrganizationPhoneNumberId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationTag> OrganizationTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationTag>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}organization_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationUrl> OrganizationUrls(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationUrl>($"SELECT id AS \"Id\", organization_id AS \"OrganizationId\", id2 AS \"Id2\", value AS \"Value\", description AS \"Description\", language AS \"Language\", is_primary AS \"IsPrimary\", notes AS \"Notes\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\" FROM uc{(IsMySql ? "_" : ".")}organization_urls{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OrganizationUrlCategory> OrganizationUrlCategories(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OrganizationUrlCategory>($"SELECT id AS \"Id\", organization_url_id AS \"OrganizationUrlId\", category_id AS \"CategoryId\" FROM uc{(IsMySql ? "_" : ".")}organization_url_categories{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OverdueFinePolicy> OverdueFinePolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OverdueFinePolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<OverdueFinePolicy2> OverdueFinePolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<OverdueFinePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", overdue_fine_quantity AS \"OverdueFineQuantity\", overdue_fine_interval_id AS \"OverdueFineInterval\", count_closed AS \"CountClosed\", max_overdue_fine AS \"MaxOverdueFine\", forgive_overdue_fine AS \"ForgiveOverdueFine\", overdue_recall_fine_quantity AS \"OverdueRecallFineQuantity\", overdue_recall_fine_interval_id AS \"OverdueRecallFineInterval\", grace_period_recall AS \"GracePeriodRecall\", max_overdue_recall_fine AS \"MaxOverdueRecallFine\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Owner> Owners(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Owner>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Owner2> Owner2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Owner2>($"SELECT id AS \"Id\", owner AS \"Name\", \"desc\" AS \"Description\", default_charge_notice_id AS \"DefaultChargeNoticeId\", default_action_notice_id AS \"DefaultActionNoticeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronActionSession> PatronActionSessions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronActionSession>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronActionSession2> PatronActionSession2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronActionSession2>($"SELECT id AS \"Id\", patron_id AS \"PatronId\", loan_id AS \"LoanId\", action_type AS \"ActionType\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronNoticePolicy> PatronNoticePolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronNoticePolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronNoticePolicy2> PatronNoticePolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronNoticePolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", active AS \"Active\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronNoticePolicyFeeFineNotice> PatronNoticePolicyFeeFineNotices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronNoticePolicyFeeFineNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronNoticePolicyLoanNotice> PatronNoticePolicyLoanNotices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronNoticePolicyLoanNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PatronNoticePolicyRequestNotice> PatronNoticePolicyRequestNotices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PatronNoticePolicyRequestNotice>($"SELECT id AS \"Id\", patron_notice_policy_id AS \"PatronNoticePolicyId\", name AS \"Name\", template_id AS \"TemplateId\", template_name AS \"TemplateName\", format AS \"Format\", frequency AS \"Frequency\", real_time AS \"RealTime\", send_options_send_how AS \"SendOptionsSendHow\", send_options_send_when AS \"SendOptionsSendWhen\", send_options_send_by_duration AS \"SendOptionsSendByDuration\", send_options_send_by_interval_id AS \"SendOptionsSendByInterval\", send_options_send_every_duration AS \"SendOptionsSendEveryDuration\", send_options_send_every_interval_id AS \"SendOptionsSendEveryInterval\" FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Payment> Payments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Payment>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Payment2> Payment2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Payment2>($"SELECT id AS \"Id\", date_action AS \"CreationTime\", type_action AS \"TypeAction\", comments AS \"Comments\", notify AS \"Notify\", amount_action AS \"Amount\", balance AS \"RemainingAmount\", transaction_information AS \"TransactionInformation\", service_point AS \"ServicePoint\", source AS \"Source\", payment_method AS \"PaymentMethod\", fee_id AS \"FeeId\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PaymentMethod> PaymentMethods(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PaymentMethod>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PaymentMethod2> PaymentMethod2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PaymentMethod2>($"SELECT id AS \"Id\", name AS \"Name\", allowed_refund_method AS \"AllowedRefundMethod\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", owner_id AS \"OwnerId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}payment_methods{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PaymentType> PaymentTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PaymentType>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}payment_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Permission> Permissions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Permission>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Permission2> Permission2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Permission2>($"SELECT id AS \"Id\", permission_name AS \"Code\", display_name AS \"Name\", description AS \"Description\", mutable AS \"Editable\", visible AS \"Visible\", dummy AS \"Dummy\", deprecated AS \"Deprecated\", module_name AS \"ModuleName\", module_version AS \"ModuleVersion\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionChildOf> PermissionChildOfs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionChildOf>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_child_of{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionGrantedTo> PermissionGrantedTos(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionGrantedTo>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", permissions_user_id AS \"PermissionsUserId\" FROM uc{(IsMySql ? "_" : ".")}permission_granted_to{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionSubPermission> PermissionSubPermissions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionSubPermission>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionsUser> PermissionsUsers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionsUser>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionsUser2> PermissionsUser2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionsUser2>($"SELECT id AS \"Id\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionsUserPermission> PermissionsUserPermissions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionsUserPermission>($"SELECT id AS \"Id\", permissions_user_id AS \"PermissionsUserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PermissionTag> PermissionTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PermissionTag>($"SELECT id AS \"Id\", permission_id AS \"PermissionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}permission_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PhysicalDescription> PhysicalDescriptions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PhysicalDescription>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}physical_descriptions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<PrecedingSucceedingTitle> PrecedingSucceedingTitles(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PrecedingSucceedingTitle>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", precedinginstanceid AS \"Precedinginstanceid\", succeedinginstanceid AS \"Succeedinginstanceid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PrecedingSucceedingTitle2> PrecedingSucceedingTitle2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PrecedingSucceedingTitle2>($"SELECT id AS \"Id\", preceding_instance_id AS \"PrecedingInstanceId\", succeeding_instance_id AS \"SucceedingInstanceId\", title AS \"Title\", hrid AS \"Hrid\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<PrecedingSucceedingTitleIdentifier> PrecedingSucceedingTitleIdentifiers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PrecedingSucceedingTitleIdentifier>($"SELECT id AS \"Id\", preceding_succeeding_title_id AS \"PrecedingSucceedingTitleId\", value AS \"Value\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Prefix> Prefixes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Prefix>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Prefix2> Prefix2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Prefix2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Printer> Printers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Printer>($"SELECT id AS \"Id\", computer_name AS \"ComputerName\", name AS \"Name\", \"left\" AS \"Left\", \"top\" AS \"Top\", width AS \"Width\", height AS \"Height\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}printers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Proxy> Proxies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Proxy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Proxy2> Proxy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Proxy2>($"SELECT id AS \"Id\", user_id AS \"UserId\", proxy_user_id AS \"ProxyUserId\", request_for_sponsor AS \"RequestForSponsor\", notifications_to AS \"NotificationsTo\", accrue_to AS \"AccrueTo\", status AS \"Status\", expiration_date AS \"ExpirationDate\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}proxies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Publication> Publications(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Publication>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", publisher AS \"Publisher\", place AS \"Place\", date_of_publication AS \"PublicationYear\", role AS \"Role\" FROM uc{(IsMySql ? "_" : ".")}publications{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<PublicationFrequency> PublicationFrequencies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PublicationFrequency>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}publication_frequency{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<PublicationRange> PublicationRanges(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<PublicationRange>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}publication_range{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<RawRecord> RawRecords(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RawRecord>($"SELECT id AS \"Id\", content AS \"Content\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RawRecord2> RawRecord2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RawRecord2>($"SELECT id AS \"Id\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}raw_records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ReceiptStatus> ReceiptStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ReceiptStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}receipt_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Receiving> Receivings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Receiving>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", polineid AS \"Polineid\", titleid AS \"Titleid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Receiving2> Receiving2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Receiving2>($"SELECT id AS \"Id\", caption AS \"Caption\", comment AS \"Comment\", format AS \"Format\", item_id AS \"ItemId\", location_id AS \"LocationId\", po_line_id AS \"OrderItemId\", title_id AS \"TitleId\", holding_id AS \"HoldingId\", display_on_holding AS \"DisplayOnHolding\", enumeration AS \"Enumeration\", chronology AS \"Chronology\", discovery_suppress AS \"DiscoverySuppress\", receiving_status AS \"ReceivingStatus\", supplement AS \"Supplement\", receipt_date AS \"ReceiptTime\", received_date AS \"ReceiveTime\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}receivings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Record> Records(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Record>($"SELECT id AS \"Id\", snapshot_id AS \"SnapshotId\", matched_id AS \"MatchedId\", generation AS \"Generation\", record_type AS \"RecordType\", external_id AS \"InstanceId\", state AS \"State\", leader_record_status AS \"LeaderRecordStatus\", \"order\" AS \"Order\", suppress_discovery AS \"SuppressDiscovery\", created_by_user_id AS \"CreationUserId\", created_date AS \"CreationTime\", updated_by_user_id AS \"LastWriteUserId\", updated_date AS \"LastWriteTime\", external_hrid AS \"InstanceHrid\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Record2> Record2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Record2>($"SELECT id AS \"Id\", snapshot_id AS \"SnapshotId\", matched_id AS \"MatchedId\", generation AS \"Generation\", record_type AS \"RecordType\", instance_id AS \"InstanceId\", state AS \"State\", leader_record_status AS \"LeaderRecordStatus\", \"order\" AS \"Order\", suppress_discovery AS \"SuppressDiscovery\", creation_user_id AS \"CreationUserId\", creation_time AS \"CreationTime\", last_write_user_id AS \"LastWriteUserId\", last_write_time AS \"LastWriteTime\", instance_hrid AS \"InstanceHrid\" FROM uc{(IsMySql ? "_" : ".")}records{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RefundReason> RefundReasons(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RefundReason>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RefundReason2> RefundReason2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RefundReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", account_id AS \"AccountId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}refund_reasons{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Relationship> Relationships(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Relationship>($"SELECT id AS \"Id\", super_instance_id AS \"SuperInstanceId\", sub_instance_id AS \"SubInstanceId\", instance_relationship_type_id AS \"InstanceRelationshipTypeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}relationships{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RelationshipType> RelationshipTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RelationshipType>($"SELECT id AS \"Id\", name AS \"Name\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}relationship_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ReportingCode> ReportingCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ReportingCode>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ReportingCode2> ReportingCode2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ReportingCode2>($"SELECT id AS \"Id\", code AS \"Code\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}reporting_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Request> Requests(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Request>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", cancellationreasonid AS \"Cancellationreasonid\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Request2> Request2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Request2>($"SELECT id AS \"Id\", request_type AS \"RequestType\", request_date AS \"RequestDate\", patron_comments AS \"PatronComments\", requester_id AS \"RequesterId\", proxy_user_id AS \"ProxyUserId\", item_id AS \"ItemId\", status AS \"Status\", cancellation_reason_id AS \"CancellationReasonId\", cancelled_by_user_id AS \"CancelledByUserId\", cancellation_additional_information AS \"CancellationAdditionalInformation\", cancelled_date AS \"CancelledDate\", position AS \"Position\", item_title AS \"ItemTitle\", item_barcode AS \"ItemBarcode\", requester_first_name AS \"RequesterFirstName\", requester_last_name AS \"RequesterLastName\", requester_middle_name AS \"RequesterMiddleName\", requester_barcode AS \"RequesterBarcode\", requester_patron_group AS \"RequesterPatronGroup\", proxy_first_name AS \"ProxyFirstName\", proxy_last_name AS \"ProxyLastName\", proxy_middle_name AS \"ProxyMiddleName\", proxy_barcode AS \"ProxyBarcode\", proxy_patron_group AS \"ProxyPatronGroup\", fulfilment_preference AS \"FulfilmentPreference\", delivery_address_type_id AS \"DeliveryAddressTypeId\", request_expiration_date AS \"RequestExpirationDate\", hold_shelf_expiration_date AS \"HoldShelfExpirationDate\", pickup_service_point_id AS \"PickupServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", awaiting_pickup_request_closed_date AS \"AwaitingPickupRequestClosedDate\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}requests{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestIdentifier> RequestIdentifiers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestIdentifier>($"SELECT id AS \"Id\", request_id AS \"RequestId\", value AS \"Value\", identifier_type_id AS \"IdentifierTypeId\" FROM uc{(IsMySql ? "_" : ".")}request_identifiers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestNote> RequestNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestNote>($"SELECT id AS \"Id\", request_id AS \"RequestId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}request_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestPolicy> RequestPolicies(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestPolicy>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestPolicy2> RequestPolicy2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestPolicy2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_policies{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestPolicyRequestType> RequestPolicyRequestTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestPolicyRequestType>($"SELECT id AS \"Id\", request_policy_id AS \"RequestPolicyId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<RequestTag> RequestTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<RequestTag>($"SELECT id AS \"Id\", request_id AS \"RequestId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}request_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ScheduledNotice> ScheduledNotices(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ScheduledNotice>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ScheduledNotice2> ScheduledNotice2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ScheduledNotice2>($"SELECT id AS \"Id\", loan_id AS \"LoanId\", request_id AS \"RequestId\", payment_id AS \"PaymentId\", recipient_user_id AS \"RecipientUserId\", next_run_time AS \"NextRunTime\", triggering_event AS \"TriggeringEvent\", notice_config_timing AS \"NoticeConfigTiming\", notice_config_recurring_period_duration AS \"NoticeConfigRecurringPeriodDuration\", notice_config_recurring_period_interval_id AS \"NoticeConfigRecurringPeriodInterval\", notice_config_template_id AS \"NoticeConfigTemplateId\", notice_config_format AS \"NoticeConfigFormat\", notice_config_send_in_real_time AS \"NoticeConfigSendInRealTime\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}scheduled_notices{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Series> Series(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Series>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}series{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePoint> ServicePoints(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePoint>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePoint2> ServicePoint2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePoint2>($"SELECT id AS \"Id\", name AS \"Name\", code AS \"Code\", discovery_display_name AS \"DiscoveryDisplayName\", description AS \"Description\", shelving_lag_time AS \"ShelvingLagTime\", pickup_location AS \"PickupLocation\", hold_shelf_expiry_period_duration AS \"HoldShelfExpiryPeriodDuration\", hold_shelf_expiry_period_interval_id AS \"HoldShelfExpiryPeriodInterval\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}service_points{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePointOwner> ServicePointOwners(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePointOwner>($"SELECT id AS \"Id\", owner_id AS \"OwnerId\", service_point_id AS \"ServicePointId\", label AS \"Label\" FROM uc{(IsMySql ? "_" : ".")}service_point_owners{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePointStaffSlip> ServicePointStaffSlips(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePointStaffSlip>($"SELECT id AS \"Id\", service_point_id AS \"ServicePointId\", staff_slip_id AS \"StaffSlipId\", print_by_default AS \"PrintByDefault\" FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePointUser> ServicePointUsers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePointUser>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", defaultservicepointid AS \"Defaultservicepointid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePointUser2> ServicePointUser2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePointUser2>($"SELECT id AS \"Id\", user_id AS \"UserId\", default_service_point_id AS \"DefaultServicePointId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}service_point_users{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<ServicePointUserServicePoint> ServicePointUserServicePoints(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<ServicePointUserServicePoint>($"SELECT id AS \"Id\", service_point_user_id AS \"ServicePointUserId\", service_point_id AS \"ServicePointId\" FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Setting> Settings(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Setting>($"SELECT id AS \"Id\", name AS \"Name\", orientation AS \"Orientation\", font_family AS \"FontFamily\", font_size AS \"FontSize\", font_weight AS \"FontWeight\", enabled AS \"Enabled\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}settings{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Snapshot> Snapshots(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Snapshot>($"SELECT id AS \"Id\", status AS \"Status\", processing_started_date AS \"ProcessingStartedDate\", created_by_user_id AS \"CreationUserId\", created_date AS \"CreationTime\", updated_by_user_id AS \"LastWriteUserId\", updated_date AS \"LastWriteTime\" FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Snapshot2> Snapshot2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Snapshot2>($"SELECT id AS \"Id\", status AS \"Status\", processing_started_date AS \"ProcessingStartedDate\", creation_user_id AS \"CreationUserId\", creation_time AS \"CreationTime\", last_write_user_id AS \"LastWriteUserId\", last_write_time AS \"LastWriteTime\" FROM uc{(IsMySql ? "_" : ".")}snapshots{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Source> Sources(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Source>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Source2> Source2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Source2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}sources{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<SourceMarc> SourceMarcs(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<SourceMarc>($"SELECT id AS \"Id\", leader AS \"Leader\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}source_marcs{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<SourceMarcField> SourceMarcFields(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<SourceMarcField>($"SELECT id AS \"Id\", source_marc_id AS \"SourceMarcId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}source_marc_fields{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StaffSlip> StaffSlips(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StaffSlip>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StaffSlip2> StaffSlip2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StaffSlip2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", active AS \"Active\", template AS \"Template\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StatisticalCode> StatisticalCodes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StatisticalCode>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", statisticalcodetypeid AS \"Statisticalcodetypeid\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StatisticalCode2> StatisticalCode2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StatisticalCode2>($"SELECT id AS \"Id\", code AS \"Code\", name AS \"Name\", statistical_code_type_id AS \"StatisticalCodeTypeId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statistical_codes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StatisticalCodeType> StatisticalCodeTypes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StatisticalCodeType>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<StatisticalCodeType2> StatisticalCodeType2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<StatisticalCodeType2>($"SELECT id AS \"Id\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statistical_code_types{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Status> Statuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Status>($"SELECT id AS \"Id\", code AS \"Code\", name AS \"Name\", source AS \"Source\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Subject> Subjects(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Subject>($"SELECT id AS \"Id\", instance_id AS \"InstanceId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}subjects{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, instance_id"}" : "")}", param, skip, take);
        public IEnumerable<Suffix> Suffixes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Suffix>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Suffix2> Suffix2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Suffix2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<SupplementStatement> SupplementStatements(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<SupplementStatement>($"SELECT id AS \"Id\", holding_id AS \"HoldingId\", statement AS \"Statement\", note AS \"Note\", staff_note AS \"StaffNote\" FROM uc{(IsMySql ? "_" : ".")}supplement_statements{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id, holding_id"}" : "")}", param, skip, take);
        public IEnumerable<Tag> Tags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Tag>($"SELECT id AS \"Id\", created_by AS \"CreationUserId\", label AS \"Label\", description AS \"Description\", created_date AS \"CreationTime\", updated_date AS \"LastWriteTime\", updated_by AS \"UpdatedBy\" FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Tag2> Tag2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Tag2>($"SELECT id AS \"Id\", label AS \"Label\", description AS \"Description\", creation_time AS \"CreationTime\", last_write_time AS \"LastWriteTime\", updated_by AS \"LastWriteUserId\" FROM uc{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Template> Templates(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Template>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Template2> Template2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Template2>($"SELECT id AS \"Id\", name AS \"Name\", active AS \"Active\", category AS \"Category\", description AS \"Description\", template_resolver AS \"TemplateResolver\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}templates{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TemplateOutputFormat> TemplateOutputFormats(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TemplateOutputFormat>($"SELECT id AS \"Id\", template_id AS \"TemplateId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}template_output_formats{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Title> Titles(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Title>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", polineid AS \"Polineid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Title2> Title2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Title2>($"SELECT id AS \"Id\", expected_receipt_date AS \"ExpectedReceiptDate\", title AS \"Title\", po_line_id AS \"OrderItemId\", instance_id AS \"InstanceId\", publisher AS \"Publisher\", edition AS \"Edition\", package_name AS \"PackageName\", po_line_number AS \"OrderItemNumber\", published_date AS \"PublishedDate\", receiving_note AS \"ReceivingNote\", subscription_from AS \"SubscriptionFrom\", subscription_to AS \"SubscriptionTo\", subscription_interval AS \"SubscriptionInterval\", is_acknowledged AS \"IsAcknowledged\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TitleContributor> TitleContributors(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TitleContributor>($"SELECT id AS \"Id\", title_id AS \"TitleId\", contributor AS \"Contributor\", contributor_name_type_id AS \"ContributorNameTypeId\" FROM uc{(IsMySql ? "_" : ".")}title_contributors{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TitleProductId> TitleProductIds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TitleProductId>($"SELECT id AS \"Id\", title_id AS \"TitleId\", product_id AS \"ProductId\", product_id_type_id AS \"ProductIdTypeId\", qualifier AS \"Qualifier\" FROM uc{(IsMySql ? "_" : ".")}title_product_ids{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Transaction> Transactions(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Transaction>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", fiscalyearid AS \"Fiscalyearid\", fromfundid AS \"Fromfundid\", sourcefiscalyearid AS \"Sourcefiscalyearid\", tofundid AS \"Tofundid\", expenseclassid AS \"Expenseclassid\" FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Transaction2> Transaction2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Transaction2>($"SELECT id AS \"Id\", amount AS \"Amount\", awaiting_payment_encumbrance_id AS \"AwaitingPaymentEncumbranceId\", awaiting_payment_release_encumbrance AS \"AwaitingPaymentReleaseEncumbrance\", currency AS \"Currency\", description AS \"Description\", encumbrance_amount_awaiting_payment AS \"AwaitingPaymentAmount\", encumbrance_amount_expended AS \"ExpendedAmount\", encumbrance_initial_amount_encumbered AS \"InitialEncumberedAmount\", encumbrance_status AS \"Status\", encumbrance_order_type AS \"OrderType\", encumbrance_order_status AS \"OrderStatus\", encumbrance_subscription AS \"Subscription\", encumbrance_re_encumber AS \"ReEncumber\", encumbrance_source_purchase_order_id AS \"OrderId\", encumbrance_source_po_line_id AS \"OrderItemId\", expense_class_id AS \"ExpenseClassId\", fiscal_year_id AS \"FiscalYearId\", from_fund_id AS \"FromFundId\", invoice_cancelled AS \"InvoiceCancelled\", payment_encumbrance_id AS \"PaymentEncumbranceId\", source AS \"Source\", source_fiscal_year_id AS \"SourceFiscalYearId\", source_invoice_id AS \"InvoiceId\", source_invoice_line_id AS \"InvoiceItemId\", to_fund_id AS \"ToFundId\", transaction_type AS \"TransactionType\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transactions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TransactionTag> TransactionTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TransactionTag>($"SELECT id AS \"Id\", transaction_id AS \"TransactionId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transaction_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TransferAccount> TransferAccounts(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TransferAccount>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TransferAccount2> TransferAccount2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TransferAccount2>($"SELECT id AS \"Id\", name AS \"Name\", \"desc\" AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", owner_id AS \"OwnerId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transfer_accounts{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TransferCriteria> TransferCriterias(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TransferCriteria>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<TransferCriteria2> TransferCriteria2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<TransferCriteria2>($"SELECT id AS \"Id\", criteria AS \"Criteria\", type AS \"Type\", value AS \"Value\", interval AS \"Interval\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}transfer_criterias{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<User> Users(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<User>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", patrongroup AS \"Patrongroup\" FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<User2> User2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<User2>($"SELECT id AS \"Id\", username AS \"Username\", external_system_id AS \"ExternalSystemId\", barcode AS \"Barcode\", active AS \"Active\", type AS \"Type\", group_id AS \"GroupId\", name AS \"Name\", last_name AS \"LastName\", first_name AS \"FirstName\", middle_name AS \"MiddleName\", preferred_first_name AS \"PreferredFirstName\", email AS \"EmailAddress\", phone AS \"PhoneNumber\", mobile_phone AS \"MobilePhoneNumber\", date_of_birth AS \"BirthDate\", preferred_contact_type_id AS \"PreferredContactTypeId\", enrollment_date AS \"StartDate\", expiration_date AS \"EndDate\", source AS \"Source\", category AS \"Category\", status AS \"Status\", statuses AS \"Statuses\", staff_status AS \"StaffStatus\", staff_privileges AS \"StaffPrivileges\", staff_division AS \"StaffDivision\", staff_department AS \"StaffDepartment\", student_id AS \"StudentId\", student_status AS \"StudentStatus\", student_restriction AS \"StudentRestriction\", student_division AS \"StudentDivision\", student_department AS \"StudentDepartment\", deceased AS \"Deceased\", collections AS \"Collections\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserAcquisitionsUnit> UserAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserAcquisitionsUnit>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", acquisitionsunitid AS \"Acquisitionsunitid\" FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserAcquisitionsUnit2> UserAcquisitionsUnit2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserAcquisitionsUnit2>($"SELECT id AS \"Id\", user_id AS \"UserId\", acquisitions_unit_id AS \"AcquisitionsUnitId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserAddress> UserAddresses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserAddress>($"SELECT id AS \"Id\", user_id AS \"UserId\", id2 AS \"Id2\", country_id AS \"CountryCode\", address_line1 AS \"StreetAddress1\", address_line2 AS \"StreetAddress2\", city AS \"City\", region AS \"State\", postal_code AS \"PostalCode\", address_type_id AS \"AddressTypeId\", primary_address AS \"Default\" FROM uc{(IsMySql ? "_" : ".")}user_addresses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserDepartment> UserDepartments(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserDepartment>($"SELECT id AS \"Id\", user_id AS \"UserId\", department_id AS \"DepartmentId\" FROM uc{(IsMySql ? "_" : ".")}user_departments{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserNote> UserNotes(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserNote>($"SELECT id AS \"Id\", user_id AS \"UserId\", note_id AS \"NoteId\" FROM uc{(IsMySql ? "_" : ".")}user_notes{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserRequestPreference> UserRequestPreferences(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserRequestPreference>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserRequestPreference2> UserRequestPreference2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserRequestPreference2>($"SELECT id AS \"Id\", user_id AS \"UserId\", hold_shelf AS \"HoldShelf\", delivery AS \"Delivery\", default_service_point_id AS \"DefaultServicePointId\", default_delivery_address_type_id AS \"DefaultDeliveryAddressTypeId\", fulfillment AS \"Fulfillment\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_request_preferences{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserSummary> UserSummaries(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserSummary>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserSummary2> UserSummary2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserSummary2>($"SELECT id AS \"Id\", _version AS \"Version\", user_id AS \"UserId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_summaries{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserSummaryOpenFeesFine> UserSummaryOpenFeesFines(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserSummaryOpenFeesFine>($"SELECT id AS \"Id\", user_summary_id AS \"UserSummaryId\", fee_fine_id AS \"FeeFineId\", fee_fine_type_id AS \"FeeFineTypeId\", loan_id AS \"LoanId\", balance AS \"Balance\" FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserSummaryOpenLoan> UserSummaryOpenLoans(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserSummaryOpenLoan>($"SELECT id AS \"Id\", user_summary_id AS \"UserSummaryId\", loan_id AS \"LoanId\", due_date AS \"DueDate\", recall AS \"Recall\", item_lost AS \"ItemLost\", item_claimed_returned AS \"ItemClaimedReturned\", grace_period_duration AS \"GracePeriodDuration\", grace_period_interval_id AS \"GracePeriodInterval\" FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<UserTag> UserTags(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<UserTag>($"SELECT id AS \"Id\", user_id AS \"UserId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}user_tags{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Voucher> Vouchers(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Voucher>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", invoiceid AS \"Invoiceid\", batchgroupid AS \"Batchgroupid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<Voucher2> Voucher2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<Voucher2>($"SELECT id AS \"Id\", accounting_code AS \"AccountingCode\", account_no AS \"AccountNumber\", amount AS \"Amount\", batch_group_id AS \"BatchGroupId\", disbursement_number AS \"DisbursementNumber\", disbursement_date AS \"DisbursementDate\", disbursement_amount AS \"DisbursementAmount\", enclosure_needed AS \"Enclosure\", invoice_currency AS \"InvoiceCurrency\", invoice_id AS \"InvoiceId\", exchange_rate AS \"ExchangeRate\", export_to_accounting AS \"ExportToAccounting\", status AS \"Status\", system_currency AS \"SystemCurrency\", type AS \"Type\", voucher_date AS \"VoucherDate\", voucher_number AS \"Number\", vendor_id AS \"VendorId\", vendor_address_address_line1 AS \"VendorStreetAddress1\", vendor_address_address_line2 AS \"VendorStreetAddress2\", vendor_address_city AS \"VendorCity\", vendor_address_state_region AS \"VendorState\", vendor_address_zip_code AS \"VendorPostalCode\", vendor_address_country AS \"VendorCountryCode\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherAcquisitionsUnit> VoucherAcquisitionsUnits(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherAcquisitionsUnit>($"SELECT id AS \"Id\", voucher_id AS \"VoucherId\", acquisitions_unit_id AS \"AcquisitionsUnitId\" FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherItem> VoucherItems(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherItem>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\", voucherid AS \"Voucherid\" FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherItem2> VoucherItem2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherItem2>($"SELECT id AS \"Id\", amount AS \"Amount\", external_account_number AS \"AccountNumber\", sub_transaction_id AS \"SubTransactionId\", voucher_id AS \"VoucherId\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}voucher_items{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherItemFund> VoucherItemFunds(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherItemFund>($"SELECT id AS \"Id\", voucher_item_id AS \"VoucherItemId\", code AS \"FundCode\", encumbrance_id AS \"EncumbranceId\", fund_id AS \"FundId\", invoice_item_id AS \"InvoiceItemId\", distribution_type AS \"DistributionType\", expense_class_id AS \"ExpenseClassId\", value AS \"Value\" FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherItemInvoiceItem> VoucherItemInvoiceItems(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherItemInvoiceItem>($"SELECT id AS \"Id\", voucher_item_id AS \"VoucherItemId\", invoice_item_id AS \"InvoiceItemId\" FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<VoucherStatus> VoucherStatuses(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<VoucherStatus>($"SELECT id AS \"Id\", name AS \"Name\", creation_time AS \"CreationTime\", creation_username AS \"CreationUsername\", last_write_time AS \"LastWriteTime\", last_write_username AS \"LastWriteUsername\" FROM uc{(IsMySql ? "_" : ".")}voucher_statuses{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<WaiveReason> WaiveReasons(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<WaiveReason>($"SELECT id AS \"Id\", COALESCE(jsonb_set(jsonb, '{{metadata,createdDate}}', ('\"' || (jsonb#>>'{{metadata,createdDate}}') || CASE WHEN jsonb#>>'{{metadata,createdDate}}' !~ '([-+]\\d\\d:\\d\\d)|Z$' THEN '+00:00' ELSE '' END || '\"')::jsonb), jsonb) AS \"Content\", creation_date AS \"CreationTime\", created_by AS \"CreationUserId\" FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);
        public IEnumerable<WaiveReason2> WaiveReason2s(string where = null, object param = null, string orderBy = null, int? skip = null, int? take = null) => Query<WaiveReason2>($"SELECT id AS \"Id\", name AS \"Name\", description AS \"Description\", created_date AS \"CreationTime\", created_by_user_id AS \"CreationUserId\", created_by_username AS \"CreationUserUsername\", updated_date AS \"LastWriteTime\", updated_by_user_id AS \"LastWriteUserId\", updated_by_username AS \"LastWriteUserUsername\", account_id AS \"AccountId\", content AS \"Content\" FROM uc{(IsMySql ? "_" : ".")}waive_reasons{(where != null ? $" WHERE {where}" : "")}{(orderBy != null || skip != null || take != null ? $" ORDER BY {orderBy ?? "id"}" : "")}", param, skip, take);

        public int CountAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAcquisitionsUnit2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAddresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}addresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAddressTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAddressType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}address_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAlerts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAlert2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alerts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAllocatedFromFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAllocatedToFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAlternativeTitles(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alternative_titles{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAlternativeTitleTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAlternativeTitleType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alternative_title_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAuthAttempts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAuthAttempt2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAuthCredentialsHistories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAuthCredentialsHistory2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountAuthPasswordActions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchGroups(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchGroup2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVouchers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucher2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherBatchedVouchers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherBatchedVoucherBatchedVoucherLines(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherBatchedVoucherBatchedVoucherLineFundCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherExports(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherExport2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherExportConfigs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherExportConfig2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBatchVoucherExportConfigWeekdays(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlocks(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlock2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}blocks{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlockConditions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlockCondition2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}block_conditions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlockLimits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBlockLimit2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}block_limits{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBoundWithParts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBoundWithPart2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}bound_with_parts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgets(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudget2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budgets{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetExpenseClasses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetExpenseClass2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetGroups(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetGroup2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountBudgetTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCallNumberTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCallNumberType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}call_number_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCampuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCampus2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}campuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCancellationReasons(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCancellationReason2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCategory2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCheckIns(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCheckIn2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}check_ins{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCirculationNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}circulation_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCirculationRules(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCirculationRule2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountClassifications(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}classifications{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountClassificationTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountClassificationType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}classification_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCloseReasons(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCloseReason2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}close_reasons{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountComments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountComment2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountConfigurations(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountConfiguration2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}configurations{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContacts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContact2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactAddresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_addresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactAddressCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_address_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactEmails(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_emails{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactEmailCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_email_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactPhoneNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactPhoneNumberCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactUrls(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_urls{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContactUrlCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_url_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContributors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContributorNameTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContributorNameType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributor_name_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContributorTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountContributorType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributor_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCountries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}countries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCurrencies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}currencies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCustomFields(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCustomField2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountCustomFieldValues(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}custom_field_values{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountDepartments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountDepartment2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountDocuments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountDocument2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountEditions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}editions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountElectronicAccesses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountElectronicAccessRelationships(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountElectronicAccessRelationship2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountErrorRecords(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountErrorRecord2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}error_records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountEventLogs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountEventLog2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountExpenseClasses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountExpenseClass2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}expense_classes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountExportConfigCredentials(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountExportConfigCredential2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountExtents(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}extents{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFees(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFee2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fees{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFeeTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFeeType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fee_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFinanceGroups(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFinanceGroup2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}finance_groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFinanceGroupAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFiscalYears(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFiscalYear2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fiscal_years{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFiscalYearAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFixedDueDateSchedules(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFixedDueDateSchedule2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFixedDueDateScheduleSchedules(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFormats(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}formats{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFund2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}funds{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFundAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFundTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFundTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountFundType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountGroups(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountGroup2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHolding2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holdings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingDonors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_donors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingElectronicAccesses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingEntries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_entries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingFormerIds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_former_ids{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingNoteTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingNoteType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_note_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingStatisticalCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHoldingType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHridSettings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountHridSetting2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIdentifiers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}identifiers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIdTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIdType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}id_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIllPolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIllPolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ill_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIndexStatements(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}index_statements{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstances(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstance2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instances{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceFormats(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceFormat2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_formats{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceNatureOfContentTerms(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceNoteTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceNoteType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_note_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceRelationships(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceRelationshipTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceSourceMarcs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceStatisticalCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstanceType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstitutions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInstitution2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}institutions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInterfaces(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInterface2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInterfaceCredentials(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInterfaceCredential2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInterfaceTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interface_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoice2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceAdjustments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceAdjustmentFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItems(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItem2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_items{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItemAdjustments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItemAdjustmentFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItemFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItemReferenceNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceItemTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceOrderNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceTransactionSummaries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountInvoiceTransactionSummary2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIsbns(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}isbns{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIssns(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}issns{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountIssuanceModes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItems(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItem2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}items{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemDamagedStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemDamagedStatus2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemDonors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_donors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemElectronicAccesses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemFormerIds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_former_ids{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemNoteTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemNoteType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_note_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemStatisticalCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountItemYearCaptions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_year_caption{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecutions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecution2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecutionProgresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecutionProgress2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecutionSourceChunks(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobExecutionSourceChunk2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobMonitorings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJobMonitoring2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_monitorings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJournalRecords(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountJournalRecord2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLanguages(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}languages{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedger2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledgers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRollovers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRollover2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverBudgetsRollovers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverEncumbrancesRollovers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverErrors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverError2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverProgresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLedgerRolloverProgress2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLibraries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLibrary2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}libraries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoans(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoan2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loans{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanEvents(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanEvent2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_events{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanPolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanPolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLoanType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLocations(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLocation2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}locations{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLocationServicePoints(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}location_service_points{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLocationSettings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}location_settings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLogins(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLogin2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}logins{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLostItemFeePolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountLostItemFeePolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountManualBlockTemplates(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountManualBlockTemplate2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMappingParamsSnapshots(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMappingRules(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMappingRulesSnapshots(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMarcRecords(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMarcRecord2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}marc_records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMaterialTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountMaterialType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}material_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountModeOfIssuances(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNatureOfContentTerms(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNatureOfContentTerm2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNote2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNote3s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}notes2{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNoteTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountNoteType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}note_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountObjectNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}object_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOclcNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}oclc_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrders(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrder2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}orders{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderInvoices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderInvoice2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_invoices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItems(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItem2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_items{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemAlerts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_alerts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemClaims(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_claims{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemContributors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_contributors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemLocation2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_locations{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemProductIds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemReferenceNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemReportingCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderItemVolumes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_volumes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTemplates(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTemplate2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTransactionSummaries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTransactionSummary2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrderTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizations(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganization2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAccounts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_accounts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAccountAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAddresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_addresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAddressCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_address_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAgreements(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_agreements{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationAliases(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_aliases{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationChangelogs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_changelogs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationContacts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_contacts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationEmails(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_emails{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationEmailCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_email_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationInterfaces(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_interfaces{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationPhoneNumbers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationPhoneNumberCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationUrls(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_urls{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOrganizationUrlCategories(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_url_categories{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOverdueFinePolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOverdueFinePolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOwners(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountOwner2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronActionSessions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronActionSession2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronNoticePolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronNoticePolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronNoticePolicyFeeFineNotices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronNoticePolicyLoanNotices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPatronNoticePolicyRequestNotices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPayments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPayment2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPaymentMethods(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPaymentMethod2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payment_methods{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPaymentTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payment_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermission2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionChildOfs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_child_of{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionGrantedTos(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_granted_to{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionSubPermissions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionsUsers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionsUser2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionsUserPermissions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPermissionTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPhysicalDescriptions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}physical_descriptions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrecedingSucceedingTitles(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrecedingSucceedingTitle2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrecedingSucceedingTitleIdentifiers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrefixes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrefix2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPrinters(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}printers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountProxies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountProxy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}proxies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPublications(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publications{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPublicationFrequencies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publication_frequency{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountPublicationRanges(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publication_range{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRawRecords(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRawRecord2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}raw_records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountReceiptStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}receipt_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountReceivings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountReceiving2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}receivings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRecords(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRecord2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}records{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRefundReasons(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRefundReason2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}refund_reasons{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRelationships(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}relationships{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRelationshipTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}relationship_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountReportingCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountReportingCode2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}reporting_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequests(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequest2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}requests{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestIdentifiers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_identifiers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestPolicies(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestPolicy2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_policies{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestPolicyRequestTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountRequestTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountScheduledNotices(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountScheduledNotice2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}scheduled_notices{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSeries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}series{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePoints(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePoint2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_points{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePointOwners(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_owners{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePointStaffSlips(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePointUsers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePointUser2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_users{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountServicePointUserServicePoints(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSettings(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}settings{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSnapshots(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSnapshot2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}snapshots{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSources(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSource2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}sources{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSourceMarcs(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}source_marcs{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSourceMarcFields(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}source_marc_fields{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStaffSlips(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStaffSlip2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStatisticalCodes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStatisticalCode2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statistical_codes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStatisticalCodeTypes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStatisticalCodeType2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statistical_code_types{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSubjects(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}subjects{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSuffixes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSuffix2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountSupplementStatements(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}supplement_statements{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTag2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTemplates(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTemplate2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}templates{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTemplateOutputFormats(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}template_output_formats{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTitles(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTitle2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTitleContributors(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}title_contributors{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTitleProductIds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}title_product_ids{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransactions(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransaction2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transactions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransactionTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transaction_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransferAccounts(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransferAccount2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transfer_accounts{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransferCriterias(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountTransferCriteria2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transfer_criterias{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUsers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUser2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserAcquisitionsUnit2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserAddresses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_addresses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserDepartments(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_departments{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserNotes(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_notes{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserRequestPreferences(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserRequestPreference2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_request_preferences{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserSummaries(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserSummary2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summaries{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserSummaryOpenFeesFines(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserSummaryOpenLoans(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountUserTags(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_tags{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVouchers(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucher2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherAcquisitionsUnits(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherItems(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherItem2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_items{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherItemFunds(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherItemInvoiceItems(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountVoucherStatuses(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_statuses{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountWaiveReasons(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);
        public int CountWaiveReason2s(string where = null, object param = null, int? take = null) => Count($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}waive_reasons{(where != null ? $" WHERE {where}" : "")}", param: param, take: take);

        public bool AnyAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAcquisitionsUnit2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAddresses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}addresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAddressTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAddressType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}address_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAlerts(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAlert2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alerts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAllocatedFromFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAllocatedToFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAlternativeTitles(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alternative_titles{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyAlternativeTitleTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAlternativeTitleType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}alternative_title_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAuthAttempts(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAuthAttempt2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAuthCredentialsHistories(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAuthCredentialsHistory2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyAuthPasswordActions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchGroups(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchGroup2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVouchers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucher2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherBatchedVouchers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherBatchedVoucherBatchedVoucherLines(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherBatchedVoucherBatchedVoucherLineFundCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherExports(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherExport2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherExportConfigs(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherExportConfig2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBatchVoucherExportConfigWeekdays(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlocks(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlock2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}blocks{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlockConditions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlockCondition2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}block_conditions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlockLimits(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBlockLimit2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}block_limits{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBoundWithParts(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBoundWithPart2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}bound_with_parts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgets(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudget2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budgets{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetExpenseClasses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetExpenseClass2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetGroups(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetGroup2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyBudgetTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}budget_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCallNumberTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCallNumberType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}call_number_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCampuses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCampus2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}campuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCancellationReasons(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCancellationReason2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCategory2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCheckIns(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCheckIn2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}check_ins{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCirculationNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}circulation_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyCirculationRules(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCirculationRule2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyClassifications(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}classifications{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyClassificationTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyClassificationType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}classification_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCloseReasons(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCloseReason2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}close_reasons{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyComments(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyComment2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyConfigurations(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyConfiguration2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}configurations{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContacts(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContact2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactAddresses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_addresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactAddressCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_address_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactEmails(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_emails{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactEmailCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_email_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactPhoneNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactPhoneNumberCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactUrls(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_urls{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContactUrlCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contact_url_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContributors(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyContributorNameTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContributorNameType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributor_name_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContributorTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyContributorType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}contributor_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCountries(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}countries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCurrencies(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}currencies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCustomFields(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCustomField2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyCustomFieldValues(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}custom_field_values{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyDepartments(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyDepartment2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyDocuments(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyDocument2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyEditions(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}editions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyElectronicAccesses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyElectronicAccessRelationships(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyElectronicAccessRelationship2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyErrorRecords(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyErrorRecord2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}error_records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyEventLogs(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyEventLog2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyExpenseClasses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyExpenseClass2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}expense_classes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyExportConfigCredentials(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyExportConfigCredential2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyExtents(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}extents{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyFees(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFee2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fees{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFeeTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFeeType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fee_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFinanceGroups(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFinanceGroup2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}finance_groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFinanceGroupAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFiscalYears(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFiscalYear2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fiscal_years{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFiscalYearAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFixedDueDateSchedules(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFixedDueDateSchedule2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFixedDueDateScheduleSchedules(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFormats(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}formats{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFund2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}funds{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFundAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFundTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFundTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyFundType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}fund_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyGroups(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyGroup2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldings(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHolding2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holdings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingDonors(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_donors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingElectronicAccesses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingEntries(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_entries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingFormerIds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_former_ids{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingNoteTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingNoteType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_note_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingStatisticalCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHoldingType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}holding_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHridSettings(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyHridSetting2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIdentifiers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}identifiers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyIdTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIdType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}id_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIllPolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIllPolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ill_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIndexStatements(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}index_statements{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyInstances(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstance2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instances{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceFormats(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceFormat2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_formats{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceNatureOfContentTerms(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceNoteTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceNoteType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_note_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceRelationships(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceRelationshipTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceSourceMarcs(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceStatisticalCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstanceType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}instance_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstitutions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInstitution2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}institutions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInterfaces(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInterface2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInterfaceCredentials(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInterfaceCredential2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInterfaceTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}interface_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoices(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoice2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceAdjustments(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceAdjustmentFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItems(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItem2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_items{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItemAdjustments(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItemAdjustmentFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItemFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItemReferenceNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceItemTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceOrderNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceTransactionSummaries(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyInvoiceTransactionSummary2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyIsbns(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}isbns{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyIssns(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}issns{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyIssuanceModes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItems(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItem2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}items{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemDamagedStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemDamagedStatus2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemDonors(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_donors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemElectronicAccesses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemFormerIds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_former_ids{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemNoteTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemNoteType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_note_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemStatisticalCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyItemTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyItemYearCaptions(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}item_year_caption{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, item_id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecutions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecution2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecutionProgresses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecutionProgress2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecutionSourceChunks(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobExecutionSourceChunk2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobMonitorings(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJobMonitoring2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}job_monitorings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJournalRecords(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyJournalRecord2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLanguages(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}languages{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedger2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledgers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRollovers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRollover2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverBudgetsRollovers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverEncumbrancesRollovers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverErrors(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverError2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverProgresses(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLedgerRolloverProgress2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLibraries(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLibrary2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}libraries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoans(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoan2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loans{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanEvents(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanEvent2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_events{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanPolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanPolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLoanType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}loan_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLocations(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLocation2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}locations{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLocationServicePoints(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}location_service_points{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLocationSettings(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}location_settings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLogins(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLogin2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}logins{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLostItemFeePolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyLostItemFeePolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyManualBlockTemplates(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyManualBlockTemplate2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyMappingParamsSnapshots(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY job_execution_id" : "")}", param: param, take: 1).Any();
        public bool AnyMappingRules(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyMappingRulesSnapshots(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY job_execution_id" : "")}", param: param, take: 1).Any();
        public bool AnyMarcRecords(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyMarcRecord2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}marc_records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyMaterialTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyMaterialType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}material_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyModeOfIssuances(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNatureOfContentTerms(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNatureOfContentTerm2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNote2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyNote3s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}notes2{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNoteTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyNoteType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}note_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyObjectNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}object_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOclcNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}oclc_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyOrders(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrder2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}orders{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderInvoices(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderInvoice2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_invoices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItems(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItem2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_items{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemAlerts(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_alerts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemClaims(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_claims{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemContributors(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_contributors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemLocation2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_locations{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemProductIds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemReferenceNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemReportingCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderItemVolumes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_item_volumes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTemplates(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTemplate2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTransactionSummaries(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTransactionSummary2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrderTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}order_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizations(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganization2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAccounts(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_accounts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAccountAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAddresses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_addresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAddressCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_address_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAgreements(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_agreements{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationAliases(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_aliases{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationChangelogs(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_changelogs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationContacts(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_contacts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationEmails(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_emails{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationEmailCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_email_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationInterfaces(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_interfaces{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationPhoneNumbers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationPhoneNumberCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationUrls(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_urls{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOrganizationUrlCategories(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}organization_url_categories{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOverdueFinePolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOverdueFinePolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOwners(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyOwner2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronActionSessions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronActionSession2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronNoticePolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronNoticePolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronNoticePolicyFeeFineNotices(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronNoticePolicyLoanNotices(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPatronNoticePolicyRequestNotices(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPayments(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPayment2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPaymentMethods(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPaymentMethod2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payment_methods{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPaymentTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}payment_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermission2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionChildOfs(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_child_of{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionGrantedTos(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_granted_to{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionSubPermissions(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionsUsers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionsUser2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionsUserPermissions(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPermissionTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}permission_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPhysicalDescriptions(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}physical_descriptions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyPrecedingSucceedingTitles(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPrecedingSucceedingTitle2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPrecedingSucceedingTitleIdentifiers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPrefixes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPrefix2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPrinters(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}printers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyProxies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyProxy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}proxies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyPublications(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publications{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyPublicationFrequencies(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publication_frequency{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyPublicationRanges(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}publication_range{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyRawRecords(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRawRecord2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}raw_records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyReceiptStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}receipt_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyReceivings(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyReceiving2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}receivings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRecords(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRecord2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}records{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRefundReasons(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRefundReason2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}refund_reasons{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRelationships(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}relationships{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRelationshipTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}relationship_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyReportingCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyReportingCode2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}reporting_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequests(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequest2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}requests{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestIdentifiers(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_identifiers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestPolicies(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestPolicy2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_policies{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestPolicyRequestTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyRequestTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}request_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyScheduledNotices(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyScheduledNotice2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}scheduled_notices{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySeries(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}series{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePoints(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePoint2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_points{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePointOwners(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_owners{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePointStaffSlips(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePointUsers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePointUser2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_users{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyServicePointUserServicePoints(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySettings(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}settings{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySnapshots(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySnapshot2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}snapshots{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySources(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySource2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}sources{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySourceMarcs(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}source_marcs{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySourceMarcFields(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}source_marc_fields{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStaffSlips(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStaffSlip2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStatisticalCodes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStatisticalCode2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statistical_codes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStatisticalCodeTypes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStatisticalCodeType2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statistical_code_types{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySubjects(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}subjects{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, instance_id" : "")}", param: param, take: 1).Any();
        public bool AnySuffixes(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySuffix2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnySupplementStatements(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}supplement_statements{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id, holding_id" : "")}", param: param, take: 1).Any();
        public bool AnyTags(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTag2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTemplates(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTemplate2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}templates{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTemplateOutputFormats(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}template_output_formats{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTitles(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTitle2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTitleContributors(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}title_contributors{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTitleProductIds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}title_product_ids{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransactions(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransaction2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transactions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransactionTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transaction_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransferAccounts(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransferAccount2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transfer_accounts{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransferCriterias(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyTransferCriteria2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}transfer_criterias{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUsers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUser2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserAcquisitionsUnit2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserAddresses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_addresses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserDepartments(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_departments{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserNotes(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_notes{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserRequestPreferences(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserRequestPreference2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_request_preferences{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserSummaries(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserSummary2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summaries{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserSummaryOpenFeesFines(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserSummaryOpenLoans(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyUserTags(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}user_tags{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVouchers(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucher2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherAcquisitionsUnits(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherItems(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherItem2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_items{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherItemFunds(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherItemInvoiceItems(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyVoucherStatuses(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}voucher_statuses{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyWaiveReasons(string where = null, object param = null) => Query($"SELECT 1 FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();
        public bool AnyWaiveReason2s(string where = null, object param = null) => Query($"SELECT 1 FROM uc{(IsMySql ? "_" : ".")}waive_reasons{(where != null ? $" WHERE {where}" : "")}{(IsSqlServer ? $" ORDER BY id" : "")}", param: param, take: 1).Any();

        public void TruncateAcquisitionsUnits() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.acquisitions_unit"); Commit(); }
        public void TruncateAcquisitionsUnit2s() { Execute($"TRUNCATE TABLE uc.acquisitions_units"); Commit(); }
        public void TruncateAddresses() { Execute($"TRUNCATE TABLE uc.addresses"); Commit(); }
        public void TruncateAddressTypes() { Execute($"TRUNCATE TABLE uchicago_mod_users.addresstype"); Commit(); }
        public void TruncateAddressType2s() { Execute($"TRUNCATE TABLE uc.address_types"); Commit(); }
        public void TruncateAlerts() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.alert"); Commit(); }
        public void TruncateAlert2s() { Execute($"TRUNCATE TABLE uc.alerts"); Commit(); }
        public void TruncateAllocatedFromFunds() { Execute($"TRUNCATE TABLE uc.allocated_from_funds"); Commit(); }
        public void TruncateAllocatedToFunds() { Execute($"TRUNCATE TABLE uc.allocated_to_funds"); Commit(); }
        public void TruncateAlternativeTitles() { Execute($"TRUNCATE TABLE uc.alternative_titles"); Commit(); }
        public void TruncateAlternativeTitleTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.alternative_title_type"); Commit(); }
        public void TruncateAlternativeTitleType2s() { Execute($"TRUNCATE TABLE uc.alternative_title_types"); Commit(); }
        public void TruncateAuthAttempts() { Execute($"TRUNCATE TABLE uchicago_mod_login.auth_attempts"); Commit(); }
        public void TruncateAuthAttempt2s() { Execute($"TRUNCATE TABLE uc.auth_attempts"); Commit(); }
        public void TruncateAuthCredentialsHistories() { Execute($"TRUNCATE TABLE uchicago_mod_login.auth_credentials_history"); Commit(); }
        public void TruncateAuthCredentialsHistory2s() { Execute($"TRUNCATE TABLE uc.auth_credentials_histories"); Commit(); }
        public void TruncateAuthPasswordActions() { Execute($"TRUNCATE TABLE uchicago_mod_login.auth_password_action"); Commit(); }
        public void TruncateBatchGroups() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.batch_groups"); Commit(); }
        public void TruncateBatchGroup2s() { Execute($"TRUNCATE TABLE uc.batch_groups"); Commit(); }
        public void TruncateBatchVouchers() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.batch_vouchers"); Commit(); }
        public void TruncateBatchVoucher2s() { Execute($"TRUNCATE TABLE uc.batch_vouchers"); Commit(); }
        public void TruncateBatchVoucherBatchedVouchers() { Execute($"TRUNCATE TABLE uc.batch_voucher_batched_vouchers"); Commit(); }
        public void TruncateBatchVoucherBatchedVoucherBatchedVoucherLines() { Execute($"TRUNCATE TABLE uc.batch_voucher_batched_voucher_batched_voucher_lines"); Commit(); }
        public void TruncateBatchVoucherBatchedVoucherBatchedVoucherLineFundCodes() { Execute($"TRUNCATE TABLE uc.batch_voucher_batched_voucher_batched_voucher_line_fund_codes"); Commit(); }
        public void TruncateBatchVoucherExports() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.batch_voucher_exports"); Commit(); }
        public void TruncateBatchVoucherExport2s() { Execute($"TRUNCATE TABLE uc.batch_voucher_exports"); Commit(); }
        public void TruncateBatchVoucherExportConfigs() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.batch_voucher_export_configs"); Commit(); }
        public void TruncateBatchVoucherExportConfig2s() { Execute($"TRUNCATE TABLE uc.batch_voucher_export_configs"); Commit(); }
        public void TruncateBatchVoucherExportConfigWeekdays() { Execute($"TRUNCATE TABLE uc.batch_voucher_export_config_weekdays"); Commit(); }
        public void TruncateBlocks() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.manualblocks"); Commit(); }
        public void TruncateBlock2s() { Execute($"TRUNCATE TABLE uc.blocks"); Commit(); }
        public void TruncateBlockConditions() { Execute($"TRUNCATE TABLE uchicago_mod_patron_blocks.patron_block_conditions"); Commit(); }
        public void TruncateBlockCondition2s() { Execute($"TRUNCATE TABLE uc.block_conditions"); Commit(); }
        public void TruncateBlockLimits() { Execute($"TRUNCATE TABLE uchicago_mod_patron_blocks.patron_block_limits"); Commit(); }
        public void TruncateBlockLimit2s() { Execute($"TRUNCATE TABLE uc.block_limits"); Commit(); }
        public void TruncateBoundWithParts() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.bound_with_part"); Commit(); }
        public void TruncateBoundWithPart2s() { Execute($"TRUNCATE TABLE uc.bound_with_parts"); Commit(); }
        public void TruncateBudgets() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.budget"); Commit(); }
        public void TruncateBudget2s() { Execute($"TRUNCATE TABLE uc.budgets"); Commit(); }
        public void TruncateBudgetAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.budget_acquisitions_units"); Commit(); }
        public void TruncateBudgetExpenseClasses() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.budget_expense_class"); Commit(); }
        public void TruncateBudgetExpenseClass2s() { Execute($"TRUNCATE TABLE uc.budget_expense_classes"); Commit(); }
        public void TruncateBudgetGroups() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.group_fund_fiscal_year"); Commit(); }
        public void TruncateBudgetGroup2s() { Execute($"TRUNCATE TABLE uc.budget_groups"); Commit(); }
        public void TruncateBudgetTags() { Execute($"TRUNCATE TABLE uc.budget_tags"); Commit(); }
        public void TruncateCallNumberTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.call_number_type"); Commit(); }
        public void TruncateCallNumberType2s() { Execute($"TRUNCATE TABLE uc.call_number_types"); Commit(); }
        public void TruncateCampuses() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.loccampus"); Commit(); }
        public void TruncateCampus2s() { Execute($"TRUNCATE TABLE uc.campuses"); Commit(); }
        public void TruncateCancellationReasons() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.cancellation_reason"); Commit(); }
        public void TruncateCancellationReason2s() { Execute($"TRUNCATE TABLE uc.cancellation_reasons"); Commit(); }
        public void TruncateCategories() { Execute($"TRUNCATE TABLE uchicago_mod_organizations_storage.categories"); Commit(); }
        public void TruncateCategory2s() { Execute($"TRUNCATE TABLE uc.categories"); Commit(); }
        public void TruncateCheckIns() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.check_in"); Commit(); }
        public void TruncateCheckIn2s() { Execute($"TRUNCATE TABLE uc.check_ins"); Commit(); }
        public void TruncateCirculationNotes() { Execute($"TRUNCATE TABLE uc.circulation_notes"); Commit(); }
        public void TruncateCirculationRules() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.circulation_rules"); Commit(); }
        public void TruncateCirculationRule2s() { Execute($"TRUNCATE TABLE uc.circulation_rules"); Commit(); }
        public void TruncateClassifications() { Execute($"TRUNCATE TABLE uc.classifications"); Commit(); }
        public void TruncateClassificationTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.classification_type"); Commit(); }
        public void TruncateClassificationType2s() { Execute($"TRUNCATE TABLE uc.classification_types"); Commit(); }
        public void TruncateCloseReasons() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.reasons_for_closure"); Commit(); }
        public void TruncateCloseReason2s() { Execute($"TRUNCATE TABLE uc.close_reasons"); Commit(); }
        public void TruncateComments() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.comments"); Commit(); }
        public void TruncateComment2s() { Execute($"TRUNCATE TABLE uc.comments"); Commit(); }
        public void TruncateConfigurations() { Execute($"TRUNCATE TABLE uchicago_mod_configuration.config_data"); Commit(); }
        public void TruncateConfiguration2s() { Execute($"TRUNCATE TABLE uc.configurations"); Commit(); }
        public void TruncateContacts() { Execute($"TRUNCATE TABLE uchicago_mod_organizations_storage.contacts"); Commit(); }
        public void TruncateContact2s() { Execute($"TRUNCATE TABLE uc.contacts"); Commit(); }
        public void TruncateContactAddresses() { Execute($"TRUNCATE TABLE uc.contact_addresses"); Commit(); }
        public void TruncateContactAddressCategories() { Execute($"TRUNCATE TABLE uc.contact_address_categories"); Commit(); }
        public void TruncateContactCategories() { Execute($"TRUNCATE TABLE uc.contact_categories"); Commit(); }
        public void TruncateContactEmails() { Execute($"TRUNCATE TABLE uc.contact_emails"); Commit(); }
        public void TruncateContactEmailCategories() { Execute($"TRUNCATE TABLE uc.contact_email_categories"); Commit(); }
        public void TruncateContactPhoneNumbers() { Execute($"TRUNCATE TABLE uc.contact_phone_numbers"); Commit(); }
        public void TruncateContactPhoneNumberCategories() { Execute($"TRUNCATE TABLE uc.contact_phone_number_categories"); Commit(); }
        public void TruncateContactTypes() { Execute($"TRUNCATE TABLE uc.contact_types"); Commit(); }
        public void TruncateContactUrls() { Execute($"TRUNCATE TABLE uc.contact_urls"); Commit(); }
        public void TruncateContactUrlCategories() { Execute($"TRUNCATE TABLE uc.contact_url_categories"); Commit(); }
        public void TruncateContributors() { Execute($"TRUNCATE TABLE uc.contributors"); Commit(); }
        public void TruncateContributorNameTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.contributor_name_type"); Commit(); }
        public void TruncateContributorNameType2s() { Execute($"TRUNCATE TABLE uc.contributor_name_types"); Commit(); }
        public void TruncateContributorTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.contributor_type"); Commit(); }
        public void TruncateContributorType2s() { Execute($"TRUNCATE TABLE uc.contributor_types"); Commit(); }
        public void TruncateCountries() { Execute($"TRUNCATE TABLE uc.countries"); Commit(); }
        public void TruncateCurrencies() { Execute($"TRUNCATE TABLE uc.currencies"); Commit(); }
        public void TruncateCustomFields() { Execute($"TRUNCATE TABLE uchicago_mod_users.custom_fields"); Commit(); }
        public void TruncateCustomField2s() { Execute($"TRUNCATE TABLE uc.custom_fields"); Commit(); }
        public void TruncateCustomFieldValues() { Execute($"TRUNCATE TABLE uc.custom_field_values"); Commit(); }
        public void TruncateDepartments() { Execute($"TRUNCATE TABLE uchicago_mod_users.departments"); Commit(); }
        public void TruncateDepartment2s() { Execute($"TRUNCATE TABLE uc.departments"); Commit(); }
        public void TruncateDocuments() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.documents"); Commit(); }
        public void TruncateDocument2s() { Execute($"TRUNCATE TABLE uc.documents"); Commit(); }
        public void TruncateEditions() { Execute($"TRUNCATE TABLE uc.editions"); Commit(); }
        public void TruncateElectronicAccesses() { Execute($"TRUNCATE TABLE uc.electronic_accesses"); Commit(); }
        public void TruncateElectronicAccessRelationships() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.electronic_access_relationship"); Commit(); }
        public void TruncateElectronicAccessRelationship2s() { Execute($"TRUNCATE TABLE uc.electronic_access_relationships"); Commit(); }
        public void TruncateErrorRecords() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_storage.error_records_lb"); Commit(); }
        public void TruncateErrorRecord2s() { Execute($"TRUNCATE TABLE uc.error_records"); Commit(); }
        public void TruncateEventLogs() { Execute($"TRUNCATE TABLE uchicago_mod_login.event_logs"); Commit(); }
        public void TruncateEventLog2s() { Execute($"TRUNCATE TABLE uc.event_logs"); Commit(); }
        public void TruncateExpenseClasses() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.expense_class"); Commit(); }
        public void TruncateExpenseClass2s() { Execute($"TRUNCATE TABLE uc.expense_classes"); Commit(); }
        public void TruncateExportConfigCredentials() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.export_config_credentials"); Commit(); }
        public void TruncateExportConfigCredential2s() { Execute($"TRUNCATE TABLE uc.export_config_credentials"); Commit(); }
        public void TruncateExtents() { Execute($"TRUNCATE TABLE uc.extents"); Commit(); }
        public void TruncateFees() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.accounts"); Commit(); }
        public void TruncateFee2s() { Execute($"TRUNCATE TABLE uc.fees"); Commit(); }
        public void TruncateFeeTypes() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.feefines"); Commit(); }
        public void TruncateFeeType2s() { Execute($"TRUNCATE TABLE uc.fee_types"); Commit(); }
        public void TruncateFinanceGroups() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.groups"); Commit(); }
        public void TruncateFinanceGroup2s() { Execute($"TRUNCATE TABLE uc.finance_groups"); Commit(); }
        public void TruncateFinanceGroupAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.finance_group_acquisitions_units"); Commit(); }
        public void TruncateFiscalYears() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.fiscal_year"); Commit(); }
        public void TruncateFiscalYear2s() { Execute($"TRUNCATE TABLE uc.fiscal_years"); Commit(); }
        public void TruncateFiscalYearAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.fiscal_year_acquisitions_units"); Commit(); }
        public void TruncateFixedDueDateSchedules() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.fixed_due_date_schedule"); Commit(); }
        public void TruncateFixedDueDateSchedule2s() { Execute($"TRUNCATE TABLE uc.fixed_due_date_schedules"); Commit(); }
        public void TruncateFixedDueDateScheduleSchedules() { Execute($"TRUNCATE TABLE uc.fixed_due_date_schedule_schedules"); Commit(); }
        public void TruncateFormats() { Execute($"TRUNCATE TABLE uc.formats"); Commit(); }
        public void TruncateFunds() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.fund"); Commit(); }
        public void TruncateFund2s() { Execute($"TRUNCATE TABLE uc.funds"); Commit(); }
        public void TruncateFundAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.fund_acquisitions_units"); Commit(); }
        public void TruncateFundTags() { Execute($"TRUNCATE TABLE uc.fund_tags"); Commit(); }
        public void TruncateFundTypes() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.fund_type"); Commit(); }
        public void TruncateFundType2s() { Execute($"TRUNCATE TABLE uc.fund_types"); Commit(); }
        public void TruncateGroups() { Execute($"TRUNCATE TABLE uchicago_mod_users.groups"); Commit(); }
        public void TruncateGroup2s() { Execute($"TRUNCATE TABLE uc.groups"); Commit(); }
        public void TruncateHoldings() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.holdings_record"); Commit(); }
        public void TruncateHolding2s() { Execute($"TRUNCATE TABLE uc.holdings"); Commit(); }
        public void TruncateHoldingDonors() { Execute($"TRUNCATE TABLE uc.holding_donors"); Commit(); }
        public void TruncateHoldingElectronicAccesses() { Execute($"TRUNCATE TABLE uc.holding_electronic_accesses"); Commit(); }
        public void TruncateHoldingEntries() { Execute($"TRUNCATE TABLE uc.holding_entries"); Commit(); }
        public void TruncateHoldingFormerIds() { Execute($"TRUNCATE TABLE uc.holding_former_ids"); Commit(); }
        public void TruncateHoldingNotes() { Execute($"TRUNCATE TABLE uc.holding_notes"); Commit(); }
        public void TruncateHoldingNoteTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.holdings_note_type"); Commit(); }
        public void TruncateHoldingNoteType2s() { Execute($"TRUNCATE TABLE uc.holding_note_types"); Commit(); }
        public void TruncateHoldingStatisticalCodes() { Execute($"TRUNCATE TABLE uc.holding_statistical_codes"); Commit(); }
        public void TruncateHoldingTags() { Execute($"TRUNCATE TABLE uc.holding_tags"); Commit(); }
        public void TruncateHoldingTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.holdings_type"); Commit(); }
        public void TruncateHoldingType2s() { Execute($"TRUNCATE TABLE uc.holding_types"); Commit(); }
        public void TruncateHridSettings() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.hrid_settings"); Commit(); }
        public void TruncateHridSetting2s() { Execute($"TRUNCATE TABLE uc.hrid_settings"); Commit(); }
        public void TruncateIdentifiers() { Execute($"TRUNCATE TABLE uc.identifiers"); Commit(); }
        public void TruncateIdTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.identifier_type"); Commit(); }
        public void TruncateIdType2s() { Execute($"TRUNCATE TABLE uc.id_types"); Commit(); }
        public void TruncateIllPolicies() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.ill_policy"); Commit(); }
        public void TruncateIllPolicy2s() { Execute($"TRUNCATE TABLE uc.ill_policies"); Commit(); }
        public void TruncateIndexStatements() { Execute($"TRUNCATE TABLE uc.index_statements"); Commit(); }
        public void TruncateInstances() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance"); Commit(); }
        public void TruncateInstance2s() { Execute($"TRUNCATE TABLE uc.instances"); Commit(); }
        public void TruncateInstanceFormats() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_format"); Commit(); }
        public void TruncateInstanceFormat2s() { Execute($"TRUNCATE TABLE uc.instance_formats"); Commit(); }
        public void TruncateInstanceNatureOfContentTerms() { Execute($"TRUNCATE TABLE uc.instance_nature_of_content_terms"); Commit(); }
        public void TruncateInstanceNoteTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_note_type"); Commit(); }
        public void TruncateInstanceNoteType2s() { Execute($"TRUNCATE TABLE uc.instance_note_types"); Commit(); }
        public void TruncateInstanceRelationships() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_relationship"); Commit(); }
        public void TruncateInstanceRelationshipTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_relationship_type"); Commit(); }
        public void TruncateInstanceSourceMarcs() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_source_marc"); Commit(); }
        public void TruncateInstanceStatisticalCodes() { Execute($"TRUNCATE TABLE uc.instance_statistical_codes"); Commit(); }
        public void TruncateInstanceStatuses() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_status"); Commit(); }
        public void TruncateInstanceTags() { Execute($"TRUNCATE TABLE uc.instance_tags"); Commit(); }
        public void TruncateInstanceTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.instance_type"); Commit(); }
        public void TruncateInstanceType2s() { Execute($"TRUNCATE TABLE uc.instance_types"); Commit(); }
        public void TruncateInstitutions() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.locinstitution"); Commit(); }
        public void TruncateInstitution2s() { Execute($"TRUNCATE TABLE uc.institutions"); Commit(); }
        public void TruncateInterfaces() { Execute($"TRUNCATE TABLE uchicago_mod_organizations_storage.interfaces"); Commit(); }
        public void TruncateInterface2s() { Execute($"TRUNCATE TABLE uc.interfaces"); Commit(); }
        public void TruncateInterfaceCredentials() { Execute($"TRUNCATE TABLE uchicago_mod_organizations_storage.interface_credentials"); Commit(); }
        public void TruncateInterfaceCredential2s() { Execute($"TRUNCATE TABLE uc.interface_credentials"); Commit(); }
        public void TruncateInterfaceTypes() { Execute($"TRUNCATE TABLE uc.interface_type"); Commit(); }
        public void TruncateInvoices() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.invoices"); Commit(); }
        public void TruncateInvoice2s() { Execute($"TRUNCATE TABLE uc.invoices"); Commit(); }
        public void TruncateInvoiceAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.invoice_acquisitions_units"); Commit(); }
        public void TruncateInvoiceAdjustments() { Execute($"TRUNCATE TABLE uc.invoice_adjustments"); Commit(); }
        public void TruncateInvoiceAdjustmentFunds() { Execute($"TRUNCATE TABLE uc.invoice_adjustment_fund_distributions"); Commit(); }
        public void TruncateInvoiceItems() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.invoice_lines"); Commit(); }
        public void TruncateInvoiceItem2s() { Execute($"TRUNCATE TABLE uc.invoice_items"); Commit(); }
        public void TruncateInvoiceItemAdjustments() { Execute($"TRUNCATE TABLE uc.invoice_item_adjustments"); Commit(); }
        public void TruncateInvoiceItemAdjustmentFunds() { Execute($"TRUNCATE TABLE uc.invoice_item_adjustment_fund_distributions"); Commit(); }
        public void TruncateInvoiceItemFunds() { Execute($"TRUNCATE TABLE uc.invoice_item_fund_distributions"); Commit(); }
        public void TruncateInvoiceItemReferenceNumbers() { Execute($"TRUNCATE TABLE uc.invoice_item_reference_numbers"); Commit(); }
        public void TruncateInvoiceItemTags() { Execute($"TRUNCATE TABLE uc.invoice_item_tags"); Commit(); }
        public void TruncateInvoiceOrderNumbers() { Execute($"TRUNCATE TABLE uc.invoice_order_numbers"); Commit(); }
        public void TruncateInvoiceStatuses() { Execute($"TRUNCATE TABLE uc.invoice_statuses"); Commit(); }
        public void TruncateInvoiceTags() { Execute($"TRUNCATE TABLE uc.invoice_tags"); Commit(); }
        public void TruncateInvoiceTransactionSummaries() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.invoice_transaction_summaries"); Commit(); }
        public void TruncateInvoiceTransactionSummary2s() { Execute($"TRUNCATE TABLE uc.invoice_transaction_summaries"); Commit(); }
        public void TruncateIsbns() { Execute($"TRUNCATE TABLE uc.isbns"); Commit(); }
        public void TruncateIssns() { Execute($"TRUNCATE TABLE uc.issns"); Commit(); }
        public void TruncateIssuanceModes() { Execute($"TRUNCATE TABLE uc.mode_of_issuances"); Commit(); }
        public void TruncateItems() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.item"); Commit(); }
        public void TruncateItem2s() { Execute($"TRUNCATE TABLE uc.items"); Commit(); }
        public void TruncateItemDamagedStatuses() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.item_damaged_status"); Commit(); }
        public void TruncateItemDamagedStatus2s() { Execute($"TRUNCATE TABLE uc.item_damaged_statuses"); Commit(); }
        public void TruncateItemDonors() { Execute($"TRUNCATE TABLE uc.item_donors"); Commit(); }
        public void TruncateItemElectronicAccesses() { Execute($"TRUNCATE TABLE uc.item_electronic_accesses"); Commit(); }
        public void TruncateItemFormerIds() { Execute($"TRUNCATE TABLE uc.item_former_ids"); Commit(); }
        public void TruncateItemNotes() { Execute($"TRUNCATE TABLE uc.item_notes"); Commit(); }
        public void TruncateItemNoteTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.item_note_type"); Commit(); }
        public void TruncateItemNoteType2s() { Execute($"TRUNCATE TABLE uc.item_note_types"); Commit(); }
        public void TruncateItemStatisticalCodes() { Execute($"TRUNCATE TABLE uc.item_statistical_codes"); Commit(); }
        public void TruncateItemStatuses() { Execute($"TRUNCATE TABLE uc.item_statuses"); Commit(); }
        public void TruncateItemTags() { Execute($"TRUNCATE TABLE uc.item_tags"); Commit(); }
        public void TruncateItemYearCaptions() { Execute($"TRUNCATE TABLE uc.item_year_caption"); Commit(); }
        public void TruncateJobExecutions() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.job_executions"); Commit(); }
        public void TruncateJobExecution2s() { Execute($"TRUNCATE TABLE uc.job_executions"); Commit(); }
        public void TruncateJobExecutionProgresses() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.job_execution_progress"); Commit(); }
        public void TruncateJobExecutionProgress2s() { Execute($"TRUNCATE TABLE uc.job_execution_progresses"); Commit(); }
        public void TruncateJobExecutionSourceChunks() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.job_execution_source_chunks"); Commit(); }
        public void TruncateJobExecutionSourceChunk2s() { Execute($"TRUNCATE TABLE uc.job_execution_source_chunks"); Commit(); }
        public void TruncateJobMonitorings() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.job_monitoring"); Commit(); }
        public void TruncateJobMonitoring2s() { Execute($"TRUNCATE TABLE uc.job_monitorings"); Commit(); }
        public void TruncateJournalRecords() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.journal_records"); Commit(); }
        public void TruncateJournalRecord2s() { Execute($"TRUNCATE TABLE uc.journal_records"); Commit(); }
        public void TruncateLanguages() { Execute($"TRUNCATE TABLE uc.languages"); Commit(); }
        public void TruncateLedgers() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.ledger"); Commit(); }
        public void TruncateLedger2s() { Execute($"TRUNCATE TABLE uc.ledgers"); Commit(); }
        public void TruncateLedgerAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.ledger_acquisitions_units"); Commit(); }
        public void TruncateLedgerRollovers() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.ledger_fiscal_year_rollover"); Commit(); }
        public void TruncateLedgerRollover2s() { Execute($"TRUNCATE TABLE uc.ledger_rollovers"); Commit(); }
        public void TruncateLedgerRolloverBudgetsRollovers() { Execute($"TRUNCATE TABLE uc.ledger_rollover_budgets_rollover"); Commit(); }
        public void TruncateLedgerRolloverEncumbrancesRollovers() { Execute($"TRUNCATE TABLE uc.ledger_rollover_encumbrances_rollover"); Commit(); }
        public void TruncateLedgerRolloverErrors() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.ledger_fiscal_year_rollover_error"); Commit(); }
        public void TruncateLedgerRolloverError2s() { Execute($"TRUNCATE TABLE uc.ledger_rollover_errors"); Commit(); }
        public void TruncateLedgerRolloverProgresses() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.ledger_fiscal_year_rollover_progress"); Commit(); }
        public void TruncateLedgerRolloverProgress2s() { Execute($"TRUNCATE TABLE uc.ledger_rollover_progresses"); Commit(); }
        public void TruncateLibraries() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.loclibrary"); Commit(); }
        public void TruncateLibrary2s() { Execute($"TRUNCATE TABLE uc.libraries"); Commit(); }
        public void TruncateLoans() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.loan"); Commit(); }
        public void TruncateLoan2s() { Execute($"TRUNCATE TABLE uc.loans"); Commit(); }
        public void TruncateLoanEvents() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.audit_loan"); Commit(); }
        public void TruncateLoanEvent2s() { Execute($"TRUNCATE TABLE uc.loan_events"); Commit(); }
        public void TruncateLoanPolicies() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.loan_policy"); Commit(); }
        public void TruncateLoanPolicy2s() { Execute($"TRUNCATE TABLE uc.loan_policies"); Commit(); }
        public void TruncateLoanTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.loan_type"); Commit(); }
        public void TruncateLoanType2s() { Execute($"TRUNCATE TABLE uc.loan_types"); Commit(); }
        public void TruncateLocations() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.location"); Commit(); }
        public void TruncateLocation2s() { Execute($"TRUNCATE TABLE uc.locations"); Commit(); }
        public void TruncateLocationServicePoints() { Execute($"TRUNCATE TABLE uc.location_service_points"); Commit(); }
        public void TruncateLocationSettings() { Execute($"TRUNCATE TABLE uc.location_settings"); Commit(); }
        public void TruncateLogins() { Execute($"TRUNCATE TABLE uchicago_mod_login.auth_credentials"); Commit(); }
        public void TruncateLogin2s() { Execute($"TRUNCATE TABLE uc.logins"); Commit(); }
        public void TruncateLostItemFeePolicies() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.lost_item_fee_policy"); Commit(); }
        public void TruncateLostItemFeePolicy2s() { Execute($"TRUNCATE TABLE uc.lost_item_fee_policies"); Commit(); }
        public void TruncateManualBlockTemplates() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.manual_block_templates"); Commit(); }
        public void TruncateManualBlockTemplate2s() { Execute($"TRUNCATE TABLE uc.manual_block_templates"); Commit(); }
        public void TruncateMappingParamsSnapshots() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.mapping_params_snapshots"); Commit(); }
        public void TruncateMappingRules() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.mapping_rules"); Commit(); }
        public void TruncateMappingRulesSnapshots() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_manager.mapping_rules_snapshots"); Commit(); }
        public void TruncateMarcRecords() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_storage.marc_records_lb"); Commit(); }
        public void TruncateMarcRecord2s() { Execute($"TRUNCATE TABLE uc.marc_records"); Commit(); }
        public void TruncateMaterialTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.material_type"); Commit(); }
        public void TruncateMaterialType2s() { Execute($"TRUNCATE TABLE uc.material_types"); Commit(); }
        public void TruncateModeOfIssuances() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.mode_of_issuance"); Commit(); }
        public void TruncateNatureOfContentTerms() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.nature_of_content_term"); Commit(); }
        public void TruncateNatureOfContentTerm2s() { Execute($"TRUNCATE TABLE uc.nature_of_content_terms"); Commit(); }
        public void TruncateNotes() { Execute($"TRUNCATE TABLE uchicago_mod_notes.note_data"); Commit(); }
        public void TruncateNote2s() { Execute($"TRUNCATE TABLE uc.notes"); Commit(); }
        public void TruncateNote3s() { Execute($"TRUNCATE TABLE uc.notes2"); Commit(); }
        public void TruncateNoteTypes() { Execute($"TRUNCATE TABLE uchicago_mod_notes.note_type"); Commit(); }
        public void TruncateNoteType2s() { Execute($"TRUNCATE TABLE uc.note_types"); Commit(); }
        public void TruncateObjectNotes() { Execute($"TRUNCATE TABLE uc.object_notes"); Commit(); }
        public void TruncateOclcNumbers() { Execute($"TRUNCATE TABLE uc.oclc_numbers"); Commit(); }
        public void TruncateOrders() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.purchase_order"); Commit(); }
        public void TruncateOrder2s() { Execute($"TRUNCATE TABLE uc.orders"); Commit(); }
        public void TruncateOrderAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.order_acquisitions_units"); Commit(); }
        public void TruncateOrderInvoices() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.order_invoice_relationship"); Commit(); }
        public void TruncateOrderInvoice2s() { Execute($"TRUNCATE TABLE uc.order_invoices"); Commit(); }
        public void TruncateOrderItems() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.po_line"); Commit(); }
        public void TruncateOrderItem2s() { Execute($"TRUNCATE TABLE uc.order_items"); Commit(); }
        public void TruncateOrderItemAlerts() { Execute($"TRUNCATE TABLE uc.order_item_alerts"); Commit(); }
        public void TruncateOrderItemClaims() { Execute($"TRUNCATE TABLE uc.order_item_claims"); Commit(); }
        public void TruncateOrderItemContributors() { Execute($"TRUNCATE TABLE uc.order_item_contributors"); Commit(); }
        public void TruncateOrderItemFunds() { Execute($"TRUNCATE TABLE uc.order_item_fund_distributions"); Commit(); }
        public void TruncateOrderItemLocation2s() { Execute($"TRUNCATE TABLE uc.order_item_locations"); Commit(); }
        public void TruncateOrderItemNotes() { Execute($"TRUNCATE TABLE uc.order_item_notes"); Commit(); }
        public void TruncateOrderItemProductIds() { Execute($"TRUNCATE TABLE uc.order_item_product_ids"); Commit(); }
        public void TruncateOrderItemReferenceNumbers() { Execute($"TRUNCATE TABLE uc.order_item_reference_numbers"); Commit(); }
        public void TruncateOrderItemReportingCodes() { Execute($"TRUNCATE TABLE uc.order_item_reporting_codes"); Commit(); }
        public void TruncateOrderItemTags() { Execute($"TRUNCATE TABLE uc.order_item_tags"); Commit(); }
        public void TruncateOrderItemVolumes() { Execute($"TRUNCATE TABLE uc.order_item_volumes"); Commit(); }
        public void TruncateOrderNotes() { Execute($"TRUNCATE TABLE uc.order_notes"); Commit(); }
        public void TruncateOrderStatuses() { Execute($"TRUNCATE TABLE uc.order_statuses"); Commit(); }
        public void TruncateOrderTags() { Execute($"TRUNCATE TABLE uc.order_tags"); Commit(); }
        public void TruncateOrderTemplates() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.order_templates"); Commit(); }
        public void TruncateOrderTemplate2s() { Execute($"TRUNCATE TABLE uc.order_templates"); Commit(); }
        public void TruncateOrderTransactionSummaries() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.order_transaction_summaries"); Commit(); }
        public void TruncateOrderTransactionSummary2s() { Execute($"TRUNCATE TABLE uc.order_transaction_summaries"); Commit(); }
        public void TruncateOrderTypes() { Execute($"TRUNCATE TABLE uc.order_types"); Commit(); }
        public void TruncateOrganizations() { Execute($"TRUNCATE TABLE uchicago_mod_organizations_storage.organizations"); Commit(); }
        public void TruncateOrganization2s() { Execute($"TRUNCATE TABLE uc.organizations"); Commit(); }
        public void TruncateOrganizationAccounts() { Execute($"TRUNCATE TABLE uc.organization_accounts"); Commit(); }
        public void TruncateOrganizationAccountAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.organization_account_acquisitions_units"); Commit(); }
        public void TruncateOrganizationAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.organization_acquisitions_units"); Commit(); }
        public void TruncateOrganizationAddresses() { Execute($"TRUNCATE TABLE uc.organization_addresses"); Commit(); }
        public void TruncateOrganizationAddressCategories() { Execute($"TRUNCATE TABLE uc.organization_address_categories"); Commit(); }
        public void TruncateOrganizationAgreements() { Execute($"TRUNCATE TABLE uc.organization_agreements"); Commit(); }
        public void TruncateOrganizationAliases() { Execute($"TRUNCATE TABLE uc.organization_aliases"); Commit(); }
        public void TruncateOrganizationChangelogs() { Execute($"TRUNCATE TABLE uc.organization_changelogs"); Commit(); }
        public void TruncateOrganizationContacts() { Execute($"TRUNCATE TABLE uc.organization_contacts"); Commit(); }
        public void TruncateOrganizationEmails() { Execute($"TRUNCATE TABLE uc.organization_emails"); Commit(); }
        public void TruncateOrganizationEmailCategories() { Execute($"TRUNCATE TABLE uc.organization_email_categories"); Commit(); }
        public void TruncateOrganizationInterfaces() { Execute($"TRUNCATE TABLE uc.organization_interfaces"); Commit(); }
        public void TruncateOrganizationNotes() { Execute($"TRUNCATE TABLE uc.organization_notes"); Commit(); }
        public void TruncateOrganizationPhoneNumbers() { Execute($"TRUNCATE TABLE uc.organization_phone_numbers"); Commit(); }
        public void TruncateOrganizationPhoneNumberCategories() { Execute($"TRUNCATE TABLE uc.organization_phone_number_categories"); Commit(); }
        public void TruncateOrganizationTags() { Execute($"TRUNCATE TABLE uc.organization_tags"); Commit(); }
        public void TruncateOrganizationUrls() { Execute($"TRUNCATE TABLE uc.organization_urls"); Commit(); }
        public void TruncateOrganizationUrlCategories() { Execute($"TRUNCATE TABLE uc.organization_url_categories"); Commit(); }
        public void TruncateOverdueFinePolicies() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.overdue_fine_policy"); Commit(); }
        public void TruncateOverdueFinePolicy2s() { Execute($"TRUNCATE TABLE uc.overdue_fine_policies"); Commit(); }
        public void TruncateOwners() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.owners"); Commit(); }
        public void TruncateOwner2s() { Execute($"TRUNCATE TABLE uc.owners"); Commit(); }
        public void TruncatePatronActionSessions() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.patron_action_session"); Commit(); }
        public void TruncatePatronActionSession2s() { Execute($"TRUNCATE TABLE uc.patron_action_sessions"); Commit(); }
        public void TruncatePatronNoticePolicies() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.patron_notice_policy"); Commit(); }
        public void TruncatePatronNoticePolicy2s() { Execute($"TRUNCATE TABLE uc.patron_notice_policies"); Commit(); }
        public void TruncatePatronNoticePolicyFeeFineNotices() { Execute($"TRUNCATE TABLE uc.patron_notice_policy_fee_fine_notices"); Commit(); }
        public void TruncatePatronNoticePolicyLoanNotices() { Execute($"TRUNCATE TABLE uc.patron_notice_policy_loan_notices"); Commit(); }
        public void TruncatePatronNoticePolicyRequestNotices() { Execute($"TRUNCATE TABLE uc.patron_notice_policy_request_notices"); Commit(); }
        public void TruncatePayments() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.feefineactions"); Commit(); }
        public void TruncatePayment2s() { Execute($"TRUNCATE TABLE uc.payments"); Commit(); }
        public void TruncatePaymentMethods() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.payments"); Commit(); }
        public void TruncatePaymentMethod2s() { Execute($"TRUNCATE TABLE uc.payment_methods"); Commit(); }
        public void TruncatePaymentTypes() { Execute($"TRUNCATE TABLE uc.payment_types"); Commit(); }
        public void TruncatePermissions() { Execute($"TRUNCATE TABLE uchicago_mod_permissions.permissions"); Commit(); }
        public void TruncatePermission2s() { Execute($"TRUNCATE TABLE uc.permissions"); Commit(); }
        public void TruncatePermissionChildOfs() { Execute($"TRUNCATE TABLE uc.permission_child_of"); Commit(); }
        public void TruncatePermissionGrantedTos() { Execute($"TRUNCATE TABLE uc.permission_granted_to"); Commit(); }
        public void TruncatePermissionSubPermissions() { Execute($"TRUNCATE TABLE uc.permission_sub_permissions"); Commit(); }
        public void TruncatePermissionsUsers() { Execute($"TRUNCATE TABLE uchicago_mod_permissions.permissions_users"); Commit(); }
        public void TruncatePermissionsUser2s() { Execute($"TRUNCATE TABLE uc.permissions_users"); Commit(); }
        public void TruncatePermissionsUserPermissions() { Execute($"TRUNCATE TABLE uc.permissions_user_permissions"); Commit(); }
        public void TruncatePermissionTags() { Execute($"TRUNCATE TABLE uc.permission_tags"); Commit(); }
        public void TruncatePhysicalDescriptions() { Execute($"TRUNCATE TABLE uc.physical_descriptions"); Commit(); }
        public void TruncatePrecedingSucceedingTitles() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.preceding_succeeding_title"); Commit(); }
        public void TruncatePrecedingSucceedingTitle2s() { Execute($"TRUNCATE TABLE uc.preceding_succeeding_titles"); Commit(); }
        public void TruncatePrecedingSucceedingTitleIdentifiers() { Execute($"TRUNCATE TABLE uc.preceding_succeeding_title_identifiers"); Commit(); }
        public void TruncatePrefixes() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.prefixes"); Commit(); }
        public void TruncatePrefix2s() { Execute($"TRUNCATE TABLE uc.prefixes"); Commit(); }
        public void TruncatePrinters() { Execute($"TRUNCATE TABLE uc.printers"); Commit(); }
        public void TruncateProxies() { Execute($"TRUNCATE TABLE uchicago_mod_users.proxyfor"); Commit(); }
        public void TruncateProxy2s() { Execute($"TRUNCATE TABLE uc.proxies"); Commit(); }
        public void TruncatePublications() { Execute($"TRUNCATE TABLE uc.publications"); Commit(); }
        public void TruncatePublicationFrequencies() { Execute($"TRUNCATE TABLE uc.publication_frequency"); Commit(); }
        public void TruncatePublicationRanges() { Execute($"TRUNCATE TABLE uc.publication_range"); Commit(); }
        public void TruncateRawRecords() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_storage.raw_records_lb"); Commit(); }
        public void TruncateRawRecord2s() { Execute($"TRUNCATE TABLE uc.raw_records"); Commit(); }
        public void TruncateReceiptStatuses() { Execute($"TRUNCATE TABLE uc.receipt_statuses"); Commit(); }
        public void TruncateReceivings() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.pieces"); Commit(); }
        public void TruncateReceiving2s() { Execute($"TRUNCATE TABLE uc.receivings"); Commit(); }
        public void TruncateRecords() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_storage.records_lb"); Commit(); }
        public void TruncateRecord2s() { Execute($"TRUNCATE TABLE uc.records"); Commit(); }
        public void TruncateRefundReasons() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.refunds"); Commit(); }
        public void TruncateRefundReason2s() { Execute($"TRUNCATE TABLE uc.refund_reasons"); Commit(); }
        public void TruncateRelationships() { Execute($"TRUNCATE TABLE uc.relationships"); Commit(); }
        public void TruncateRelationshipTypes() { Execute($"TRUNCATE TABLE uc.relationship_types"); Commit(); }
        public void TruncateReportingCodes() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.reporting_code"); Commit(); }
        public void TruncateReportingCode2s() { Execute($"TRUNCATE TABLE uc.reporting_codes"); Commit(); }
        public void TruncateRequests() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.request"); Commit(); }
        public void TruncateRequest2s() { Execute($"TRUNCATE TABLE uc.requests"); Commit(); }
        public void TruncateRequestIdentifiers() { Execute($"TRUNCATE TABLE uc.request_identifiers"); Commit(); }
        public void TruncateRequestNotes() { Execute($"TRUNCATE TABLE uc.request_notes"); Commit(); }
        public void TruncateRequestPolicies() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.request_policy"); Commit(); }
        public void TruncateRequestPolicy2s() { Execute($"TRUNCATE TABLE uc.request_policies"); Commit(); }
        public void TruncateRequestPolicyRequestTypes() { Execute($"TRUNCATE TABLE uc.request_policy_request_types"); Commit(); }
        public void TruncateRequestTags() { Execute($"TRUNCATE TABLE uc.request_tags"); Commit(); }
        public void TruncateScheduledNotices() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.scheduled_notice"); Commit(); }
        public void TruncateScheduledNotice2s() { Execute($"TRUNCATE TABLE uc.scheduled_notices"); Commit(); }
        public void TruncateSeries() { Execute($"TRUNCATE TABLE uc.series"); Commit(); }
        public void TruncateServicePoints() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.service_point"); Commit(); }
        public void TruncateServicePoint2s() { Execute($"TRUNCATE TABLE uc.service_points"); Commit(); }
        public void TruncateServicePointOwners() { Execute($"TRUNCATE TABLE uc.service_point_owners"); Commit(); }
        public void TruncateServicePointStaffSlips() { Execute($"TRUNCATE TABLE uc.service_point_staff_slips"); Commit(); }
        public void TruncateServicePointUsers() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.service_point_user"); Commit(); }
        public void TruncateServicePointUser2s() { Execute($"TRUNCATE TABLE uc.service_point_users"); Commit(); }
        public void TruncateServicePointUserServicePoints() { Execute($"TRUNCATE TABLE uc.service_point_user_service_points"); Commit(); }
        public void TruncateSettings() { Execute($"TRUNCATE TABLE uc.settings"); Commit(); }
        public void TruncateSnapshots() { Execute($"TRUNCATE TABLE uchicago_mod_source_record_storage.snapshots_lb"); Commit(); }
        public void TruncateSnapshot2s() { Execute($"TRUNCATE TABLE uc.snapshots"); Commit(); }
        public void TruncateSources() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.holdings_records_source"); Commit(); }
        public void TruncateSource2s() { Execute($"TRUNCATE TABLE uc.sources"); Commit(); }
        public void TruncateSourceMarcs() { Execute($"TRUNCATE TABLE uc.source_marcs"); Commit(); }
        public void TruncateSourceMarcFields() { Execute($"TRUNCATE TABLE uc.source_marc_fields"); Commit(); }
        public void TruncateStaffSlips() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.staff_slips"); Commit(); }
        public void TruncateStaffSlip2s() { Execute($"TRUNCATE TABLE uc.staff_slips"); Commit(); }
        public void TruncateStatisticalCodes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.statistical_code"); Commit(); }
        public void TruncateStatisticalCode2s() { Execute($"TRUNCATE TABLE uc.statistical_codes"); Commit(); }
        public void TruncateStatisticalCodeTypes() { Execute($"TRUNCATE TABLE uchicago_mod_inventory_storage.statistical_code_type"); Commit(); }
        public void TruncateStatisticalCodeType2s() { Execute($"TRUNCATE TABLE uc.statistical_code_types"); Commit(); }
        public void TruncateStatuses() { Execute($"TRUNCATE TABLE uc.statuses"); Commit(); }
        public void TruncateSubjects() { Execute($"TRUNCATE TABLE uc.subjects"); Commit(); }
        public void TruncateSuffixes() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.suffixes"); Commit(); }
        public void TruncateSuffix2s() { Execute($"TRUNCATE TABLE uc.suffixes"); Commit(); }
        public void TruncateSupplementStatements() { Execute($"TRUNCATE TABLE uc.supplement_statements"); Commit(); }
        public void TruncateTags() { Execute($"TRUNCATE TABLE uchicago_mod_tags.tags"); Commit(); }
        public void TruncateTag2s() { Execute($"TRUNCATE TABLE uc.tags"); Commit(); }
        public void TruncateTemplates() { Execute($"TRUNCATE TABLE uchicago_mod_template_engine.template"); Commit(); }
        public void TruncateTemplate2s() { Execute($"TRUNCATE TABLE uc.templates"); Commit(); }
        public void TruncateTemplateOutputFormats() { Execute($"TRUNCATE TABLE uc.template_output_formats"); Commit(); }
        public void TruncateTitles() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.titles"); Commit(); }
        public void TruncateTitle2s() { Execute($"TRUNCATE TABLE uc.titles"); Commit(); }
        public void TruncateTitleContributors() { Execute($"TRUNCATE TABLE uc.title_contributors"); Commit(); }
        public void TruncateTitleProductIds() { Execute($"TRUNCATE TABLE uc.title_product_ids"); Commit(); }
        public void TruncateTransactions() { Execute($"TRUNCATE TABLE uchicago_mod_finance_storage.transaction"); Commit(); }
        public void TruncateTransaction2s() { Execute($"TRUNCATE TABLE uc.transactions"); Commit(); }
        public void TruncateTransactionTags() { Execute($"TRUNCATE TABLE uc.transaction_tags"); Commit(); }
        public void TruncateTransferAccounts() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.transfers"); Commit(); }
        public void TruncateTransferAccount2s() { Execute($"TRUNCATE TABLE uc.transfer_accounts"); Commit(); }
        public void TruncateTransferCriterias() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.transfer_criteria"); Commit(); }
        public void TruncateTransferCriteria2s() { Execute($"TRUNCATE TABLE uc.transfer_criterias"); Commit(); }
        public void TruncateUsers() { Execute($"TRUNCATE TABLE uchicago_mod_users.users"); Commit(); }
        public void TruncateUser2s() { Execute($"TRUNCATE TABLE uc.users"); Commit(); }
        public void TruncateUserAcquisitionsUnits() { Execute($"TRUNCATE TABLE uchicago_mod_orders_storage.acquisitions_unit_membership"); Commit(); }
        public void TruncateUserAcquisitionsUnit2s() { Execute($"TRUNCATE TABLE uc.user_acquisitions_units"); Commit(); }
        public void TruncateUserAddresses() { Execute($"TRUNCATE TABLE uc.user_addresses"); Commit(); }
        public void TruncateUserDepartments() { Execute($"TRUNCATE TABLE uc.user_departments"); Commit(); }
        public void TruncateUserNotes() { Execute($"TRUNCATE TABLE uc.user_notes"); Commit(); }
        public void TruncateUserRequestPreferences() { Execute($"TRUNCATE TABLE uchicago_mod_circulation_storage.user_request_preference"); Commit(); }
        public void TruncateUserRequestPreference2s() { Execute($"TRUNCATE TABLE uc.user_request_preferences"); Commit(); }
        public void TruncateUserSummaries() { Execute($"TRUNCATE TABLE uchicago_mod_patron_blocks.user_summary"); Commit(); }
        public void TruncateUserSummary2s() { Execute($"TRUNCATE TABLE uc.user_summaries"); Commit(); }
        public void TruncateUserSummaryOpenFeesFines() { Execute($"TRUNCATE TABLE uc.user_summary_open_fees_fines"); Commit(); }
        public void TruncateUserSummaryOpenLoans() { Execute($"TRUNCATE TABLE uc.user_summary_open_loans"); Commit(); }
        public void TruncateUserTags() { Execute($"TRUNCATE TABLE uc.user_tags"); Commit(); }
        public void TruncateVouchers() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.vouchers"); Commit(); }
        public void TruncateVoucher2s() { Execute($"TRUNCATE TABLE uc.vouchers"); Commit(); }
        public void TruncateVoucherAcquisitionsUnits() { Execute($"TRUNCATE TABLE uc.voucher_acquisitions_units"); Commit(); }
        public void TruncateVoucherItems() { Execute($"TRUNCATE TABLE uchicago_mod_invoice_storage.voucher_lines"); Commit(); }
        public void TruncateVoucherItem2s() { Execute($"TRUNCATE TABLE uc.voucher_items"); Commit(); }
        public void TruncateVoucherItemFunds() { Execute($"TRUNCATE TABLE uc.voucher_item_fund_distributions"); Commit(); }
        public void TruncateVoucherItemInvoiceItems() { Execute($"TRUNCATE TABLE uc.voucher_item_invoice_items"); Commit(); }
        public void TruncateVoucherStatuses() { Execute($"TRUNCATE TABLE uc.voucher_statuses"); Commit(); }
        public void TruncateWaiveReasons() { Execute($"TRUNCATE TABLE uchicago_mod_feesfines.waives"); Commit(); }
        public void TruncateWaiveReason2s() { Execute($"TRUNCATE TABLE uc.waive_reasons"); Commit(); }
        public void Insert(AcquisitionsUnit acquisitionsUnit) => Execute("INSERT INTO uchicago_mod_orders_storage.acquisitions_unit (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", acquisitionsUnit);
        public void Insert(AddressType addressType) => Execute("INSERT INTO uchicago_mod_users.addresstype (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", addressType);
        public void Insert(Alert alert) => Execute("INSERT INTO uchicago_mod_orders_storage.alert (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", alert);
        public void Insert(AlternativeTitleType alternativeTitleType) => Execute("INSERT INTO uchicago_mod_inventory_storage.alternative_title_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", alternativeTitleType);
        public void Insert(AuthAttempt authAttempt) => Execute("INSERT INTO uchicago_mod_login.auth_attempts (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", authAttempt);
        public void Insert(AuthCredentialsHistory authCredentialsHistory) => Execute("INSERT INTO uchicago_mod_login.auth_credentials_history (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", authCredentialsHistory);
        public void Insert(AuthPasswordAction authPasswordAction) => Execute("INSERT INTO uchicago_mod_login.auth_password_action (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", authPasswordAction);
        public void Insert(BatchGroup batchGroup) => Execute("INSERT INTO uchicago_mod_invoice_storage.batch_groups (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", batchGroup);
        public void Insert(BatchVoucher batchVoucher) => Execute("INSERT INTO uchicago_mod_invoice_storage.batch_vouchers (id, jsonb) VALUES (@Id, @Content::jsonb)", batchVoucher);
        public void Insert(BatchVoucherExport batchVoucherExport) => Execute("INSERT INTO uchicago_mod_invoice_storage.batch_voucher_exports (id, jsonb, creation_date, created_by, batchgroupid, batchvoucherid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Batchgroupid, @Batchvoucherid)", batchVoucherExport);
        public void Insert(BatchVoucherExportConfig batchVoucherExportConfig) => Execute("INSERT INTO uchicago_mod_invoice_storage.batch_voucher_export_configs (id, jsonb, creation_date, created_by, batchgroupid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Batchgroupid)", batchVoucherExportConfig);
        public void Insert(Block block) => Execute("INSERT INTO uchicago_mod_feesfines.manualblocks (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", block);
        public void Insert(BlockCondition blockCondition) => Execute("INSERT INTO uchicago_mod_patron_blocks.patron_block_conditions (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", blockCondition);
        public void Insert(BlockLimit blockLimit) => Execute("INSERT INTO uchicago_mod_patron_blocks.patron_block_limits (id, jsonb, creation_date, created_by, conditionid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Conditionid)", blockLimit);
        public void Insert(BoundWithPart boundWithPart) => Execute("INSERT INTO uchicago_mod_inventory_storage.bound_with_part (id, jsonb, creation_date, created_by, itemid, holdingsrecordid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Itemid, @Holdingsrecordid)", boundWithPart);
        public void Insert(Budget budget) => Execute("INSERT INTO uchicago_mod_finance_storage.budget (id, jsonb, creation_date, created_by, fundid, fiscalyearid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @FundId, @FiscalYearId)", budget);
        public void Insert(BudgetExpenseClass budgetExpenseClass) => Execute("INSERT INTO uchicago_mod_finance_storage.budget_expense_class (id, jsonb, budgetid, expenseclassid) VALUES (@Id, @Content::jsonb, @Budgetid, @Expenseclassid)", budgetExpenseClass);
        public void Insert(BudgetGroup budgetGroup) => Execute("INSERT INTO uchicago_mod_finance_storage.group_fund_fiscal_year (id, jsonb, budgetid, groupid, fundid, fiscalyearid) VALUES (@Id, @Content::jsonb, @Budgetid, @Groupid, @Fundid, @Fiscalyearid)", budgetGroup);
        public void Insert(CallNumberType callNumberType) => Execute("INSERT INTO uchicago_mod_inventory_storage.call_number_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", callNumberType);
        public void Insert(Campus campus) => Execute("INSERT INTO uchicago_mod_inventory_storage.loccampus (id, jsonb, creation_date, created_by, institutionid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Institutionid)", campus);
        public void Insert(CancellationReason cancellationReason) => Execute("INSERT INTO uchicago_mod_circulation_storage.cancellation_reason (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", cancellationReason);
        public void Insert(Category category) => Execute("INSERT INTO uchicago_mod_organizations_storage.categories (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", category);
        public void Insert(CheckIn checkIn) => Execute("INSERT INTO uchicago_mod_circulation_storage.check_in (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", checkIn);
        public void Insert(CirculationRule circulationRule) => Execute("INSERT INTO uchicago_mod_circulation_storage.circulation_rules (id, jsonb, lock) VALUES (@Id, @Content::jsonb, @Lock)", circulationRule);
        public void Insert(ClassificationType classificationType) => Execute("INSERT INTO uchicago_mod_inventory_storage.classification_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", classificationType);
        public void Insert(CloseReason closeReason) => Execute("INSERT INTO uchicago_mod_orders_storage.reasons_for_closure (id, jsonb) VALUES (@Id, @Content::jsonb)", closeReason);
        public void Insert(Comment comment) => Execute("INSERT INTO uchicago_mod_feesfines.comments (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", comment);
        public void Insert(Configuration configuration) => Execute("INSERT INTO uchicago_mod_configuration.config_data (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", configuration);
        public void Insert(Contact contact) => Execute("INSERT INTO uchicago_mod_organizations_storage.contacts (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", contact);
        public void Insert(ContactType contactType) => Execute("INSERT INTO uc.contact_types (id, name) VALUES (@Id, @Name)", contactType);
        public void Insert(ContributorNameType contributorNameType) => Execute("INSERT INTO uchicago_mod_inventory_storage.contributor_name_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", contributorNameType);
        public void Insert(ContributorType contributorType) => Execute("INSERT INTO uchicago_mod_inventory_storage.contributor_type (id, jsonb) VALUES (@Id, @Content::jsonb)", contributorType);
        public void Insert(Country country) => Execute("INSERT INTO uc.countries (id, alpha2_code, alpha3_code, name) VALUES (@Id, @Alpha2Code, @Alpha3Code, @Name)", country);
        public void Insert(CustomField customField) => Execute("INSERT INTO uchicago_mod_users.custom_fields (id, jsonb) VALUES (@Id, @Content::jsonb)", customField);
        public void Insert(Department department) => Execute("INSERT INTO uchicago_mod_users.departments (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", department);
        public void Insert(Document document) => Execute("INSERT INTO uchicago_mod_invoice_storage.documents (id, jsonb, creation_date, created_by, invoiceid, document_data) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Invoiceid, @DocumentData)", document);
        public void Insert(ElectronicAccessRelationship electronicAccessRelationship) => Execute("INSERT INTO uchicago_mod_inventory_storage.electronic_access_relationship (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", electronicAccessRelationship);
        public void Insert(ErrorRecord errorRecord) => Execute("INSERT INTO uchicago_mod_source_record_storage.error_records_lb (id, content, description) VALUES (@Id, @Content, @Description)", errorRecord);
        public void Insert(EventLog eventLog) => Execute("INSERT INTO uchicago_mod_login.event_logs (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", eventLog);
        public void Insert(ExpenseClass expenseClass) => Execute("INSERT INTO uchicago_mod_finance_storage.expense_class (id, jsonb) VALUES (@Id, @Content::jsonb)", expenseClass);
        public void Insert(ExportConfigCredential exportConfigCredential) => Execute("INSERT INTO uchicago_mod_invoice_storage.export_config_credentials (id, jsonb, creation_date, created_by, exportconfigid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Exportconfigid)", exportConfigCredential);
        public void Insert(Fee fee) => Execute("INSERT INTO uchicago_mod_feesfines.accounts (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", fee);
        public void Insert(FeeType feeType) => Execute("INSERT INTO uchicago_mod_feesfines.feefines (id, jsonb, creation_date, created_by, ownerid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Ownerid)", feeType);
        public void Insert(FinanceGroup financeGroup) => Execute("INSERT INTO uchicago_mod_finance_storage.groups (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", financeGroup);
        public void Insert(FiscalYear fiscalYear) => Execute("INSERT INTO uchicago_mod_finance_storage.fiscal_year (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", fiscalYear);
        public void Insert(FixedDueDateSchedule fixedDueDateSchedule) => Execute("INSERT INTO uchicago_mod_circulation_storage.fixed_due_date_schedule (id, jsonb) VALUES (@Id, @Content::jsonb)", fixedDueDateSchedule);
        public void Insert(Fund fund) => Execute("INSERT INTO uchicago_mod_finance_storage.fund (id, jsonb, creation_date, created_by, ledgerid, fundtypeid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @LedgerId, @Fundtypeid)", fund);
        public void Insert(FundType fundType) => Execute("INSERT INTO uchicago_mod_finance_storage.fund_type (id, jsonb) VALUES (@Id, @Content::jsonb)", fundType);
        public void Insert(Group group) => Execute("INSERT INTO uchicago_mod_users.groups (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", group);
        public void Insert(Holding holding) => Execute("INSERT INTO uchicago_mod_inventory_storage.holdings_record (id, jsonb, creation_date, created_by, instanceid, permanentlocationid, temporarylocationid, effectivelocationid, holdingstypeid, callnumbertypeid, illpolicyid, sourceid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Instanceid, @Permanentlocationid, @Temporarylocationid, @Effectivelocationid, @Holdingstypeid, @Callnumbertypeid, @Illpolicyid, @Sourceid)", holding);
        public void Insert(HoldingNoteType holdingNoteType) => Execute("INSERT INTO uchicago_mod_inventory_storage.holdings_note_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", holdingNoteType);
        public void Insert(HoldingType holdingType) => Execute("INSERT INTO uchicago_mod_inventory_storage.holdings_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", holdingType);
        public void Insert(HridSetting hridSetting) => Execute("INSERT INTO uchicago_mod_inventory_storage.hrid_settings (id, jsonb, lock) VALUES (@Id, @Content::jsonb, @Lock)", hridSetting);
        public void Insert(IdType idType) => Execute("INSERT INTO uchicago_mod_inventory_storage.identifier_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", idType);
        public void Insert(IllPolicy illPolicy) => Execute("INSERT INTO uchicago_mod_inventory_storage.ill_policy (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", illPolicy);
        public void Insert(Instance instance) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance (id, jsonb, creation_date, created_by, instancestatusid, modeofissuanceid, instancetypeid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Instancestatusid, @Modeofissuanceid, @Instancetypeid)", instance);
        public void Insert(InstanceFormat instanceFormat) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_format (id, jsonb) VALUES (@Id, @Content::jsonb)", instanceFormat);
        public void Insert(InstanceNoteType instanceNoteType) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_note_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", instanceNoteType);
        public void Insert(InstanceRelationship instanceRelationship) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_relationship (id, jsonb, creation_date, created_by, superinstanceid, subinstanceid, instancerelationshiptypeid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Superinstanceid, @Subinstanceid, @Instancerelationshiptypeid)", instanceRelationship);
        public void Insert(InstanceRelationshipType instanceRelationshipType) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_relationship_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", instanceRelationshipType);
        public void Insert(InstanceSourceMarc instanceSourceMarc) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_source_marc (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", instanceSourceMarc);
        public void Insert(InstanceStatus instanceStatus) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_status (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", instanceStatus);
        public void Insert(InstanceType instanceType) => Execute("INSERT INTO uchicago_mod_inventory_storage.instance_type (id, jsonb) VALUES (@Id, @Content::jsonb)", instanceType);
        public void Insert(Institution institution) => Execute("INSERT INTO uchicago_mod_inventory_storage.locinstitution (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", institution);
        public void Insert(Interface @interface) => Execute("INSERT INTO uchicago_mod_organizations_storage.interfaces (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", @interface);
        public void Insert(InterfaceCredential interfaceCredential) => Execute("INSERT INTO uchicago_mod_organizations_storage.interface_credentials (id, jsonb, interfaceid) VALUES (@Id, @Content::jsonb, @Interfaceid)", interfaceCredential);
        public void Insert(Invoice invoice) => Execute("INSERT INTO uchicago_mod_invoice_storage.invoices (id, jsonb, creation_date, created_by, batchgroupid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Batchgroupid)", invoice);
        public void Insert(InvoiceItem invoiceItem) => Execute("INSERT INTO uchicago_mod_invoice_storage.invoice_lines (id, jsonb, creation_date, created_by, invoiceid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Invoiceid)", invoiceItem);
        public void Insert(InvoiceStatus invoiceStatus) => Execute("INSERT INTO uc.invoice_statuses (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", invoiceStatus);
        public void Insert(InvoiceTransactionSummary invoiceTransactionSummary) => Execute("INSERT INTO uchicago_mod_finance_storage.invoice_transaction_summaries (id, jsonb) VALUES (@Id, @Content::jsonb)", invoiceTransactionSummary);
        public void Insert(Item item) => Execute("INSERT INTO uchicago_mod_inventory_storage.item (id, jsonb, creation_date, created_by, holdingsrecordid, permanentloantypeid, temporaryloantypeid, materialtypeid, permanentlocationid, temporarylocationid, effectivelocationid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Holdingsrecordid, @Permanentloantypeid, @Temporaryloantypeid, @Materialtypeid, @Permanentlocationid, @Temporarylocationid, @Effectivelocationid)", item);
        public void Insert(ItemDamagedStatus itemDamagedStatus) => Execute("INSERT INTO uchicago_mod_inventory_storage.item_damaged_status (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", itemDamagedStatus);
        public void Insert(ItemNoteType itemNoteType) => Execute("INSERT INTO uchicago_mod_inventory_storage.item_note_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", itemNoteType);
        public void Insert(ItemStatus itemStatus) => Execute("INSERT INTO uc.item_statuses (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", itemStatus);
        public void Insert(JobExecution jobExecution) => Execute("INSERT INTO uchicago_mod_source_record_manager.job_executions (id, jsonb) VALUES (@Id, @Content::jsonb)", jobExecution);
        public void Insert(JobExecutionProgress jobExecutionProgress) => Execute("INSERT INTO uchicago_mod_source_record_manager.job_execution_progress (id, jsonb, jobexecutionid) VALUES (@Id, @Content::jsonb, @Jobexecutionid)", jobExecutionProgress);
        public void Insert(JobExecutionSourceChunk jobExecutionSourceChunk) => Execute("INSERT INTO uchicago_mod_source_record_manager.job_execution_source_chunks (id, jsonb, jobexecutionid) VALUES (@Id, @Content::jsonb, @Jobexecutionid)", jobExecutionSourceChunk);
        public void Insert(JobMonitoring jobMonitoring) => Execute("INSERT INTO uchicago_mod_source_record_manager.job_monitoring (id, job_execution_id, last_event_timestamp, notification_sent) VALUES (@Id, @JobExecutionId, @LastEventTimestamp, @NotificationSent)", jobMonitoring);
        public void Insert(JournalRecord journalRecord) => Execute("INSERT INTO uchicago_mod_source_record_manager.journal_records (id, job_execution_id, source_id, entity_type, entity_id, entity_hrid, action_type, action_status, action_date, source_record_order, error, title) VALUES (@Id, @JobExecutionId, @SourceId, @EntityType, @EntityId, @EntityHrid, @ActionType, @ActionStatus, @ActionDate, @SourceRecordOrder, @Error, @Title)", journalRecord);
        public void Insert(Ledger ledger) => Execute("INSERT INTO uchicago_mod_finance_storage.ledger (id, jsonb, creation_date, created_by, fiscalyearoneid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Fiscalyearoneid)", ledger);
        public void Insert(LedgerRollover ledgerRollover) => Execute("INSERT INTO uchicago_mod_finance_storage.ledger_fiscal_year_rollover (id, jsonb, creation_date, created_by, ledgerid, fromfiscalyearid, tofiscalyearid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Ledgerid, @Fromfiscalyearid, @Tofiscalyearid)", ledgerRollover);
        public void Insert(LedgerRolloverError ledgerRolloverError) => Execute("INSERT INTO uchicago_mod_finance_storage.ledger_fiscal_year_rollover_error (id, jsonb, creation_date, created_by, ledgerrolloverid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Ledgerrolloverid)", ledgerRolloverError);
        public void Insert(LedgerRolloverProgress ledgerRolloverProgress) => Execute("INSERT INTO uchicago_mod_finance_storage.ledger_fiscal_year_rollover_progress (id, jsonb, creation_date, created_by, ledgerrolloverid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Ledgerrolloverid)", ledgerRolloverProgress);
        public void Insert(Library library) => Execute("INSERT INTO uchicago_mod_inventory_storage.loclibrary (id, jsonb, creation_date, created_by, campusid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Campusid)", library);
        public void Insert(Loan loan) => Execute("INSERT INTO uchicago_mod_circulation_storage.loan (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", loan);
        public void Insert(LoanEvent loanEvent) => Execute("INSERT INTO uchicago_mod_circulation_storage.audit_loan (id, jsonb) VALUES (@Id, @Content::jsonb)", loanEvent);
        public void Insert(LoanPolicy loanPolicy) => Execute("INSERT INTO uchicago_mod_circulation_storage.loan_policy (id, jsonb, creation_date, created_by, loanspolicy_fixedduedatescheduleid, renewalspolicy_alternatefixedduedatescheduleid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @LoanspolicyFixedduedatescheduleid, @RenewalspolicyAlternatefixedduedatescheduleid)", loanPolicy);
        public void Insert(LoanType loanType) => Execute("INSERT INTO uchicago_mod_inventory_storage.loan_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", loanType);
        public void Insert(Location location) => Execute("INSERT INTO uchicago_mod_inventory_storage.location (id, jsonb, creation_date, created_by, institutionid, campusid, libraryid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Institutionid, @Campusid, @Libraryid)", location);
        public void Insert(Login login) => Execute("INSERT INTO uchicago_mod_login.auth_credentials (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", login);
        public void Insert(LostItemFeePolicy lostItemFeePolicy) => Execute("INSERT INTO uchicago_mod_feesfines.lost_item_fee_policy (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", lostItemFeePolicy);
        public void Insert(ManualBlockTemplate manualBlockTemplate) => Execute("INSERT INTO uchicago_mod_feesfines.manual_block_templates (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", manualBlockTemplate);
        public void Insert(MappingParamsSnapshot mappingParamsSnapshot) => Execute("INSERT INTO uchicago_mod_source_record_manager.mapping_params_snapshots (job_execution_id, params, saved_timestamp) VALUES (@Id, @Params::jsonb, @SavedTimestamp)", mappingParamsSnapshot);
        public void Insert(MappingRule mappingRule) => Execute("INSERT INTO uchicago_mod_source_record_manager.mapping_rules (id, jsonb, record_type) VALUES (@Id, @Content::jsonb, @RecordType)", mappingRule);
        public void Insert(MappingRulesSnapshot mappingRulesSnapshot) => Execute("INSERT INTO uchicago_mod_source_record_manager.mapping_rules_snapshots (job_execution_id, rules, saved_timestamp) VALUES (@Id, @Rules::jsonb, @SavedTimestamp)", mappingRulesSnapshot);
        public void Insert(MarcRecord marcRecord) => Execute("INSERT INTO uchicago_mod_source_record_storage.marc_records_lb (id, content) VALUES (@Id, @Content::jsonb)", marcRecord);
        public void Insert(MaterialType materialType) => Execute("INSERT INTO uchicago_mod_inventory_storage.material_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", materialType);
        public void Insert(ModeOfIssuance modeOfIssuance) => Execute("INSERT INTO uchicago_mod_inventory_storage.mode_of_issuance (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", modeOfIssuance);
        public void Insert(NatureOfContentTerm natureOfContentTerm) => Execute("INSERT INTO uchicago_mod_inventory_storage.nature_of_content_term (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", natureOfContentTerm);
        public void Insert(Note note) => Execute("INSERT INTO uchicago_mod_notes.note_data (id, jsonb, temporary_type_id, search_content) VALUES (@Id, @Content::jsonb, @TemporaryTypeId, @SearchContent)", note);
        public void Insert(NoteType noteType) => Execute("INSERT INTO uchicago_mod_notes.note_type (id, jsonb) VALUES (@Id, @Content::jsonb)", noteType);
        public void Insert(Order order) => Execute("INSERT INTO uchicago_mod_orders_storage.purchase_order (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", order);
        public void Insert(OrderInvoice orderInvoice) => Execute("INSERT INTO uchicago_mod_orders_storage.order_invoice_relationship (id, jsonb, purchaseorderid) VALUES (@Id, @Content::jsonb, @Purchaseorderid)", orderInvoice);
        public void Insert(OrderItem orderItem) => Execute("INSERT INTO uchicago_mod_orders_storage.po_line (id, jsonb, creation_date, created_by, purchaseorderid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Purchaseorderid)", orderItem);
        public void Insert(OrderStatus orderStatus) => Execute("INSERT INTO uc.order_statuses (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", orderStatus);
        public void Insert(OrderTemplate orderTemplate) => Execute("INSERT INTO uchicago_mod_orders_storage.order_templates (id, jsonb) VALUES (@Id, @Content::jsonb)", orderTemplate);
        public void Insert(OrderTransactionSummary orderTransactionSummary) => Execute("INSERT INTO uchicago_mod_finance_storage.order_transaction_summaries (id, jsonb) VALUES (@Id, @Content::jsonb)", orderTransactionSummary);
        public void Insert(OrderType orderType) => Execute("INSERT INTO uc.order_types (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", orderType);
        public void Insert(Organization organization) => Execute("INSERT INTO uchicago_mod_organizations_storage.organizations (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", organization);
        public void Insert(OverdueFinePolicy overdueFinePolicy) => Execute("INSERT INTO uchicago_mod_feesfines.overdue_fine_policy (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", overdueFinePolicy);
        public void Insert(Owner owner) => Execute("INSERT INTO uchicago_mod_feesfines.owners (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", owner);
        public void Insert(PatronActionSession patronActionSession) => Execute("INSERT INTO uchicago_mod_circulation_storage.patron_action_session (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", patronActionSession);
        public void Insert(PatronNoticePolicy patronNoticePolicy) => Execute("INSERT INTO uchicago_mod_circulation_storage.patron_notice_policy (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", patronNoticePolicy);
        public void Insert(Payment payment) => Execute("INSERT INTO uchicago_mod_feesfines.feefineactions (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", payment);
        public void Insert(PaymentMethod paymentMethod) => Execute("INSERT INTO uchicago_mod_feesfines.payments (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", paymentMethod);
        public void Insert(PaymentType paymentType) => Execute("INSERT INTO uc.payment_types (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", paymentType);
        public void Insert(Permission permission) => Execute("INSERT INTO uchicago_mod_permissions.permissions (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", permission);
        public void Insert(PermissionsUser permissionsUser) => Execute("INSERT INTO uchicago_mod_permissions.permissions_users (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", permissionsUser);
        public void Insert(PrecedingSucceedingTitle precedingSucceedingTitle) => Execute("INSERT INTO uchicago_mod_inventory_storage.preceding_succeeding_title (id, jsonb, creation_date, created_by, precedinginstanceid, succeedinginstanceid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Precedinginstanceid, @Succeedinginstanceid)", precedingSucceedingTitle);
        public void Insert(Prefix prefix) => Execute("INSERT INTO uchicago_mod_orders_storage.prefixes (id, jsonb) VALUES (@Id, @Content::jsonb)", prefix);
        public void Insert(Proxy proxy) => Execute("INSERT INTO uchicago_mod_users.proxyfor (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", proxy);
        public void Insert(RawRecord rawRecord) => Execute("INSERT INTO uchicago_mod_source_record_storage.raw_records_lb (id, content) VALUES (@Id, @Content)", rawRecord);
        public void Insert(ReceiptStatus receiptStatus) => Execute("INSERT INTO uc.receipt_statuses (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", receiptStatus);
        public void Insert(Receiving receiving) => Execute("INSERT INTO uchicago_mod_orders_storage.pieces (id, jsonb, creation_date, created_by, polineid, titleid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Polineid, @Titleid)", receiving);
        public void Insert(Record record) => Execute("INSERT INTO uchicago_mod_source_record_storage.records_lb (id, snapshot_id, matched_id, generation, record_type, external_id, state, leader_record_status, \"order\", suppress_discovery, created_by_user_id, created_date, updated_by_user_id, updated_date, external_hrid) VALUES (@Id, @SnapshotId, @MatchedId, @Generation, @RecordType, @InstanceId, @State, @LeaderRecordStatus, @Order, @SuppressDiscovery, @CreationUserId, @CreationTime, @LastWriteUserId, @LastWriteTime, @InstanceHrid)", record);
        public void Insert(RefundReason refundReason) => Execute("INSERT INTO uchicago_mod_feesfines.refunds (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", refundReason);
        public void Insert(ReportingCode reportingCode) => Execute("INSERT INTO uchicago_mod_orders_storage.reporting_code (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", reportingCode);
        public void Insert(Request request) => Execute("INSERT INTO uchicago_mod_circulation_storage.request (id, jsonb, creation_date, created_by, cancellationreasonid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Cancellationreasonid)", request);
        public void Insert(RequestPolicy requestPolicy) => Execute("INSERT INTO uchicago_mod_circulation_storage.request_policy (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", requestPolicy);
        public void Insert(ScheduledNotice scheduledNotice) => Execute("INSERT INTO uchicago_mod_circulation_storage.scheduled_notice (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", scheduledNotice);
        public void Insert(ServicePoint servicePoint) => Execute("INSERT INTO uchicago_mod_inventory_storage.service_point (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", servicePoint);
        public void Insert(ServicePointUser servicePointUser) => Execute("INSERT INTO uchicago_mod_inventory_storage.service_point_user (id, jsonb, creation_date, created_by, defaultservicepointid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Defaultservicepointid)", servicePointUser);
        public void Insert(Snapshot snapshot) => Execute("INSERT INTO uchicago_mod_source_record_storage.snapshots_lb (id, status, processing_started_date, created_by_user_id, created_date, updated_by_user_id, updated_date) VALUES (@Id, @Status, @ProcessingStartedDate, @CreationUserId, @CreationTime, @LastWriteUserId, @LastWriteTime)", snapshot);
        public void Insert(Source source) => Execute("INSERT INTO uchicago_mod_inventory_storage.holdings_records_source (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", source);
        public void Insert(StaffSlip staffSlip) => Execute("INSERT INTO uchicago_mod_circulation_storage.staff_slips (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", staffSlip);
        public void Insert(StatisticalCode statisticalCode) => Execute("INSERT INTO uchicago_mod_inventory_storage.statistical_code (id, jsonb, creation_date, created_by, statisticalcodetypeid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Statisticalcodetypeid)", statisticalCode);
        public void Insert(StatisticalCodeType statisticalCodeType) => Execute("INSERT INTO uchicago_mod_inventory_storage.statistical_code_type (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", statisticalCodeType);
        public void Insert(Suffix suffix) => Execute("INSERT INTO uchicago_mod_orders_storage.suffixes (id, jsonb) VALUES (@Id, @Content::jsonb)", suffix);
        public void Insert(Tag tag) => Execute("INSERT INTO uchicago_mod_tags.tags (id, created_by, label, description, created_date, updated_date, updated_by) VALUES (@Id, @CreationUserId, @Label, @Description, @CreationTime, @LastWriteTime, @UpdatedBy)", tag);
        public void Insert(Template template) => Execute("INSERT INTO uchicago_mod_template_engine.template (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", template);
        public void Insert(Title title) => Execute("INSERT INTO uchicago_mod_orders_storage.titles (id, jsonb, creation_date, created_by, polineid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Polineid)", title);
        public void Insert(Transaction transaction) => Execute("INSERT INTO uchicago_mod_finance_storage.transaction (id, jsonb, creation_date, created_by, fiscalyearid, fromfundid, sourcefiscalyearid, tofundid, expenseclassid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Fiscalyearid, @Fromfundid, @Sourcefiscalyearid, @Tofundid, @Expenseclassid)", transaction);
        public void Insert(TransferAccount transferAccount) => Execute("INSERT INTO uchicago_mod_feesfines.transfers (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", transferAccount);
        public void Insert(TransferCriteria transferCriteria) => Execute("INSERT INTO uchicago_mod_feesfines.transfer_criteria (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", transferCriteria);
        public void Insert(User user) => Execute("INSERT INTO uchicago_mod_users.users (id, jsonb, creation_date, created_by, patrongroup) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Patrongroup)", user);
        public void Insert(UserAcquisitionsUnit userAcquisitionsUnit) => Execute("INSERT INTO uchicago_mod_orders_storage.acquisitions_unit_membership (id, jsonb, creation_date, created_by, acquisitionsunitid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Acquisitionsunitid)", userAcquisitionsUnit);
        public void Insert(UserRequestPreference userRequestPreference) => Execute("INSERT INTO uchicago_mod_circulation_storage.user_request_preference (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", userRequestPreference);
        public void Insert(UserSummary userSummary) => Execute("INSERT INTO uchicago_mod_patron_blocks.user_summary (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", userSummary);
        public void Insert(Voucher voucher) => Execute("INSERT INTO uchicago_mod_invoice_storage.vouchers (id, jsonb, creation_date, created_by, invoiceid, batchgroupid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Invoiceid, @Batchgroupid)", voucher);
        public void Insert(VoucherItem voucherItem) => Execute("INSERT INTO uchicago_mod_invoice_storage.voucher_lines (id, jsonb, creation_date, created_by, voucherid) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId, @Voucherid)", voucherItem);
        public void Insert(VoucherStatus voucherStatus) => Execute("INSERT INTO uc.voucher_statuses (id, name, creation_time, creation_username, last_write_time, last_write_username) VALUES (@Id, @Name, @CreationTime, @CreationUsername, @LastWriteTime, @LastWriteUsername)", voucherStatus);
        public void Insert(WaiveReason waiveReason) => Execute("INSERT INTO uchicago_mod_feesfines.waives (id, jsonb, creation_date, created_by) VALUES (@Id, @Content::jsonb, @CreationTime, @CreationUserId)", waiveReason);

        public int Update(AcquisitionsUnit acquisitionsUnit, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.acquisitions_unit SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", acquisitionsUnit);
        public int Update(AddressType addressType, string where = null) => Execute($"UPDATE uchicago_mod_users.addresstype SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", addressType);
        public int Update(Alert alert, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.alert SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", alert);
        public int Update(AlternativeTitleType alternativeTitleType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.alternative_title_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", alternativeTitleType);
        public int Update(AuthAttempt authAttempt, string where = null) => Execute($"UPDATE uchicago_mod_login.auth_attempts SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", authAttempt);
        public int Update(AuthCredentialsHistory authCredentialsHistory, string where = null) => Execute($"UPDATE uchicago_mod_login.auth_credentials_history SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", authCredentialsHistory);
        public int Update(AuthPasswordAction authPasswordAction, string where = null) => Execute($"UPDATE uchicago_mod_login.auth_password_action SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", authPasswordAction);
        public int Update(BatchGroup batchGroup, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.batch_groups SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", batchGroup);
        public int Update(BatchVoucher batchVoucher, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.batch_vouchers SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", batchVoucher);
        public int Update(BatchVoucherExport batchVoucherExport, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.batch_voucher_exports SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, batchgroupid = @Batchgroupid, batchvoucherid = @Batchvoucherid WHERE {where ?? "id = @Id"}", batchVoucherExport);
        public int Update(BatchVoucherExportConfig batchVoucherExportConfig, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.batch_voucher_export_configs SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, batchgroupid = @Batchgroupid WHERE {where ?? "id = @Id"}", batchVoucherExportConfig);
        public int Update(Block block, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.manualblocks SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", block);
        public int Update(BlockCondition blockCondition, string where = null) => Execute($"UPDATE uchicago_mod_patron_blocks.patron_block_conditions SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", blockCondition);
        public int Update(BlockLimit blockLimit, string where = null) => Execute($"UPDATE uchicago_mod_patron_blocks.patron_block_limits SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, conditionid = @Conditionid WHERE {where ?? "id = @Id"}", blockLimit);
        public int Update(BoundWithPart boundWithPart, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.bound_with_part SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, itemid = @Itemid, holdingsrecordid = @Holdingsrecordid WHERE {where ?? "id = @Id"}", boundWithPart);
        public int Update(Budget budget, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.budget SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, fundid = @FundId, fiscalyearid = @FiscalYearId WHERE {where ?? "id = @Id"}", budget);
        public int Update(BudgetExpenseClass budgetExpenseClass, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.budget_expense_class SET jsonb = @Content::jsonb, budgetid = @Budgetid, expenseclassid = @Expenseclassid WHERE {where ?? "id = @Id"}", budgetExpenseClass);
        public int Update(BudgetGroup budgetGroup, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.group_fund_fiscal_year SET jsonb = @Content::jsonb, budgetid = @Budgetid, groupid = @Groupid, fundid = @Fundid, fiscalyearid = @Fiscalyearid WHERE {where ?? "id = @Id"}", budgetGroup);
        public int Update(CallNumberType callNumberType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.call_number_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", callNumberType);
        public int Update(Campus campus, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.loccampus SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, institutionid = @Institutionid WHERE {where ?? "id = @Id"}", campus);
        public int Update(CancellationReason cancellationReason, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.cancellation_reason SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", cancellationReason);
        public int Update(Category category, string where = null) => Execute($"UPDATE uchicago_mod_organizations_storage.categories SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", category);
        public int Update(CheckIn checkIn, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.check_in SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", checkIn);
        public int Update(CirculationRule circulationRule, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.circulation_rules SET jsonb = @Content::jsonb, lock = @Lock WHERE {where ?? "id = @Id"}", circulationRule);
        public int Update(ClassificationType classificationType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.classification_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", classificationType);
        public int Update(CloseReason closeReason, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.reasons_for_closure SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", closeReason);
        public int Update(Comment comment, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.comments SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", comment);
        public int Update(Configuration configuration, string where = null) => Execute($"UPDATE uchicago_mod_configuration.config_data SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", configuration);
        public int Update(Contact contact, string where = null) => Execute($"UPDATE uchicago_mod_organizations_storage.contacts SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", contact);
        public int Update(ContactType contactType, string where = null) => Execute($"UPDATE uc.contact_types SET name = @Name WHERE {where ?? "id = @Id"}", contactType);
        public int Update(ContributorNameType contributorNameType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.contributor_name_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", contributorNameType);
        public int Update(ContributorType contributorType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.contributor_type SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", contributorType);
        public int Update(Country country, string where = null) => Execute($"UPDATE uc.countries SET alpha2_code = @Alpha2Code, alpha3_code = @Alpha3Code, name = @Name WHERE {where ?? "id = @Id"}", country);
        public int Update(CustomField customField, string where = null) => Execute($"UPDATE uchicago_mod_users.custom_fields SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", customField);
        public int Update(Department department, string where = null) => Execute($"UPDATE uchicago_mod_users.departments SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", department);
        public int Update(Document document, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.documents SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, invoiceid = @Invoiceid, document_data = @DocumentData WHERE {where ?? "id = @Id"}", document);
        public int Update(ElectronicAccessRelationship electronicAccessRelationship, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.electronic_access_relationship SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", electronicAccessRelationship);
        public int Update(ErrorRecord errorRecord, string where = null) => Execute($"UPDATE uchicago_mod_source_record_storage.error_records_lb SET content = @Content, description = @Description WHERE {where ?? "id = @Id"}", errorRecord);
        public int Update(EventLog eventLog, string where = null) => Execute($"UPDATE uchicago_mod_login.event_logs SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", eventLog);
        public int Update(ExpenseClass expenseClass, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.expense_class SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", expenseClass);
        public int Update(ExportConfigCredential exportConfigCredential, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.export_config_credentials SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, exportconfigid = @Exportconfigid WHERE {where ?? "id = @Id"}", exportConfigCredential);
        public int Update(Fee fee, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.accounts SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", fee);
        public int Update(FeeType feeType, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.feefines SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, ownerid = @Ownerid WHERE {where ?? "id = @Id"}", feeType);
        public int Update(FinanceGroup financeGroup, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.groups SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", financeGroup);
        public int Update(FiscalYear fiscalYear, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.fiscal_year SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", fiscalYear);
        public int Update(FixedDueDateSchedule fixedDueDateSchedule, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.fixed_due_date_schedule SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", fixedDueDateSchedule);
        public int Update(Fund fund, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.fund SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, ledgerid = @LedgerId, fundtypeid = @Fundtypeid WHERE {where ?? "id = @Id"}", fund);
        public int Update(FundType fundType, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.fund_type SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", fundType);
        public int Update(Group group, string where = null) => Execute($"UPDATE uchicago_mod_users.groups SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", group);
        public int Update(Holding holding, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.holdings_record SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, instanceid = @Instanceid, permanentlocationid = @Permanentlocationid, temporarylocationid = @Temporarylocationid, effectivelocationid = @Effectivelocationid, holdingstypeid = @Holdingstypeid, callnumbertypeid = @Callnumbertypeid, illpolicyid = @Illpolicyid, sourceid = @Sourceid WHERE {where ?? "id = @Id"}", holding);
        public int Update(HoldingNoteType holdingNoteType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.holdings_note_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", holdingNoteType);
        public int Update(HoldingType holdingType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.holdings_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", holdingType);
        public int Update(HridSetting hridSetting, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.hrid_settings SET jsonb = @Content::jsonb, lock = @Lock WHERE {where ?? "id = @Id"}", hridSetting);
        public int Update(IdType idType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.identifier_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", idType);
        public int Update(IllPolicy illPolicy, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.ill_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", illPolicy);
        public int Update(Instance instance, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, instancestatusid = @Instancestatusid, modeofissuanceid = @Modeofissuanceid, instancetypeid = @Instancetypeid WHERE {where ?? "id = @Id"}", instance);
        public int Update(InstanceFormat instanceFormat, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_format SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", instanceFormat);
        public int Update(InstanceNoteType instanceNoteType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_note_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", instanceNoteType);
        public int Update(InstanceRelationship instanceRelationship, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_relationship SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, superinstanceid = @Superinstanceid, subinstanceid = @Subinstanceid, instancerelationshiptypeid = @Instancerelationshiptypeid WHERE {where ?? "id = @Id"}", instanceRelationship);
        public int Update(InstanceRelationshipType instanceRelationshipType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_relationship_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", instanceRelationshipType);
        public int Update(InstanceSourceMarc instanceSourceMarc, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_source_marc SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", instanceSourceMarc);
        public int Update(InstanceStatus instanceStatus, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_status SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", instanceStatus);
        public int Update(InstanceType instanceType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.instance_type SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", instanceType);
        public int Update(Institution institution, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.locinstitution SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", institution);
        public int Update(Interface @interface, string where = null) => Execute($"UPDATE uchicago_mod_organizations_storage.interfaces SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", @interface);
        public int Update(InterfaceCredential interfaceCredential, string where = null) => Execute($"UPDATE uchicago_mod_organizations_storage.interface_credentials SET jsonb = @Content::jsonb, interfaceid = @Interfaceid WHERE {where ?? "id = @Id"}", interfaceCredential);
        public int Update(Invoice invoice, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.invoices SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, batchgroupid = @Batchgroupid WHERE {where ?? "id = @Id"}", invoice);
        public int Update(InvoiceItem invoiceItem, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.invoice_lines SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, invoiceid = @Invoiceid WHERE {where ?? "id = @Id"}", invoiceItem);
        public int Update(InvoiceStatus invoiceStatus, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.invoice_statuses SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { invoiceStatus.Name, invoiceStatus.CreationTime, invoiceStatus.CreationUsername, invoiceStatus.LastWriteTime, invoiceStatus.LastWriteUsername, invoiceStatus.Id, _lastWriteTime = lastWriteTime });
        public int Update(InvoiceTransactionSummary invoiceTransactionSummary, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.invoice_transaction_summaries SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", invoiceTransactionSummary);
        public int Update(Item item, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.item SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, holdingsrecordid = @Holdingsrecordid, permanentloantypeid = @Permanentloantypeid, temporaryloantypeid = @Temporaryloantypeid, materialtypeid = @Materialtypeid, permanentlocationid = @Permanentlocationid, temporarylocationid = @Temporarylocationid, effectivelocationid = @Effectivelocationid WHERE {where ?? "id = @Id"}", item);
        public int Update(ItemDamagedStatus itemDamagedStatus, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.item_damaged_status SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", itemDamagedStatus);
        public int Update(ItemNoteType itemNoteType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.item_note_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", itemNoteType);
        public int Update(ItemStatus itemStatus, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.item_statuses SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { itemStatus.Name, itemStatus.CreationTime, itemStatus.CreationUsername, itemStatus.LastWriteTime, itemStatus.LastWriteUsername, itemStatus.Id, _lastWriteTime = lastWriteTime });
        public int Update(JobExecution jobExecution, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.job_executions SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", jobExecution);
        public int Update(JobExecutionProgress jobExecutionProgress, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.job_execution_progress SET jsonb = @Content::jsonb, jobexecutionid = @Jobexecutionid WHERE {where ?? "id = @Id"}", jobExecutionProgress);
        public int Update(JobExecutionSourceChunk jobExecutionSourceChunk, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.job_execution_source_chunks SET jsonb = @Content::jsonb, jobexecutionid = @Jobexecutionid WHERE {where ?? "id = @Id"}", jobExecutionSourceChunk);
        public int Update(JobMonitoring jobMonitoring, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.job_monitoring SET job_execution_id = @JobExecutionId, last_event_timestamp = @LastEventTimestamp, notification_sent = @NotificationSent WHERE {where ?? "id = @Id"}", jobMonitoring);
        public int Update(JournalRecord journalRecord, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.journal_records SET job_execution_id = @JobExecutionId, source_id = @SourceId, entity_type = @EntityType, entity_id = @EntityId, entity_hrid = @EntityHrid, action_type = @ActionType, action_status = @ActionStatus, action_date = @ActionDate, source_record_order = @SourceRecordOrder, error = @Error, title = @Title WHERE {where ?? "id = @Id"}", journalRecord);
        public int Update(Ledger ledger, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.ledger SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, fiscalyearoneid = @Fiscalyearoneid WHERE {where ?? "id = @Id"}", ledger);
        public int Update(LedgerRollover ledgerRollover, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.ledger_fiscal_year_rollover SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, ledgerid = @Ledgerid, fromfiscalyearid = @Fromfiscalyearid, tofiscalyearid = @Tofiscalyearid WHERE {where ?? "id = @Id"}", ledgerRollover);
        public int Update(LedgerRolloverError ledgerRolloverError, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.ledger_fiscal_year_rollover_error SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, ledgerrolloverid = @Ledgerrolloverid WHERE {where ?? "id = @Id"}", ledgerRolloverError);
        public int Update(LedgerRolloverProgress ledgerRolloverProgress, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.ledger_fiscal_year_rollover_progress SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, ledgerrolloverid = @Ledgerrolloverid WHERE {where ?? "id = @Id"}", ledgerRolloverProgress);
        public int Update(Library library, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.loclibrary SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, campusid = @Campusid WHERE {where ?? "id = @Id"}", library);
        public int Update(Loan loan, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.loan SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", loan);
        public int Update(LoanEvent loanEvent, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.audit_loan SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", loanEvent);
        public int Update(LoanPolicy loanPolicy, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.loan_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, loanspolicy_fixedduedatescheduleid = @LoanspolicyFixedduedatescheduleid, renewalspolicy_alternatefixedduedatescheduleid = @RenewalspolicyAlternatefixedduedatescheduleid WHERE {where ?? "id = @Id"}", loanPolicy);
        public int Update(LoanType loanType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.loan_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", loanType);
        public int Update(Location location, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.location SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, institutionid = @Institutionid, campusid = @Campusid, libraryid = @Libraryid WHERE {where ?? "id = @Id"}", location);
        public int Update(Login login, string where = null) => Execute($"UPDATE uchicago_mod_login.auth_credentials SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", login);
        public int Update(LostItemFeePolicy lostItemFeePolicy, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.lost_item_fee_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", lostItemFeePolicy);
        public int Update(ManualBlockTemplate manualBlockTemplate, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.manual_block_templates SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", manualBlockTemplate);
        public int Update(MappingParamsSnapshot mappingParamsSnapshot, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.mapping_params_snapshots SET params = @Params::jsonb, saved_timestamp = @SavedTimestamp WHERE {where ?? "job_execution_id = @Id"}", mappingParamsSnapshot);
        public int Update(MappingRule mappingRule, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.mapping_rules SET jsonb = @Content::jsonb, record_type = @RecordType WHERE {where ?? "id = @Id"}", mappingRule);
        public int Update(MappingRulesSnapshot mappingRulesSnapshot, string where = null) => Execute($"UPDATE uchicago_mod_source_record_manager.mapping_rules_snapshots SET rules = @Rules::jsonb, saved_timestamp = @SavedTimestamp WHERE {where ?? "job_execution_id = @Id"}", mappingRulesSnapshot);
        public int Update(MarcRecord marcRecord, string where = null) => Execute($"UPDATE uchicago_mod_source_record_storage.marc_records_lb SET content = @Content::jsonb WHERE {where ?? "id = @Id"}", marcRecord);
        public int Update(MaterialType materialType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.material_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", materialType);
        public int Update(ModeOfIssuance modeOfIssuance, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.mode_of_issuance SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", modeOfIssuance);
        public int Update(NatureOfContentTerm natureOfContentTerm, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.nature_of_content_term SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", natureOfContentTerm);
        public int Update(Note note, string where = null) => Execute($"UPDATE uchicago_mod_notes.note_data SET jsonb = @Content::jsonb, temporary_type_id = @TemporaryTypeId, search_content = @SearchContent WHERE {where ?? "id = @Id"}", note);
        public int Update(NoteType noteType, string where = null) => Execute($"UPDATE uchicago_mod_notes.note_type SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", noteType);
        public int Update(Order order, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.purchase_order SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", order);
        public int Update(OrderInvoice orderInvoice, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.order_invoice_relationship SET jsonb = @Content::jsonb, purchaseorderid = @Purchaseorderid WHERE {where ?? "id = @Id"}", orderInvoice);
        public int Update(OrderItem orderItem, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.po_line SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, purchaseorderid = @Purchaseorderid WHERE {where ?? "id = @Id"}", orderItem);
        public int Update(OrderStatus orderStatus, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.order_statuses SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { orderStatus.Name, orderStatus.CreationTime, orderStatus.CreationUsername, orderStatus.LastWriteTime, orderStatus.LastWriteUsername, orderStatus.Id, _lastWriteTime = lastWriteTime });
        public int Update(OrderTemplate orderTemplate, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.order_templates SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", orderTemplate);
        public int Update(OrderTransactionSummary orderTransactionSummary, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.order_transaction_summaries SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", orderTransactionSummary);
        public int Update(OrderType orderType, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.order_types SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { orderType.Name, orderType.CreationTime, orderType.CreationUsername, orderType.LastWriteTime, orderType.LastWriteUsername, orderType.Id, _lastWriteTime = lastWriteTime });
        public int Update(Organization organization, string where = null) => Execute($"UPDATE uchicago_mod_organizations_storage.organizations SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", organization);
        public int Update(OverdueFinePolicy overdueFinePolicy, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.overdue_fine_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", overdueFinePolicy);
        public int Update(Owner owner, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.owners SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", owner);
        public int Update(PatronActionSession patronActionSession, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.patron_action_session SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", patronActionSession);
        public int Update(PatronNoticePolicy patronNoticePolicy, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.patron_notice_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", patronNoticePolicy);
        public int Update(Payment payment, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.feefineactions SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", payment);
        public int Update(PaymentMethod paymentMethod, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.payments SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", paymentMethod);
        public int Update(PaymentType paymentType, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.payment_types SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { paymentType.Name, paymentType.CreationTime, paymentType.CreationUsername, paymentType.LastWriteTime, paymentType.LastWriteUsername, paymentType.Id, _lastWriteTime = lastWriteTime });
        public int Update(Permission permission, string where = null) => Execute($"UPDATE uchicago_mod_permissions.permissions SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", permission);
        public int Update(PermissionsUser permissionsUser, string where = null) => Execute($"UPDATE uchicago_mod_permissions.permissions_users SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", permissionsUser);
        public int Update(PrecedingSucceedingTitle precedingSucceedingTitle, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.preceding_succeeding_title SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, precedinginstanceid = @Precedinginstanceid, succeedinginstanceid = @Succeedinginstanceid WHERE {where ?? "id = @Id"}", precedingSucceedingTitle);
        public int Update(Prefix prefix, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.prefixes SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", prefix);
        public int Update(Proxy proxy, string where = null) => Execute($"UPDATE uchicago_mod_users.proxyfor SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", proxy);
        public int Update(RawRecord rawRecord, string where = null) => Execute($"UPDATE uchicago_mod_source_record_storage.raw_records_lb SET content = @Content WHERE {where ?? "id = @Id"}", rawRecord);
        public int Update(ReceiptStatus receiptStatus, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.receipt_statuses SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { receiptStatus.Name, receiptStatus.CreationTime, receiptStatus.CreationUsername, receiptStatus.LastWriteTime, receiptStatus.LastWriteUsername, receiptStatus.Id, _lastWriteTime = lastWriteTime });
        public int Update(Receiving receiving, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.pieces SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, polineid = @Polineid, titleid = @Titleid WHERE {where ?? "id = @Id"}", receiving);
        public int Update(Record record, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uchicago_mod_source_record_storage.records_lb SET snapshot_id = @SnapshotId, matched_id = @MatchedId, generation = @Generation, record_type = @RecordType, external_id = @InstanceId, state = @State, leader_record_status = @LeaderRecordStatus, \"order\" = @Order, suppress_discovery = @SuppressDiscovery, created_by_user_id = @CreationUserId, created_date = @CreationTime, updated_by_user_id = @LastWriteUserId, updated_date = @LastWriteTime, external_hrid = @InstanceHrid WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (updated_date IS NULL OR updated_date = @_lastWriteTime)" : "")}", new { record.SnapshotId, record.MatchedId, record.Generation, record.RecordType, record.InstanceId, record.State, record.LeaderRecordStatus, record.Order, record.SuppressDiscovery, record.CreationUserId, record.CreationTime, record.LastWriteUserId, record.LastWriteTime, record.InstanceHrid, record.Id, _lastWriteTime = lastWriteTime });
        public int Update(RefundReason refundReason, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.refunds SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", refundReason);
        public int Update(ReportingCode reportingCode, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.reporting_code SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", reportingCode);
        public int Update(Request request, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.request SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, cancellationreasonid = @Cancellationreasonid WHERE {where ?? "id = @Id"}", request);
        public int Update(RequestPolicy requestPolicy, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.request_policy SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", requestPolicy);
        public int Update(ScheduledNotice scheduledNotice, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.scheduled_notice SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", scheduledNotice);
        public int Update(ServicePoint servicePoint, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.service_point SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", servicePoint);
        public int Update(ServicePointUser servicePointUser, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.service_point_user SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, defaultservicepointid = @Defaultservicepointid WHERE {where ?? "id = @Id"}", servicePointUser);
        public int Update(Snapshot snapshot, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uchicago_mod_source_record_storage.snapshots_lb SET status = @Status, processing_started_date = @ProcessingStartedDate, created_by_user_id = @CreationUserId, created_date = @CreationTime, updated_by_user_id = @LastWriteUserId, updated_date = @LastWriteTime WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (updated_date IS NULL OR updated_date = @_lastWriteTime)" : "")}", new { snapshot.Status, snapshot.ProcessingStartedDate, snapshot.CreationUserId, snapshot.CreationTime, snapshot.LastWriteUserId, snapshot.LastWriteTime, snapshot.Id, _lastWriteTime = lastWriteTime });
        public int Update(Source source, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.holdings_records_source SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", source);
        public int Update(StaffSlip staffSlip, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.staff_slips SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", staffSlip);
        public int Update(StatisticalCode statisticalCode, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.statistical_code SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, statisticalcodetypeid = @Statisticalcodetypeid WHERE {where ?? "id = @Id"}", statisticalCode);
        public int Update(StatisticalCodeType statisticalCodeType, string where = null) => Execute($"UPDATE uchicago_mod_inventory_storage.statistical_code_type SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", statisticalCodeType);
        public int Update(Suffix suffix, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.suffixes SET jsonb = @Content::jsonb WHERE {where ?? "id = @Id"}", suffix);
        public int Update(Tag tag, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uchicago_mod_tags.tags SET created_by = @CreationUserId, label = @Label, description = @Description, created_date = @CreationTime, updated_date = @LastWriteTime, updated_by = @UpdatedBy WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (updated_date IS NULL OR updated_date = @_lastWriteTime)" : "")}", new { tag.CreationUserId, tag.Label, tag.Description, tag.CreationTime, tag.LastWriteTime, tag.UpdatedBy, tag.Id, _lastWriteTime = lastWriteTime });
        public int Update(Template template, string where = null) => Execute($"UPDATE uchicago_mod_template_engine.template SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", template);
        public int Update(Title title, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.titles SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, polineid = @Polineid WHERE {where ?? "id = @Id"}", title);
        public int Update(Transaction transaction, string where = null) => Execute($"UPDATE uchicago_mod_finance_storage.transaction SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, fiscalyearid = @Fiscalyearid, fromfundid = @Fromfundid, sourcefiscalyearid = @Sourcefiscalyearid, tofundid = @Tofundid, expenseclassid = @Expenseclassid WHERE {where ?? "id = @Id"}", transaction);
        public int Update(TransferAccount transferAccount, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.transfers SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", transferAccount);
        public int Update(TransferCriteria transferCriteria, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.transfer_criteria SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", transferCriteria);
        public int Update(User user, string where = null) => Execute($"UPDATE uchicago_mod_users.users SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, patrongroup = @Patrongroup WHERE {where ?? "id = @Id"}", user);
        public int Update(UserAcquisitionsUnit userAcquisitionsUnit, string where = null) => Execute($"UPDATE uchicago_mod_orders_storage.acquisitions_unit_membership SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, acquisitionsunitid = @Acquisitionsunitid WHERE {where ?? "id = @Id"}", userAcquisitionsUnit);
        public int Update(UserRequestPreference userRequestPreference, string where = null) => Execute($"UPDATE uchicago_mod_circulation_storage.user_request_preference SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", userRequestPreference);
        public int Update(UserSummary userSummary, string where = null) => Execute($"UPDATE uchicago_mod_patron_blocks.user_summary SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", userSummary);
        public int Update(Voucher voucher, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.vouchers SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, invoiceid = @Invoiceid, batchgroupid = @Batchgroupid WHERE {where ?? "id = @Id"}", voucher);
        public int Update(VoucherItem voucherItem, string where = null) => Execute($"UPDATE uchicago_mod_invoice_storage.voucher_lines SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId, voucherid = @Voucherid WHERE {where ?? "id = @Id"}", voucherItem);
        public int Update(VoucherStatus voucherStatus, DateTime? lastWriteTime = null, string where = null) => Execute($"UPDATE uc.voucher_statuses SET name = @Name, creation_time = @CreationTime, creation_username = @CreationUsername, last_write_time = @LastWriteTime, last_write_username = @LastWriteUsername WHERE {where ?? "id = @Id"}{(lastWriteTime != null ? " AND (last_write_time IS NULL OR last_write_time = @_lastWriteTime)" : "")}", new { voucherStatus.Name, voucherStatus.CreationTime, voucherStatus.CreationUsername, voucherStatus.LastWriteTime, voucherStatus.LastWriteUsername, voucherStatus.Id, _lastWriteTime = lastWriteTime });
        public int Update(WaiveReason waiveReason, string where = null) => Execute($"UPDATE uchicago_mod_feesfines.waives SET jsonb = @Content::jsonb, creation_date = @CreationTime, created_by = @CreationUserId WHERE {where ?? "id = @Id"}", waiveReason);

        public void UpdateOrInsert(AcquisitionsUnit acquisitionsUnit, string where = null)
        {
            if (acquisitionsUnit.Id == null || Update(acquisitionsUnit, where: where) != 1) Insert(acquisitionsUnit);
        }

        public void UpdateOrInsert(AddressType addressType, string where = null)
        {
            if (addressType.Id == null || Update(addressType, where: where) != 1) Insert(addressType);
        }

        public void UpdateOrInsert(Alert alert, string where = null)
        {
            if (alert.Id == null || Update(alert, where: where) != 1) Insert(alert);
        }

        public void UpdateOrInsert(AlternativeTitleType alternativeTitleType, string where = null)
        {
            if (alternativeTitleType.Id == null || Update(alternativeTitleType, where: where) != 1) Insert(alternativeTitleType);
        }

        public void UpdateOrInsert(AuthAttempt authAttempt, string where = null)
        {
            if (authAttempt.Id == null || Update(authAttempt, where: where) != 1) Insert(authAttempt);
        }

        public void UpdateOrInsert(AuthCredentialsHistory authCredentialsHistory, string where = null)
        {
            if (authCredentialsHistory.Id == null || Update(authCredentialsHistory, where: where) != 1) Insert(authCredentialsHistory);
        }

        public void UpdateOrInsert(AuthPasswordAction authPasswordAction, string where = null)
        {
            if (authPasswordAction.Id == null || Update(authPasswordAction, where: where) != 1) Insert(authPasswordAction);
        }

        public void UpdateOrInsert(BatchGroup batchGroup, string where = null)
        {
            if (batchGroup.Id == null || Update(batchGroup, where: where) != 1) Insert(batchGroup);
        }

        public void UpdateOrInsert(BatchVoucher batchVoucher, string where = null)
        {
            if (batchVoucher.Id == null || Update(batchVoucher, where: where) != 1) Insert(batchVoucher);
        }

        public void UpdateOrInsert(BatchVoucherExport batchVoucherExport, string where = null)
        {
            if (batchVoucherExport.Id == null || Update(batchVoucherExport, where: where) != 1) Insert(batchVoucherExport);
        }

        public void UpdateOrInsert(BatchVoucherExportConfig batchVoucherExportConfig, string where = null)
        {
            if (batchVoucherExportConfig.Id == null || Update(batchVoucherExportConfig, where: where) != 1) Insert(batchVoucherExportConfig);
        }

        public void UpdateOrInsert(Block block, string where = null)
        {
            if (block.Id == null || Update(block, where: where) != 1) Insert(block);
        }

        public void UpdateOrInsert(BlockCondition blockCondition, string where = null)
        {
            if (blockCondition.Id == null || Update(blockCondition, where: where) != 1) Insert(blockCondition);
        }

        public void UpdateOrInsert(BlockLimit blockLimit, string where = null)
        {
            if (blockLimit.Id == null || Update(blockLimit, where: where) != 1) Insert(blockLimit);
        }

        public void UpdateOrInsert(BoundWithPart boundWithPart, string where = null)
        {
            if (boundWithPart.Id == null || Update(boundWithPart, where: where) != 1) Insert(boundWithPart);
        }

        public void UpdateOrInsert(Budget budget, string where = null)
        {
            if (budget.Id == null || Update(budget, where: where) != 1) Insert(budget);
        }

        public void UpdateOrInsert(BudgetExpenseClass budgetExpenseClass, string where = null)
        {
            if (budgetExpenseClass.Id == null || Update(budgetExpenseClass, where: where) != 1) Insert(budgetExpenseClass);
        }

        public void UpdateOrInsert(BudgetGroup budgetGroup, string where = null)
        {
            if (budgetGroup.Id == null || Update(budgetGroup, where: where) != 1) Insert(budgetGroup);
        }

        public void UpdateOrInsert(CallNumberType callNumberType, string where = null)
        {
            if (callNumberType.Id == null || Update(callNumberType, where: where) != 1) Insert(callNumberType);
        }

        public void UpdateOrInsert(Campus campus, string where = null)
        {
            if (campus.Id == null || Update(campus, where: where) != 1) Insert(campus);
        }

        public void UpdateOrInsert(CancellationReason cancellationReason, string where = null)
        {
            if (cancellationReason.Id == null || Update(cancellationReason, where: where) != 1) Insert(cancellationReason);
        }

        public void UpdateOrInsert(Category category, string where = null)
        {
            if (category.Id == null || Update(category, where: where) != 1) Insert(category);
        }

        public void UpdateOrInsert(CheckIn checkIn, string where = null)
        {
            if (checkIn.Id == null || Update(checkIn, where: where) != 1) Insert(checkIn);
        }

        public void UpdateOrInsert(CirculationRule circulationRule, string where = null)
        {
            if (circulationRule.Id == null || Update(circulationRule, where: where) != 1) Insert(circulationRule);
        }

        public void UpdateOrInsert(ClassificationType classificationType, string where = null)
        {
            if (classificationType.Id == null || Update(classificationType, where: where) != 1) Insert(classificationType);
        }

        public void UpdateOrInsert(CloseReason closeReason, string where = null)
        {
            if (closeReason.Id == null || Update(closeReason, where: where) != 1) Insert(closeReason);
        }

        public void UpdateOrInsert(Comment comment, string where = null)
        {
            if (comment.Id == null || Update(comment, where: where) != 1) Insert(comment);
        }

        public void UpdateOrInsert(Configuration configuration, string where = null)
        {
            if (configuration.Id == null || Update(configuration, where: where) != 1) Insert(configuration);
        }

        public void UpdateOrInsert(Contact contact, string where = null)
        {
            if (contact.Id == null || Update(contact, where: where) != 1) Insert(contact);
        }

        public void UpdateOrInsert(ContactType contactType, string where = null)
        {
            if (contactType.Id == null || Update(contactType, where: where) != 1) Insert(contactType);
        }

        public void UpdateOrInsert(ContributorNameType contributorNameType, string where = null)
        {
            if (contributorNameType.Id == null || Update(contributorNameType, where: where) != 1) Insert(contributorNameType);
        }

        public void UpdateOrInsert(ContributorType contributorType, string where = null)
        {
            if (contributorType.Id == null || Update(contributorType, where: where) != 1) Insert(contributorType);
        }

        public void UpdateOrInsert(Country country, string where = null)
        {
            if (country.Id == null || Update(country, where: where) != 1) Insert(country);
        }

        public void UpdateOrInsert(CustomField customField, string where = null)
        {
            if (customField.Id == null || Update(customField, where: where) != 1) Insert(customField);
        }

        public void UpdateOrInsert(Department department, string where = null)
        {
            if (department.Id == null || Update(department, where: where) != 1) Insert(department);
        }

        public void UpdateOrInsert(Document document, string where = null)
        {
            if (document.Id == null || Update(document, where: where) != 1) Insert(document);
        }

        public void UpdateOrInsert(ElectronicAccessRelationship electronicAccessRelationship, string where = null)
        {
            if (electronicAccessRelationship.Id == null || Update(electronicAccessRelationship, where: where) != 1) Insert(electronicAccessRelationship);
        }

        public void UpdateOrInsert(ErrorRecord errorRecord, string where = null)
        {
            if (errorRecord.Id == null || Update(errorRecord, where: where) != 1) Insert(errorRecord);
        }

        public void UpdateOrInsert(EventLog eventLog, string where = null)
        {
            if (eventLog.Id == null || Update(eventLog, where: where) != 1) Insert(eventLog);
        }

        public void UpdateOrInsert(ExpenseClass expenseClass, string where = null)
        {
            if (expenseClass.Id == null || Update(expenseClass, where: where) != 1) Insert(expenseClass);
        }

        public void UpdateOrInsert(ExportConfigCredential exportConfigCredential, string where = null)
        {
            if (exportConfigCredential.Id == null || Update(exportConfigCredential, where: where) != 1) Insert(exportConfigCredential);
        }

        public void UpdateOrInsert(Fee fee, string where = null)
        {
            if (fee.Id == null || Update(fee, where: where) != 1) Insert(fee);
        }

        public void UpdateOrInsert(FeeType feeType, string where = null)
        {
            if (feeType.Id == null || Update(feeType, where: where) != 1) Insert(feeType);
        }

        public void UpdateOrInsert(FinanceGroup financeGroup, string where = null)
        {
            if (financeGroup.Id == null || Update(financeGroup, where: where) != 1) Insert(financeGroup);
        }

        public void UpdateOrInsert(FiscalYear fiscalYear, string where = null)
        {
            if (fiscalYear.Id == null || Update(fiscalYear, where: where) != 1) Insert(fiscalYear);
        }

        public void UpdateOrInsert(FixedDueDateSchedule fixedDueDateSchedule, string where = null)
        {
            if (fixedDueDateSchedule.Id == null || Update(fixedDueDateSchedule, where: where) != 1) Insert(fixedDueDateSchedule);
        }

        public void UpdateOrInsert(Fund fund, string where = null)
        {
            if (fund.Id == null || Update(fund, where: where) != 1) Insert(fund);
        }

        public void UpdateOrInsert(FundType fundType, string where = null)
        {
            if (fundType.Id == null || Update(fundType, where: where) != 1) Insert(fundType);
        }

        public void UpdateOrInsert(Group group, string where = null)
        {
            if (group.Id == null || Update(group, where: where) != 1) Insert(group);
        }

        public void UpdateOrInsert(Holding holding, string where = null)
        {
            if (holding.Id == null || Update(holding, where: where) != 1) Insert(holding);
        }

        public void UpdateOrInsert(HoldingNoteType holdingNoteType, string where = null)
        {
            if (holdingNoteType.Id == null || Update(holdingNoteType, where: where) != 1) Insert(holdingNoteType);
        }

        public void UpdateOrInsert(HoldingType holdingType, string where = null)
        {
            if (holdingType.Id == null || Update(holdingType, where: where) != 1) Insert(holdingType);
        }

        public void UpdateOrInsert(HridSetting hridSetting, string where = null)
        {
            if (hridSetting.Id == null || Update(hridSetting, where: where) != 1) Insert(hridSetting);
        }

        public void UpdateOrInsert(IdType idType, string where = null)
        {
            if (idType.Id == null || Update(idType, where: where) != 1) Insert(idType);
        }

        public void UpdateOrInsert(IllPolicy illPolicy, string where = null)
        {
            if (illPolicy.Id == null || Update(illPolicy, where: where) != 1) Insert(illPolicy);
        }

        public void UpdateOrInsert(Instance instance, string where = null)
        {
            if (instance.Id == null || Update(instance, where: where) != 1) Insert(instance);
        }

        public void UpdateOrInsert(InstanceFormat instanceFormat, string where = null)
        {
            if (instanceFormat.Id == null || Update(instanceFormat, where: where) != 1) Insert(instanceFormat);
        }

        public void UpdateOrInsert(InstanceNoteType instanceNoteType, string where = null)
        {
            if (instanceNoteType.Id == null || Update(instanceNoteType, where: where) != 1) Insert(instanceNoteType);
        }

        public void UpdateOrInsert(InstanceRelationship instanceRelationship, string where = null)
        {
            if (instanceRelationship.Id == null || Update(instanceRelationship, where: where) != 1) Insert(instanceRelationship);
        }

        public void UpdateOrInsert(InstanceRelationshipType instanceRelationshipType, string where = null)
        {
            if (instanceRelationshipType.Id == null || Update(instanceRelationshipType, where: where) != 1) Insert(instanceRelationshipType);
        }

        public void UpdateOrInsert(InstanceSourceMarc instanceSourceMarc, string where = null)
        {
            if (instanceSourceMarc.Id == null || Update(instanceSourceMarc, where: where) != 1) Insert(instanceSourceMarc);
        }

        public void UpdateOrInsert(InstanceStatus instanceStatus, string where = null)
        {
            if (instanceStatus.Id == null || Update(instanceStatus, where: where) != 1) Insert(instanceStatus);
        }

        public void UpdateOrInsert(InstanceType instanceType, string where = null)
        {
            if (instanceType.Id == null || Update(instanceType, where: where) != 1) Insert(instanceType);
        }

        public void UpdateOrInsert(Institution institution, string where = null)
        {
            if (institution.Id == null || Update(institution, where: where) != 1) Insert(institution);
        }

        public void UpdateOrInsert(Interface @interface, string where = null)
        {
            if (@interface.Id == null || Update(@interface, where: where) != 1) Insert(@interface);
        }

        public void UpdateOrInsert(InterfaceCredential interfaceCredential, string where = null)
        {
            if (interfaceCredential.Id == null || Update(interfaceCredential, where: where) != 1) Insert(interfaceCredential);
        }

        public void UpdateOrInsert(Invoice invoice, string where = null)
        {
            if (invoice.Id == null || Update(invoice, where: where) != 1) Insert(invoice);
        }

        public void UpdateOrInsert(InvoiceItem invoiceItem, string where = null)
        {
            if (invoiceItem.Id == null || Update(invoiceItem, where: where) != 1) Insert(invoiceItem);
        }

        public void UpdateOrInsert(InvoiceStatus invoiceStatus, string where = null)
        {
            if (invoiceStatus.Id == null || Update(invoiceStatus, where: where) != 1) Insert(invoiceStatus);
        }

        public void UpdateOrInsert(InvoiceTransactionSummary invoiceTransactionSummary, string where = null)
        {
            if (invoiceTransactionSummary.Id == null || Update(invoiceTransactionSummary, where: where) != 1) Insert(invoiceTransactionSummary);
        }

        public void UpdateOrInsert(Item item, string where = null)
        {
            if (item.Id == null || Update(item, where: where) != 1) Insert(item);
        }

        public void UpdateOrInsert(ItemDamagedStatus itemDamagedStatus, string where = null)
        {
            if (itemDamagedStatus.Id == null || Update(itemDamagedStatus, where: where) != 1) Insert(itemDamagedStatus);
        }

        public void UpdateOrInsert(ItemNoteType itemNoteType, string where = null)
        {
            if (itemNoteType.Id == null || Update(itemNoteType, where: where) != 1) Insert(itemNoteType);
        }

        public void UpdateOrInsert(ItemStatus itemStatus, string where = null)
        {
            if (itemStatus.Id == null || Update(itemStatus, where: where) != 1) Insert(itemStatus);
        }

        public void UpdateOrInsert(JobExecution jobExecution, string where = null)
        {
            if (jobExecution.Id == null || Update(jobExecution, where: where) != 1) Insert(jobExecution);
        }

        public void UpdateOrInsert(JobExecutionProgress jobExecutionProgress, string where = null)
        {
            if (jobExecutionProgress.Id == null || Update(jobExecutionProgress, where: where) != 1) Insert(jobExecutionProgress);
        }

        public void UpdateOrInsert(JobExecutionSourceChunk jobExecutionSourceChunk, string where = null)
        {
            if (jobExecutionSourceChunk.Id == null || Update(jobExecutionSourceChunk, where: where) != 1) Insert(jobExecutionSourceChunk);
        }

        public void UpdateOrInsert(JobMonitoring jobMonitoring, string where = null)
        {
            if (jobMonitoring.Id == null || Update(jobMonitoring, where: where) != 1) Insert(jobMonitoring);
        }

        public void UpdateOrInsert(JournalRecord journalRecord, string where = null)
        {
            if (journalRecord.Id == null || Update(journalRecord, where: where) != 1) Insert(journalRecord);
        }

        public void UpdateOrInsert(Ledger ledger, string where = null)
        {
            if (ledger.Id == null || Update(ledger, where: where) != 1) Insert(ledger);
        }

        public void UpdateOrInsert(LedgerRollover ledgerRollover, string where = null)
        {
            if (ledgerRollover.Id == null || Update(ledgerRollover, where: where) != 1) Insert(ledgerRollover);
        }

        public void UpdateOrInsert(LedgerRolloverError ledgerRolloverError, string where = null)
        {
            if (ledgerRolloverError.Id == null || Update(ledgerRolloverError, where: where) != 1) Insert(ledgerRolloverError);
        }

        public void UpdateOrInsert(LedgerRolloverProgress ledgerRolloverProgress, string where = null)
        {
            if (ledgerRolloverProgress.Id == null || Update(ledgerRolloverProgress, where: where) != 1) Insert(ledgerRolloverProgress);
        }

        public void UpdateOrInsert(Library library, string where = null)
        {
            if (library.Id == null || Update(library, where: where) != 1) Insert(library);
        }

        public void UpdateOrInsert(Loan loan, string where = null)
        {
            if (loan.Id == null || Update(loan, where: where) != 1) Insert(loan);
        }

        public void UpdateOrInsert(LoanEvent loanEvent, string where = null)
        {
            if (loanEvent.Id == null || Update(loanEvent, where: where) != 1) Insert(loanEvent);
        }

        public void UpdateOrInsert(LoanPolicy loanPolicy, string where = null)
        {
            if (loanPolicy.Id == null || Update(loanPolicy, where: where) != 1) Insert(loanPolicy);
        }

        public void UpdateOrInsert(LoanType loanType, string where = null)
        {
            if (loanType.Id == null || Update(loanType, where: where) != 1) Insert(loanType);
        }

        public void UpdateOrInsert(Location location, string where = null)
        {
            if (location.Id == null || Update(location, where: where) != 1) Insert(location);
        }

        public void UpdateOrInsert(Login login, string where = null)
        {
            if (login.Id == null || Update(login, where: where) != 1) Insert(login);
        }

        public void UpdateOrInsert(LostItemFeePolicy lostItemFeePolicy, string where = null)
        {
            if (lostItemFeePolicy.Id == null || Update(lostItemFeePolicy, where: where) != 1) Insert(lostItemFeePolicy);
        }

        public void UpdateOrInsert(ManualBlockTemplate manualBlockTemplate, string where = null)
        {
            if (manualBlockTemplate.Id == null || Update(manualBlockTemplate, where: where) != 1) Insert(manualBlockTemplate);
        }

        public void UpdateOrInsert(MappingParamsSnapshot mappingParamsSnapshot, string where = null)
        {
            if (mappingParamsSnapshot.Id == null || Update(mappingParamsSnapshot, where: where) != 1) Insert(mappingParamsSnapshot);
        }

        public void UpdateOrInsert(MappingRule mappingRule, string where = null)
        {
            if (mappingRule.Id == null || Update(mappingRule, where: where) != 1) Insert(mappingRule);
        }

        public void UpdateOrInsert(MappingRulesSnapshot mappingRulesSnapshot, string where = null)
        {
            if (mappingRulesSnapshot.Id == null || Update(mappingRulesSnapshot, where: where) != 1) Insert(mappingRulesSnapshot);
        }

        public void UpdateOrInsert(MarcRecord marcRecord, string where = null)
        {
            if (marcRecord.Id == null || Update(marcRecord, where: where) != 1) Insert(marcRecord);
        }

        public void UpdateOrInsert(MaterialType materialType, string where = null)
        {
            if (materialType.Id == null || Update(materialType, where: where) != 1) Insert(materialType);
        }

        public void UpdateOrInsert(ModeOfIssuance modeOfIssuance, string where = null)
        {
            if (modeOfIssuance.Id == null || Update(modeOfIssuance, where: where) != 1) Insert(modeOfIssuance);
        }

        public void UpdateOrInsert(NatureOfContentTerm natureOfContentTerm, string where = null)
        {
            if (natureOfContentTerm.Id == null || Update(natureOfContentTerm, where: where) != 1) Insert(natureOfContentTerm);
        }

        public void UpdateOrInsert(Note note, string where = null)
        {
            if (note.Id == null || Update(note, where: where) != 1) Insert(note);
        }

        public void UpdateOrInsert(NoteType noteType, string where = null)
        {
            if (noteType.Id == null || Update(noteType, where: where) != 1) Insert(noteType);
        }

        public void UpdateOrInsert(Order order, string where = null)
        {
            if (order.Id == null || Update(order, where: where) != 1) Insert(order);
        }

        public void UpdateOrInsert(OrderInvoice orderInvoice, string where = null)
        {
            if (orderInvoice.Id == null || Update(orderInvoice, where: where) != 1) Insert(orderInvoice);
        }

        public void UpdateOrInsert(OrderItem orderItem, string where = null)
        {
            if (orderItem.Id == null || Update(orderItem, where: where) != 1) Insert(orderItem);
        }

        public void UpdateOrInsert(OrderStatus orderStatus, string where = null)
        {
            if (orderStatus.Id == null || Update(orderStatus, where: where) != 1) Insert(orderStatus);
        }

        public void UpdateOrInsert(OrderTemplate orderTemplate, string where = null)
        {
            if (orderTemplate.Id == null || Update(orderTemplate, where: where) != 1) Insert(orderTemplate);
        }

        public void UpdateOrInsert(OrderTransactionSummary orderTransactionSummary, string where = null)
        {
            if (orderTransactionSummary.Id == null || Update(orderTransactionSummary, where: where) != 1) Insert(orderTransactionSummary);
        }

        public void UpdateOrInsert(OrderType orderType, string where = null)
        {
            if (orderType.Id == null || Update(orderType, where: where) != 1) Insert(orderType);
        }

        public void UpdateOrInsert(Organization organization, string where = null)
        {
            if (organization.Id == null || Update(organization, where: where) != 1) Insert(organization);
        }

        public void UpdateOrInsert(OverdueFinePolicy overdueFinePolicy, string where = null)
        {
            if (overdueFinePolicy.Id == null || Update(overdueFinePolicy, where: where) != 1) Insert(overdueFinePolicy);
        }

        public void UpdateOrInsert(Owner owner, string where = null)
        {
            if (owner.Id == null || Update(owner, where: where) != 1) Insert(owner);
        }

        public void UpdateOrInsert(PatronActionSession patronActionSession, string where = null)
        {
            if (patronActionSession.Id == null || Update(patronActionSession, where: where) != 1) Insert(patronActionSession);
        }

        public void UpdateOrInsert(PatronNoticePolicy patronNoticePolicy, string where = null)
        {
            if (patronNoticePolicy.Id == null || Update(patronNoticePolicy, where: where) != 1) Insert(patronNoticePolicy);
        }

        public void UpdateOrInsert(Payment payment, string where = null)
        {
            if (payment.Id == null || Update(payment, where: where) != 1) Insert(payment);
        }

        public void UpdateOrInsert(PaymentMethod paymentMethod, string where = null)
        {
            if (paymentMethod.Id == null || Update(paymentMethod, where: where) != 1) Insert(paymentMethod);
        }

        public void UpdateOrInsert(PaymentType paymentType, string where = null)
        {
            if (paymentType.Id == null || Update(paymentType, where: where) != 1) Insert(paymentType);
        }

        public void UpdateOrInsert(Permission permission, string where = null)
        {
            if (permission.Id == null || Update(permission, where: where) != 1) Insert(permission);
        }

        public void UpdateOrInsert(PermissionsUser permissionsUser, string where = null)
        {
            if (permissionsUser.Id == null || Update(permissionsUser, where: where) != 1) Insert(permissionsUser);
        }

        public void UpdateOrInsert(PrecedingSucceedingTitle precedingSucceedingTitle, string where = null)
        {
            if (precedingSucceedingTitle.Id == null || Update(precedingSucceedingTitle, where: where) != 1) Insert(precedingSucceedingTitle);
        }

        public void UpdateOrInsert(Prefix prefix, string where = null)
        {
            if (prefix.Id == null || Update(prefix, where: where) != 1) Insert(prefix);
        }

        public void UpdateOrInsert(Proxy proxy, string where = null)
        {
            if (proxy.Id == null || Update(proxy, where: where) != 1) Insert(proxy);
        }

        public void UpdateOrInsert(RawRecord rawRecord, string where = null)
        {
            if (rawRecord.Id == null || Update(rawRecord, where: where) != 1) Insert(rawRecord);
        }

        public void UpdateOrInsert(ReceiptStatus receiptStatus, string where = null)
        {
            if (receiptStatus.Id == null || Update(receiptStatus, where: where) != 1) Insert(receiptStatus);
        }

        public void UpdateOrInsert(Receiving receiving, string where = null)
        {
            if (receiving.Id == null || Update(receiving, where: where) != 1) Insert(receiving);
        }

        public void UpdateOrInsert(Record record, string where = null)
        {
            if (record.Id == null || Update(record, where: where) != 1) Insert(record);
        }

        public void UpdateOrInsert(RefundReason refundReason, string where = null)
        {
            if (refundReason.Id == null || Update(refundReason, where: where) != 1) Insert(refundReason);
        }

        public void UpdateOrInsert(ReportingCode reportingCode, string where = null)
        {
            if (reportingCode.Id == null || Update(reportingCode, where: where) != 1) Insert(reportingCode);
        }

        public void UpdateOrInsert(Request request, string where = null)
        {
            if (request.Id == null || Update(request, where: where) != 1) Insert(request);
        }

        public void UpdateOrInsert(RequestPolicy requestPolicy, string where = null)
        {
            if (requestPolicy.Id == null || Update(requestPolicy, where: where) != 1) Insert(requestPolicy);
        }

        public void UpdateOrInsert(ScheduledNotice scheduledNotice, string where = null)
        {
            if (scheduledNotice.Id == null || Update(scheduledNotice, where: where) != 1) Insert(scheduledNotice);
        }

        public void UpdateOrInsert(ServicePoint servicePoint, string where = null)
        {
            if (servicePoint.Id == null || Update(servicePoint, where: where) != 1) Insert(servicePoint);
        }

        public void UpdateOrInsert(ServicePointUser servicePointUser, string where = null)
        {
            if (servicePointUser.Id == null || Update(servicePointUser, where: where) != 1) Insert(servicePointUser);
        }

        public void UpdateOrInsert(Snapshot snapshot, string where = null)
        {
            if (snapshot.Id == null || Update(snapshot, where: where) != 1) Insert(snapshot);
        }

        public void UpdateOrInsert(Source source, string where = null)
        {
            if (source.Id == null || Update(source, where: where) != 1) Insert(source);
        }

        public void UpdateOrInsert(StaffSlip staffSlip, string where = null)
        {
            if (staffSlip.Id == null || Update(staffSlip, where: where) != 1) Insert(staffSlip);
        }

        public void UpdateOrInsert(StatisticalCode statisticalCode, string where = null)
        {
            if (statisticalCode.Id == null || Update(statisticalCode, where: where) != 1) Insert(statisticalCode);
        }

        public void UpdateOrInsert(StatisticalCodeType statisticalCodeType, string where = null)
        {
            if (statisticalCodeType.Id == null || Update(statisticalCodeType, where: where) != 1) Insert(statisticalCodeType);
        }

        public void UpdateOrInsert(Suffix suffix, string where = null)
        {
            if (suffix.Id == null || Update(suffix, where: where) != 1) Insert(suffix);
        }

        public void UpdateOrInsert(Tag tag, string where = null)
        {
            if (tag.Id == null || Update(tag, where: where) != 1) Insert(tag);
        }

        public void UpdateOrInsert(Template template, string where = null)
        {
            if (template.Id == null || Update(template, where: where) != 1) Insert(template);
        }

        public void UpdateOrInsert(Title title, string where = null)
        {
            if (title.Id == null || Update(title, where: where) != 1) Insert(title);
        }

        public void UpdateOrInsert(Transaction transaction, string where = null)
        {
            if (transaction.Id == null || Update(transaction, where: where) != 1) Insert(transaction);
        }

        public void UpdateOrInsert(TransferAccount transferAccount, string where = null)
        {
            if (transferAccount.Id == null || Update(transferAccount, where: where) != 1) Insert(transferAccount);
        }

        public void UpdateOrInsert(TransferCriteria transferCriteria, string where = null)
        {
            if (transferCriteria.Id == null || Update(transferCriteria, where: where) != 1) Insert(transferCriteria);
        }

        public void UpdateOrInsert(User user, string where = null)
        {
            if (user.Id == null || Update(user, where: where) != 1) Insert(user);
        }

        public void UpdateOrInsert(UserAcquisitionsUnit userAcquisitionsUnit, string where = null)
        {
            if (userAcquisitionsUnit.Id == null || Update(userAcquisitionsUnit, where: where) != 1) Insert(userAcquisitionsUnit);
        }

        public void UpdateOrInsert(UserRequestPreference userRequestPreference, string where = null)
        {
            if (userRequestPreference.Id == null || Update(userRequestPreference, where: where) != 1) Insert(userRequestPreference);
        }

        public void UpdateOrInsert(UserSummary userSummary, string where = null)
        {
            if (userSummary.Id == null || Update(userSummary, where: where) != 1) Insert(userSummary);
        }

        public void UpdateOrInsert(Voucher voucher, string where = null)
        {
            if (voucher.Id == null || Update(voucher, where: where) != 1) Insert(voucher);
        }

        public void UpdateOrInsert(VoucherItem voucherItem, string where = null)
        {
            if (voucherItem.Id == null || Update(voucherItem, where: where) != 1) Insert(voucherItem);
        }

        public void UpdateOrInsert(VoucherStatus voucherStatus, string where = null)
        {
            if (voucherStatus.Id == null || Update(voucherStatus, where: where) != 1) Insert(voucherStatus);
        }

        public void UpdateOrInsert(WaiveReason waiveReason, string where = null)
        {
            if (waiveReason.Id == null || Update(waiveReason, where: where) != 1) Insert(waiveReason);
        }

        public int DeleteAcquisitionsUnit(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit WHERE id = @id", new { id });
        public int DeleteAcquisitionsUnit2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}acquisitions_units WHERE id = @id", new { id });
        public int DeleteAddress(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}addresses WHERE id = @id", new { id });
        public int DeleteAddressType(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype WHERE id = @id", new { id });
        public int DeleteAddressType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}address_types WHERE id = @id", new { id });
        public int DeleteAlert(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert WHERE id = @id", new { id });
        public int DeleteAlert2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alerts WHERE id = @id", new { id });
        public int DeleteAllocatedFromFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds WHERE id = @id", new { id });
        public int DeleteAllocatedToFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds WHERE id = @id", new { id });
        public int DeleteAlternativeTitle(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alternative_titles WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteAlternativeTitleType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type WHERE id = @id", new { id });
        public int DeleteAlternativeTitleType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alternative_title_types WHERE id = @id", new { id });
        public int DeleteAuthAttempt(Guid? id) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts WHERE id = @id", new { id });
        public int DeleteAuthAttempt2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}auth_attempts WHERE id = @id", new { id });
        public int DeleteAuthCredentialsHistory(Guid? id) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history WHERE id = @id", new { id });
        public int DeleteAuthCredentialsHistory2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories WHERE id = @id", new { id });
        public int DeleteAuthPasswordAction(Guid? id) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action WHERE id = @id", new { id });
        public int DeleteBatchGroup(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups WHERE id = @id", new { id });
        public int DeleteBatchGroup2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_groups WHERE id = @id", new { id });
        public int DeleteBatchVoucher(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers WHERE id = @id", new { id });
        public int DeleteBatchVoucher2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_vouchers WHERE id = @id", new { id });
        public int DeleteBatchVoucherBatchedVoucher(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers WHERE id = @id", new { id });
        public int DeleteBatchVoucherBatchedVoucherBatchedVoucherLine(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines WHERE id = @id", new { id });
        public int DeleteBatchVoucherBatchedVoucherBatchedVoucherLineFundCode(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes WHERE id = @id", new { id });
        public int DeleteBatchVoucherExport(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports WHERE id = @id", new { id });
        public int DeleteBatchVoucherExport2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports WHERE id = @id", new { id });
        public int DeleteBatchVoucherExportConfig(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs WHERE id = @id", new { id });
        public int DeleteBatchVoucherExportConfig2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs WHERE id = @id", new { id });
        public int DeleteBatchVoucherExportConfigWeekday(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays WHERE id = @id", new { id });
        public int DeleteBlock(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks WHERE id = @id", new { id });
        public int DeleteBlock2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}blocks WHERE id = @id", new { id });
        public int DeleteBlockCondition(Guid? id) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions WHERE id = @id", new { id });
        public int DeleteBlockCondition2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}block_conditions WHERE id = @id", new { id });
        public int DeleteBlockLimit(Guid? id) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits WHERE id = @id", new { id });
        public int DeleteBlockLimit2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}block_limits WHERE id = @id", new { id });
        public int DeleteBoundWithPart(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part WHERE id = @id", new { id });
        public int DeleteBoundWithPart2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}bound_with_parts WHERE id = @id", new { id });
        public int DeleteBudget(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget WHERE id = @id", new { id });
        public int DeleteBudget2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budgets WHERE id = @id", new { id });
        public int DeleteBudgetAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units WHERE id = @id", new { id });
        public int DeleteBudgetExpenseClass(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class WHERE id = @id", new { id });
        public int DeleteBudgetExpenseClass2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes WHERE id = @id", new { id });
        public int DeleteBudgetGroup(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year WHERE id = @id", new { id });
        public int DeleteBudgetGroup2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_groups WHERE id = @id", new { id });
        public int DeleteBudgetTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_tags WHERE id = @id", new { id });
        public int DeleteCallNumberType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type WHERE id = @id", new { id });
        public int DeleteCallNumberType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}call_number_types WHERE id = @id", new { id });
        public int DeleteCampus(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus WHERE id = @id", new { id });
        public int DeleteCampus2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}campuses WHERE id = @id", new { id });
        public int DeleteCancellationReason(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason WHERE id = @id", new { id });
        public int DeleteCancellationReason2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons WHERE id = @id", new { id });
        public int DeleteCategory(Guid? id) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories WHERE id = @id", new { id });
        public int DeleteCategory2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}categories WHERE id = @id", new { id });
        public int DeleteCheckIn(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in WHERE id = @id", new { id });
        public int DeleteCheckIn2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}check_ins WHERE id = @id", new { id });
        public int DeleteCirculationNote(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}circulation_notes WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteCirculationRule(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules WHERE id = @id", new { id });
        public int DeleteCirculationRule2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}circulation_rules WHERE id = @id", new { id });
        public int DeleteClassification(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}classifications WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteClassificationType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type WHERE id = @id", new { id });
        public int DeleteClassificationType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}classification_types WHERE id = @id", new { id });
        public int DeleteCloseReason(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure WHERE id = @id", new { id });
        public int DeleteCloseReason2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}close_reasons WHERE id = @id", new { id });
        public int DeleteComment(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments WHERE id = @id", new { id });
        public int DeleteComment2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}comments WHERE id = @id", new { id });
        public int DeleteConfiguration(Guid? id) => Execute($"DELETE FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data WHERE id = @id", new { id });
        public int DeleteConfiguration2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}configurations WHERE id = @id", new { id });
        public int DeleteContact(Guid? id) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts WHERE id = @id", new { id });
        public int DeleteContact2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contacts WHERE id = @id", new { id });
        public int DeleteContactAddress(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_addresses WHERE id = @id", new { id });
        public int DeleteContactAddressCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_address_categories WHERE id = @id", new { id });
        public int DeleteContactCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_categories WHERE id = @id", new { id });
        public int DeleteContactEmail(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_emails WHERE id = @id", new { id });
        public int DeleteContactEmailCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_email_categories WHERE id = @id", new { id });
        public int DeleteContactPhoneNumber(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers WHERE id = @id", new { id });
        public int DeleteContactPhoneNumberCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories WHERE id = @id", new { id });
        public int DeleteContactType(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_types WHERE id = @id", new { id });
        public int DeleteContactUrl(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_urls WHERE id = @id", new { id });
        public int DeleteContactUrlCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_url_categories WHERE id = @id", new { id });
        public int DeleteContributor(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributors WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteContributorNameType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type WHERE id = @id", new { id });
        public int DeleteContributorNameType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributor_name_types WHERE id = @id", new { id });
        public int DeleteContributorType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type WHERE id = @id", new { id });
        public int DeleteContributorType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributor_types WHERE id = @id", new { id });
        public int DeleteCountry(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}countries WHERE id = @id", new { id });
        public int DeleteCurrency(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}currencies WHERE id = @id", new { id });
        public int DeleteCustomField(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields WHERE id = @id", new { id });
        public int DeleteCustomField2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}custom_fields WHERE id = @id", new { id });
        public int DeleteCustomFieldValue(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}custom_field_values WHERE id = @id", new { id });
        public int DeleteDepartment(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments WHERE id = @id", new { id });
        public int DeleteDepartment2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}departments WHERE id = @id", new { id });
        public int DeleteDocument(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents WHERE id = @id", new { id });
        public int DeleteDocument2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}documents WHERE id = @id", new { id });
        public int DeleteEdition(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}editions WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteElectronicAccess(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}electronic_accesses WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteElectronicAccessRelationship(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship WHERE id = @id", new { id });
        public int DeleteElectronicAccessRelationship2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships WHERE id = @id", new { id });
        public int DeleteErrorRecord(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb WHERE id = @id", new { id });
        public int DeleteErrorRecord2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}error_records WHERE id = @id", new { id });
        public int DeleteEventLog(Guid? id) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs WHERE id = @id", new { id });
        public int DeleteEventLog2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}event_logs WHERE id = @id", new { id });
        public int DeleteExpenseClass(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class WHERE id = @id", new { id });
        public int DeleteExpenseClass2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}expense_classes WHERE id = @id", new { id });
        public int DeleteExportConfigCredential(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials WHERE id = @id", new { id });
        public int DeleteExportConfigCredential2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}export_config_credentials WHERE id = @id", new { id });
        public int DeleteExtent(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}extents WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteFee(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts WHERE id = @id", new { id });
        public int DeleteFee2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fees WHERE id = @id", new { id });
        public int DeleteFeeType(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines WHERE id = @id", new { id });
        public int DeleteFeeType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fee_types WHERE id = @id", new { id });
        public int DeleteFinanceGroup(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id });
        public int DeleteFinanceGroup2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}finance_groups WHERE id = @id", new { id });
        public int DeleteFinanceGroupAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units WHERE id = @id", new { id });
        public int DeleteFiscalYear(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year WHERE id = @id", new { id });
        public int DeleteFiscalYear2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fiscal_years WHERE id = @id", new { id });
        public int DeleteFiscalYearAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units WHERE id = @id", new { id });
        public int DeleteFixedDueDateSchedule(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule WHERE id = @id", new { id });
        public int DeleteFixedDueDateSchedule2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules WHERE id = @id", new { id });
        public int DeleteFixedDueDateScheduleSchedule(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules WHERE id = @id", new { id });
        public int DeleteFormat(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}formats WHERE id = @id", new { id });
        public int DeleteFund(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund WHERE id = @id", new { id });
        public int DeleteFund2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}funds WHERE id = @id", new { id });
        public int DeleteFundAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units WHERE id = @id", new { id });
        public int DeleteFundTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_tags WHERE id = @id", new { id });
        public int DeleteFundType(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type WHERE id = @id", new { id });
        public int DeleteFundType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_types WHERE id = @id", new { id });
        public int DeleteGroup(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id });
        public int DeleteGroup2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}groups WHERE id = @id", new { id });
        public int DeleteHolding(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record WHERE id = @id", new { id });
        public int DeleteHolding2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holdings WHERE id = @id", new { id });
        public int DeleteHoldingDonor(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_donors WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingElectronicAccess(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingEntry(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_entries WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingFormerId(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_former_ids WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingNote(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_notes WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingNoteType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type WHERE id = @id", new { id });
        public int DeleteHoldingNoteType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_note_types WHERE id = @id", new { id });
        public int DeleteHoldingStatisticalCode(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingTag(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_tags WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteHoldingType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type WHERE id = @id", new { id });
        public int DeleteHoldingType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_types WHERE id = @id", new { id });
        public int DeleteHridSetting(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings WHERE id = @id", new { id });
        public int DeleteHridSetting2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}hrid_settings WHERE id = @id", new { id });
        public int DeleteIdentifier(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}identifiers WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteIdType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type WHERE id = @id", new { id });
        public int DeleteIdType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}id_types WHERE id = @id", new { id });
        public int DeleteIllPolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy WHERE id = @id", new { id });
        public int DeleteIllPolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ill_policies WHERE id = @id", new { id });
        public int DeleteIndexStatement(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}index_statements WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteInstance(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance WHERE id = @id", new { id });
        public int DeleteInstance2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instances WHERE id = @id", new { id });
        public int DeleteInstanceFormat(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format WHERE id = @id", new { id });
        public int DeleteInstanceFormat2(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_formats WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteInstanceNatureOfContentTerm(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteInstanceNoteType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type WHERE id = @id", new { id });
        public int DeleteInstanceNoteType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_note_types WHERE id = @id", new { id });
        public int DeleteInstanceRelationship(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship WHERE id = @id", new { id });
        public int DeleteInstanceRelationshipType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type WHERE id = @id", new { id });
        public int DeleteInstanceSourceMarc(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc WHERE id = @id", new { id });
        public int DeleteInstanceStatisticalCode(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteInstanceStatus(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status WHERE id = @id", new { id });
        public int DeleteInstanceTag(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_tags WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteInstanceType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type WHERE id = @id", new { id });
        public int DeleteInstanceType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_types WHERE id = @id", new { id });
        public int DeleteInstitution(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution WHERE id = @id", new { id });
        public int DeleteInstitution2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}institutions WHERE id = @id", new { id });
        public int DeleteInterface(Guid? id) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces WHERE id = @id", new { id });
        public int DeleteInterface2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interfaces WHERE id = @id", new { id });
        public int DeleteInterfaceCredential(Guid? id) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials WHERE id = @id", new { id });
        public int DeleteInterfaceCredential2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interface_credentials WHERE id = @id", new { id });
        public int DeleteInterfaceType(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interface_type WHERE id = @id", new { id });
        public int DeleteInvoice(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices WHERE id = @id", new { id });
        public int DeleteInvoice2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoices WHERE id = @id", new { id });
        public int DeleteInvoiceAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units WHERE id = @id", new { id });
        public int DeleteInvoiceAdjustment(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments WHERE id = @id", new { id });
        public int DeleteInvoiceAdjustmentFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions WHERE id = @id", new { id });
        public int DeleteInvoiceItem(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines WHERE id = @id", new { id });
        public int DeleteInvoiceItem2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_items WHERE id = @id", new { id });
        public int DeleteInvoiceItemAdjustment(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments WHERE id = @id", new { id });
        public int DeleteInvoiceItemAdjustmentFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions WHERE id = @id", new { id });
        public int DeleteInvoiceItemFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions WHERE id = @id", new { id });
        public int DeleteInvoiceItemReferenceNumber(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers WHERE id = @id", new { id });
        public int DeleteInvoiceItemTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags WHERE id = @id", new { id });
        public int DeleteInvoiceOrderNumber(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers WHERE id = @id", new { id });
        public int DeleteInvoiceStatus(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_statuses WHERE id = @id", new { id });
        public int DeleteInvoiceTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_tags WHERE id = @id", new { id });
        public int DeleteInvoiceTransactionSummary(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries WHERE id = @id", new { id });
        public int DeleteInvoiceTransactionSummary2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries WHERE id = @id", new { id });
        public int DeleteIsbn(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}isbns WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteIssn(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}issns WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteIssuanceMode(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances WHERE id = @id", new { id });
        public int DeleteItem(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item WHERE id = @id", new { id });
        public int DeleteItem2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}items WHERE id = @id", new { id });
        public int DeleteItemDamagedStatus(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status WHERE id = @id", new { id });
        public int DeleteItemDamagedStatus2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses WHERE id = @id", new { id });
        public int DeleteItemDonor(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_donors WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemElectronicAccess(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemFormerId(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_former_ids WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemNote(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_notes WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemNoteType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type WHERE id = @id", new { id });
        public int DeleteItemNoteType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_note_types WHERE id = @id", new { id });
        public int DeleteItemStatisticalCode(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemStatus(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_statuses WHERE id = @id", new { id });
        public int DeleteItemTag(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_tags WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteItemYearCaption(string id, Guid? itemId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_year_caption WHERE id = @id AND item_id = @itemId", new { id, itemId });
        public int DeleteJobExecution(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions WHERE id = @id", new { id });
        public int DeleteJobExecution2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_executions WHERE id = @id", new { id });
        public int DeleteJobExecutionProgress(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress WHERE id = @id", new { id });
        public int DeleteJobExecutionProgress2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses WHERE id = @id", new { id });
        public int DeleteJobExecutionSourceChunk(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks WHERE id = @id", new { id });
        public int DeleteJobExecutionSourceChunk2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks WHERE id = @id", new { id });
        public int DeleteJobMonitoring(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring WHERE id = @id", new { id });
        public int DeleteJobMonitoring2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_monitorings WHERE id = @id", new { id });
        public int DeleteJournalRecord(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records WHERE id = @id", new { id });
        public int DeleteJournalRecord2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}journal_records WHERE id = @id", new { id });
        public int DeleteLanguage(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}languages WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteLedger(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger WHERE id = @id", new { id });
        public int DeleteLedger2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledgers WHERE id = @id", new { id });
        public int DeleteLedgerAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units WHERE id = @id", new { id });
        public int DeleteLedgerRollover(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover WHERE id = @id", new { id });
        public int DeleteLedgerRollover2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers WHERE id = @id", new { id });
        public int DeleteLedgerRolloverBudgetsRollover(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover WHERE id = @id", new { id });
        public int DeleteLedgerRolloverEncumbrancesRollover(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover WHERE id = @id", new { id });
        public int DeleteLedgerRolloverError(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error WHERE id = @id", new { id });
        public int DeleteLedgerRolloverError2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors WHERE id = @id", new { id });
        public int DeleteLedgerRolloverProgress(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress WHERE id = @id", new { id });
        public int DeleteLedgerRolloverProgress2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses WHERE id = @id", new { id });
        public int DeleteLibrary(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary WHERE id = @id", new { id });
        public int DeleteLibrary2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}libraries WHERE id = @id", new { id });
        public int DeleteLoan(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan WHERE id = @id", new { id });
        public int DeleteLoan2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loans WHERE id = @id", new { id });
        public int DeleteLoanEvent(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan WHERE id = @id", new { id });
        public int DeleteLoanEvent2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_events WHERE id = @id", new { id });
        public int DeleteLoanPolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy WHERE id = @id", new { id });
        public int DeleteLoanPolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_policies WHERE id = @id", new { id });
        public int DeleteLoanType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type WHERE id = @id", new { id });
        public int DeleteLoanType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_types WHERE id = @id", new { id });
        public int DeleteLocation(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location WHERE id = @id", new { id });
        public int DeleteLocation2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}locations WHERE id = @id", new { id });
        public int DeleteLocationServicePoint(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}location_service_points WHERE id = @id", new { id });
        public int DeleteLocationSetting(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}location_settings WHERE id = @id", new { id });
        public int DeleteLogin(Guid? id) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials WHERE id = @id", new { id });
        public int DeleteLogin2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}logins WHERE id = @id", new { id });
        public int DeleteLostItemFeePolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy WHERE id = @id", new { id });
        public int DeleteLostItemFeePolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies WHERE id = @id", new { id });
        public int DeleteManualBlockTemplate(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates WHERE id = @id", new { id });
        public int DeleteManualBlockTemplate2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}manual_block_templates WHERE id = @id", new { id });
        public int DeleteMappingParamsSnapshot(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots WHERE job_execution_id = @id", new { id });
        public int DeleteMappingRule(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules WHERE id = @id", new { id });
        public int DeleteMappingRulesSnapshot(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots WHERE job_execution_id = @id", new { id });
        public int DeleteMarcRecord(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb WHERE id = @id", new { id });
        public int DeleteMarcRecord2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}marc_records WHERE id = @id", new { id });
        public int DeleteMaterialType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type WHERE id = @id", new { id });
        public int DeleteMaterialType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}material_types WHERE id = @id", new { id });
        public int DeleteModeOfIssuance(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance WHERE id = @id", new { id });
        public int DeleteNatureOfContentTerm(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term WHERE id = @id", new { id });
        public int DeleteNatureOfContentTerm2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms WHERE id = @id", new { id });
        public int DeleteNote(Guid? id) => Execute($"DELETE FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data WHERE id = @id", new { id });
        public int DeleteNote2(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}notes WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteNote3(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}notes2 WHERE id = @id", new { id });
        public int DeleteNoteType(Guid? id) => Execute($"DELETE FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type WHERE id = @id", new { id });
        public int DeleteNoteType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}note_types WHERE id = @id", new { id });
        public int DeleteObjectNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}object_notes WHERE id = @id", new { id });
        public int DeleteOclcNumber(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}oclc_numbers WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteOrder(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order WHERE id = @id", new { id });
        public int DeleteOrder2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}orders WHERE id = @id", new { id });
        public int DeleteOrderAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units WHERE id = @id", new { id });
        public int DeleteOrderInvoice(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship WHERE id = @id", new { id });
        public int DeleteOrderInvoice2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_invoices WHERE id = @id", new { id });
        public int DeleteOrderItem(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line WHERE id = @id", new { id });
        public int DeleteOrderItem2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_items WHERE id = @id", new { id });
        public int DeleteOrderItemAlert(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_alerts WHERE id = @id", new { id });
        public int DeleteOrderItemClaim(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_claims WHERE id = @id", new { id });
        public int DeleteOrderItemContributor(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_contributors WHERE id = @id", new { id });
        public int DeleteOrderItemFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions WHERE id = @id", new { id });
        public int DeleteOrderItemLocation2(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_locations WHERE id = @id", new { id });
        public int DeleteOrderItemNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_notes WHERE id = @id", new { id });
        public int DeleteOrderItemProductId(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids WHERE id = @id", new { id });
        public int DeleteOrderItemReferenceNumber(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers WHERE id = @id", new { id });
        public int DeleteOrderItemReportingCode(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes WHERE id = @id", new { id });
        public int DeleteOrderItemTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_tags WHERE id = @id", new { id });
        public int DeleteOrderItemVolume(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_volumes WHERE id = @id", new { id });
        public int DeleteOrderNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_notes WHERE id = @id", new { id });
        public int DeleteOrderStatus(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_statuses WHERE id = @id", new { id });
        public int DeleteOrderTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_tags WHERE id = @id", new { id });
        public int DeleteOrderTemplate(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates WHERE id = @id", new { id });
        public int DeleteOrderTemplate2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_templates WHERE id = @id", new { id });
        public int DeleteOrderTransactionSummary(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries WHERE id = @id", new { id });
        public int DeleteOrderTransactionSummary2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries WHERE id = @id", new { id });
        public int DeleteOrderType(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_types WHERE id = @id", new { id });
        public int DeleteOrganization(Guid? id) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations WHERE id = @id", new { id });
        public int DeleteOrganization2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organizations WHERE id = @id", new { id });
        public int DeleteOrganizationAccount(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_accounts WHERE id = @id", new { id });
        public int DeleteOrganizationAccountAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units WHERE id = @id", new { id });
        public int DeleteOrganizationAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units WHERE id = @id", new { id });
        public int DeleteOrganizationAddress(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_addresses WHERE id = @id", new { id });
        public int DeleteOrganizationAddressCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_address_categories WHERE id = @id", new { id });
        public int DeleteOrganizationAgreement(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_agreements WHERE id = @id", new { id });
        public int DeleteOrganizationAlias(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_aliases WHERE id = @id", new { id });
        public int DeleteOrganizationChangelog(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_changelogs WHERE id = @id", new { id });
        public int DeleteOrganizationContact(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_contacts WHERE id = @id", new { id });
        public int DeleteOrganizationEmail(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_emails WHERE id = @id", new { id });
        public int DeleteOrganizationEmailCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_email_categories WHERE id = @id", new { id });
        public int DeleteOrganizationInterface(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_interfaces WHERE id = @id", new { id });
        public int DeleteOrganizationNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_notes WHERE id = @id", new { id });
        public int DeleteOrganizationPhoneNumber(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers WHERE id = @id", new { id });
        public int DeleteOrganizationPhoneNumberCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories WHERE id = @id", new { id });
        public int DeleteOrganizationTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_tags WHERE id = @id", new { id });
        public int DeleteOrganizationUrl(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_urls WHERE id = @id", new { id });
        public int DeleteOrganizationUrlCategory(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_url_categories WHERE id = @id", new { id });
        public int DeleteOverdueFinePolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy WHERE id = @id", new { id });
        public int DeleteOverdueFinePolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies WHERE id = @id", new { id });
        public int DeleteOwner(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners WHERE id = @id", new { id });
        public int DeleteOwner2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}owners WHERE id = @id", new { id });
        public int DeletePatronActionSession(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session WHERE id = @id", new { id });
        public int DeletePatronActionSession2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions WHERE id = @id", new { id });
        public int DeletePatronNoticePolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy WHERE id = @id", new { id });
        public int DeletePatronNoticePolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies WHERE id = @id", new { id });
        public int DeletePatronNoticePolicyFeeFineNotice(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices WHERE id = @id", new { id });
        public int DeletePatronNoticePolicyLoanNotice(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices WHERE id = @id", new { id });
        public int DeletePatronNoticePolicyRequestNotice(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices WHERE id = @id", new { id });
        public int DeletePayment(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions WHERE id = @id", new { id });
        public int DeletePayment2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payments WHERE id = @id", new { id });
        public int DeletePaymentMethod(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments WHERE id = @id", new { id });
        public int DeletePaymentMethod2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payment_methods WHERE id = @id", new { id });
        public int DeletePaymentType(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payment_types WHERE id = @id", new { id });
        public int DeletePermission(Guid? id) => Execute($"DELETE FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions WHERE id = @id", new { id });
        public int DeletePermission2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions WHERE id = @id", new { id });
        public int DeletePermissionChildOf(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_child_of WHERE id = @id", new { id });
        public int DeletePermissionGrantedTo(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_granted_to WHERE id = @id", new { id });
        public int DeletePermissionSubPermission(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions WHERE id = @id", new { id });
        public int DeletePermissionsUser(Guid? id) => Execute($"DELETE FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users WHERE id = @id", new { id });
        public int DeletePermissionsUser2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions_users WHERE id = @id", new { id });
        public int DeletePermissionsUserPermission(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions WHERE id = @id", new { id });
        public int DeletePermissionTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_tags WHERE id = @id", new { id });
        public int DeletePhysicalDescription(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}physical_descriptions WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeletePrecedingSucceedingTitle(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title WHERE id = @id", new { id });
        public int DeletePrecedingSucceedingTitle2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles WHERE id = @id", new { id });
        public int DeletePrecedingSucceedingTitleIdentifier(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers WHERE id = @id", new { id });
        public int DeletePrefix(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes WHERE id = @id", new { id });
        public int DeletePrefix2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}prefixes WHERE id = @id", new { id });
        public int DeletePrinter(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}printers WHERE id = @id", new { id });
        public int DeleteProxy(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor WHERE id = @id", new { id });
        public int DeleteProxy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}proxies WHERE id = @id", new { id });
        public int DeletePublication(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publications WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeletePublicationFrequency(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publication_frequency WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeletePublicationRange(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publication_range WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteRawRecord(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb WHERE id = @id", new { id });
        public int DeleteRawRecord2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}raw_records WHERE id = @id", new { id });
        public int DeleteReceiptStatus(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}receipt_statuses WHERE id = @id", new { id });
        public int DeleteReceiving(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces WHERE id = @id", new { id });
        public int DeleteReceiving2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}receivings WHERE id = @id", new { id });
        public int DeleteRecord(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb WHERE id = @id", new { id });
        public int DeleteRecord2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}records WHERE id = @id", new { id });
        public int DeleteRefundReason(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds WHERE id = @id", new { id });
        public int DeleteRefundReason2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}refund_reasons WHERE id = @id", new { id });
        public int DeleteRelationship(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}relationships WHERE id = @id", new { id });
        public int DeleteRelationshipType(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}relationship_types WHERE id = @id", new { id });
        public int DeleteReportingCode(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code WHERE id = @id", new { id });
        public int DeleteReportingCode2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}reporting_codes WHERE id = @id", new { id });
        public int DeleteRequest(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request WHERE id = @id", new { id });
        public int DeleteRequest2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}requests WHERE id = @id", new { id });
        public int DeleteRequestIdentifier(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_identifiers WHERE id = @id", new { id });
        public int DeleteRequestNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_notes WHERE id = @id", new { id });
        public int DeleteRequestPolicy(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy WHERE id = @id", new { id });
        public int DeleteRequestPolicy2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_policies WHERE id = @id", new { id });
        public int DeleteRequestPolicyRequestType(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types WHERE id = @id", new { id });
        public int DeleteRequestTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_tags WHERE id = @id", new { id });
        public int DeleteScheduledNotice(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice WHERE id = @id", new { id });
        public int DeleteScheduledNotice2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}scheduled_notices WHERE id = @id", new { id });
        public int DeleteSeries(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}series WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteServicePoint(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point WHERE id = @id", new { id });
        public int DeleteServicePoint2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_points WHERE id = @id", new { id });
        public int DeleteServicePointOwner(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_owners WHERE id = @id", new { id });
        public int DeleteServicePointStaffSlip(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips WHERE id = @id", new { id });
        public int DeleteServicePointUser(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user WHERE id = @id", new { id });
        public int DeleteServicePointUser2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_users WHERE id = @id", new { id });
        public int DeleteServicePointUserServicePoint(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points WHERE id = @id", new { id });
        public int DeleteSetting(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}settings WHERE id = @id", new { id });
        public int DeleteSnapshot(Guid? id) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb WHERE id = @id", new { id });
        public int DeleteSnapshot2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}snapshots WHERE id = @id", new { id });
        public int DeleteSource(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source WHERE id = @id", new { id });
        public int DeleteSource2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}sources WHERE id = @id", new { id });
        public int DeleteSourceMarc(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}source_marcs WHERE id = @id", new { id });
        public int DeleteSourceMarcField(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}source_marc_fields WHERE id = @id", new { id });
        public int DeleteStaffSlip(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips WHERE id = @id", new { id });
        public int DeleteStaffSlip2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}staff_slips WHERE id = @id", new { id });
        public int DeleteStatisticalCode(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code WHERE id = @id", new { id });
        public int DeleteStatisticalCode2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statistical_codes WHERE id = @id", new { id });
        public int DeleteStatisticalCodeType(Guid? id) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type WHERE id = @id", new { id });
        public int DeleteStatisticalCodeType2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statistical_code_types WHERE id = @id", new { id });
        public int DeleteStatus(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statuses WHERE id = @id", new { id });
        public int DeleteSubject(string id, Guid? instanceId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}subjects WHERE id = @id AND instance_id = @instanceId", new { id, instanceId });
        public int DeleteSuffix(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes WHERE id = @id", new { id });
        public int DeleteSuffix2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}suffixes WHERE id = @id", new { id });
        public int DeleteSupplementStatement(string id, Guid? holdingId) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}supplement_statements WHERE id = @id AND holding_id = @holdingId", new { id, holdingId });
        public int DeleteTag(Guid? id) => Execute($"DELETE FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags WHERE id = @id", new { id });
        public int DeleteTag2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}tags WHERE id = @id", new { id });
        public int DeleteTemplate(Guid? id) => Execute($"DELETE FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template WHERE id = @id", new { id });
        public int DeleteTemplate2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}templates WHERE id = @id", new { id });
        public int DeleteTemplateOutputFormat(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}template_output_formats WHERE id = @id", new { id });
        public int DeleteTitle(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles WHERE id = @id", new { id });
        public int DeleteTitle2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}titles WHERE id = @id", new { id });
        public int DeleteTitleContributor(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}title_contributors WHERE id = @id", new { id });
        public int DeleteTitleProductId(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}title_product_ids WHERE id = @id", new { id });
        public int DeleteTransaction(Guid? id) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction WHERE id = @id", new { id });
        public int DeleteTransaction2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transactions WHERE id = @id", new { id });
        public int DeleteTransactionTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transaction_tags WHERE id = @id", new { id });
        public int DeleteTransferAccount(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers WHERE id = @id", new { id });
        public int DeleteTransferAccount2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transfer_accounts WHERE id = @id", new { id });
        public int DeleteTransferCriteria(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria WHERE id = @id", new { id });
        public int DeleteTransferCriteria2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transfer_criterias WHERE id = @id", new { id });
        public int DeleteUser(Guid? id) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users WHERE id = @id", new { id });
        public int DeleteUser2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}users WHERE id = @id", new { id });
        public int DeleteUserAcquisitionsUnit(Guid? id) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership WHERE id = @id", new { id });
        public int DeleteUserAcquisitionsUnit2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units WHERE id = @id", new { id });
        public int DeleteUserAddress(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_addresses WHERE id = @id", new { id });
        public int DeleteUserDepartment(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_departments WHERE id = @id", new { id });
        public int DeleteUserNote(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_notes WHERE id = @id", new { id });
        public int DeleteUserRequestPreference(Guid? id) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference WHERE id = @id", new { id });
        public int DeleteUserRequestPreference2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_request_preferences WHERE id = @id", new { id });
        public int DeleteUserSummary(Guid? id) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary WHERE id = @id", new { id });
        public int DeleteUserSummary2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summaries WHERE id = @id", new { id });
        public int DeleteUserSummaryOpenFeesFine(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines WHERE id = @id", new { id });
        public int DeleteUserSummaryOpenLoan(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans WHERE id = @id", new { id });
        public int DeleteUserTag(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_tags WHERE id = @id", new { id });
        public int DeleteVoucher(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers WHERE id = @id", new { id });
        public int DeleteVoucher2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}vouchers WHERE id = @id", new { id });
        public int DeleteVoucherAcquisitionsUnit(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units WHERE id = @id", new { id });
        public int DeleteVoucherItem(Guid? id) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines WHERE id = @id", new { id });
        public int DeleteVoucherItem2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_items WHERE id = @id", new { id });
        public int DeleteVoucherItemFund(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions WHERE id = @id", new { id });
        public int DeleteVoucherItemInvoiceItem(string id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items WHERE id = @id", new { id });
        public int DeleteVoucherStatus(int? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_statuses WHERE id = @id", new { id });
        public int DeleteWaiveReason(Guid? id) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives WHERE id = @id", new { id });
        public int DeleteWaiveReason2(Guid? id) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}waive_reasons WHERE id = @id", new { id });
        public int DeleteAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAcquisitionsUnit2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAddresses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}addresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAddressTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}addresstype{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAddressType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}address_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAlerts(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}alert{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAlert2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alerts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAllocatedFromFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}allocated_from_funds{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAllocatedToFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}allocated_to_funds{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAlternativeTitles(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alternative_titles{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAlternativeTitleTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}alternative_title_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAlternativeTitleType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}alternative_title_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAuthAttempts(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAuthAttempt2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}auth_attempts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAuthCredentialsHistories(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials_history{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAuthCredentialsHistory2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}auth_credentials_histories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteAuthPasswordActions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_password_action{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchGroups(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchGroup2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVouchers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucher2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_vouchers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherBatchedVouchers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_vouchers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherBatchedVoucherBatchedVoucherLines(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_lines{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherBatchedVoucherBatchedVoucherLineFundCodes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_batched_voucher_batched_voucher_line_fund_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherExports(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherExport2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_exports{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherExportConfigs(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherExportConfig2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_configs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBatchVoucherExportConfigWeekdays(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}batch_voucher_export_config_weekdays{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlocks(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manualblocks{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlock2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}blocks{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlockConditions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_conditions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlockCondition2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}block_conditions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlockLimits(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}patron_block_limits{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBlockLimit2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}block_limits{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBoundWithParts(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}bound_with_part{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBoundWithPart2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}bound_with_parts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgets(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudget2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budgets{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetExpenseClasses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}budget_expense_class{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetExpenseClass2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_expense_classes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetGroups(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}group_fund_fiscal_year{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetGroup2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteBudgetTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}budget_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCallNumberTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}call_number_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCallNumberType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}call_number_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCampuses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loccampus{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCampus2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}campuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCancellationReasons(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}cancellation_reason{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCancellationReason2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}cancellation_reasons{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCategories(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCategory2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCheckIns(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}check_in{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCheckIn2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}check_ins{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCirculationNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}circulation_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCirculationRules(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCirculationRule2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}circulation_rules{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteClassifications(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}classifications{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteClassificationTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}classification_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteClassificationType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}classification_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCloseReasons(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reasons_for_closure{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCloseReason2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}close_reasons{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteComments(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteComment2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}comments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteConfigurations(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_configuration{(IsMySql ? "_" : ".")}config_data{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteConfiguration2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}configurations{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContacts(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContact2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contacts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactAddresses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_addresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactAddressCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_address_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactEmails(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_emails{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactEmailCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_email_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactPhoneNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_phone_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactPhoneNumberCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_phone_number_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactUrls(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_urls{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContactUrlCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contact_url_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContributors(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContributorNameTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_name_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContributorNameType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributor_name_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContributorTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}contributor_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteContributorType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}contributor_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCountries(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}countries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCurrencies(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}currencies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCustomFields(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCustomField2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}custom_fields{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteCustomFieldValues(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}custom_field_values{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteDepartments(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteDepartment2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}departments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteDocuments(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteDocument2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}documents{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteEditions(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}editions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteElectronicAccesses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteElectronicAccessRelationships(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}electronic_access_relationship{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteElectronicAccessRelationship2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}electronic_access_relationships{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteErrorRecords(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}error_records_lb{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteErrorRecord2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}error_records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteEventLogs(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteEventLog2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}event_logs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteExpenseClasses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}expense_class{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteExpenseClass2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}expense_classes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteExportConfigCredentials(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteExportConfigCredential2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}export_config_credentials{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteExtents(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}extents{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFees(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}accounts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFee2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fees{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFeeTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefines{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFeeType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fee_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFinanceGroups(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFinanceGroup2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}finance_groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFinanceGroupAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}finance_group_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFiscalYears(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fiscal_year{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFiscalYear2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fiscal_years{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFiscalYearAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fiscal_year_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFixedDueDateSchedules(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}fixed_due_date_schedule{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFixedDueDateSchedule2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedules{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFixedDueDateScheduleSchedules(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fixed_due_date_schedule_schedules{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFormats(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}formats{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFunds(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFund2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}funds{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFundAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFundTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFundTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}fund_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteFundType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}fund_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteGroups(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteGroup2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}groups{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldings(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_record{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHolding2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holdings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingDonors(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_donors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingElectronicAccesses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingEntries(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_entries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingFormerIds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_former_ids{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingNoteTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_note_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingNoteType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_note_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingStatisticalCodes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHoldingType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}holding_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHridSettings(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteHridSetting2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}hrid_settings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIdentifiers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}identifiers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIdTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}identifier_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIdType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}id_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIllPolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}ill_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIllPolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ill_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIndexStatements(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}index_statements{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstances(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstance2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instances{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceFormats(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_format{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceFormat2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_formats{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceNatureOfContentTerms(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceNoteTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_note_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceNoteType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_note_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceRelationships(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceRelationshipTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_relationship_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceSourceMarcs(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_source_marc{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceStatisticalCodes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceStatuses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_status{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}instance_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstanceType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}instance_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstitutions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}locinstitution{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInstitution2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}institutions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInterfaces(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInterface2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interfaces{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInterfaceCredentials(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInterfaceCredential2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interface_credentials{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInterfaceTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}interface_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoices(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoice2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceAdjustments(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_adjustments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceAdjustmentFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItems(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}invoice_lines{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItem2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_items{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItemAdjustments(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItemAdjustmentFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_adjustment_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItemFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItemReferenceNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceItemTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_item_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceOrderNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_order_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceTransactionSummaries(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteInvoiceTransactionSummary2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}invoice_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIsbns(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}isbns{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIssns(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}issns{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteIssuanceModes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}mode_of_issuances{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItems(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItem2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}items{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemDamagedStatuses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_damaged_status{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemDamagedStatus2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_damaged_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemDonors(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_donors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemElectronicAccesses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_electronic_accesses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemFormerIds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_former_ids{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemNoteTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}item_note_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemNoteType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_note_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemStatisticalCodes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_statistical_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteItemYearCaptions(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}item_year_caption{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecutions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecution2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_executions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecutionProgresses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_progress{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecutionProgress2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_execution_progresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecutionSourceChunks(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobExecutionSourceChunk2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_execution_source_chunks{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobMonitorings(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}job_monitoring{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJobMonitoring2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}job_monitorings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJournalRecords(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteJournalRecord2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}journal_records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLanguages(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}languages{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedger2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledgers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRollovers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRollover2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollovers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverBudgetsRollovers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_budgets_rollover{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverEncumbrancesRollovers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_encumbrances_rollover{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverErrors(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_error{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverError2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_errors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverProgresses(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}ledger_fiscal_year_rollover_progress{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLedgerRolloverProgress2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}ledger_rollover_progresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLibraries(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loclibrary{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLibrary2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}libraries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoans(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoan2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loans{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanEvents(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}audit_loan{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanEvent2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_events{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanPolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}loan_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanPolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}loan_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLoanType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}loan_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLocations(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}location{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLocation2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}locations{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLocationServicePoints(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}location_service_points{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLocationSettings(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}location_settings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLogins(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_login{(IsMySql ? "_" : ".")}auth_credentials{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLogin2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}logins{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLostItemFeePolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}lost_item_fee_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteLostItemFeePolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}lost_item_fee_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteManualBlockTemplates(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteManualBlockTemplate2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}manual_block_templates{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMappingParamsSnapshots(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_params_snapshots{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMappingRules(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMappingRulesSnapshots(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_manager{(IsMySql ? "_" : ".")}mapping_rules_snapshots{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMarcRecords(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}marc_records_lb{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMarcRecord2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}marc_records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMaterialTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}material_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteMaterialType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}material_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteModeOfIssuances(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}mode_of_issuance{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNatureOfContentTerms(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}nature_of_content_term{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNatureOfContentTerm2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}nature_of_content_terms{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNotes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_data{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNote2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNote3s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}notes2{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNoteTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_notes{(IsMySql ? "_" : ".")}note_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteNoteType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}note_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteObjectNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}object_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOclcNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}oclc_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrders(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}purchase_order{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrder2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}orders{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderInvoices(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_invoice_relationship{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderInvoice2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_invoices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItems(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}po_line{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItem2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_items{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemAlerts(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_alerts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemClaims(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_claims{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemContributors(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_contributors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemLocation2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_locations{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemProductIds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_product_ids{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemReferenceNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_reference_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemReportingCodes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_reporting_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderItemVolumes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_item_volumes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTemplates(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTemplate2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_templates{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTransactionSummaries(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTransactionSummary2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_transaction_summaries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrderTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}order_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizations(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_organizations_storage{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganization2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organizations{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAccounts(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_accounts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAccountAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_account_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAddresses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_addresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAddressCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_address_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAgreements(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_agreements{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationAliases(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_aliases{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationChangelogs(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_changelogs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationContacts(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_contacts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationEmails(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_emails{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationEmailCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_email_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationInterfaces(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_interfaces{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationPhoneNumbers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_phone_numbers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationPhoneNumberCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_phone_number_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationUrls(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_urls{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOrganizationUrlCategories(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}organization_url_categories{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOverdueFinePolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}overdue_fine_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOverdueFinePolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}overdue_fine_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOwners(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteOwner2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}owners{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronActionSessions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_action_session{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronActionSession2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_action_sessions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronNoticePolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}patron_notice_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronNoticePolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronNoticePolicyFeeFineNotices(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_fee_fine_notices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronNoticePolicyLoanNotices(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_loan_notices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePatronNoticePolicyRequestNotices(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}patron_notice_policy_request_notices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePayments(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}feefineactions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePayment2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePaymentMethods(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}payments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePaymentMethod2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payment_methods{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePaymentTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}payment_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermission2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionChildOfs(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_child_of{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionGrantedTos(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_granted_to{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionSubPermissions(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_sub_permissions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionsUsers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_permissions{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionsUser2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions_users{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionsUserPermissions(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permissions_user_permissions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePermissionTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}permission_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePhysicalDescriptions(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}physical_descriptions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrecedingSucceedingTitles(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}preceding_succeeding_title{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrecedingSucceedingTitle2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_titles{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrecedingSucceedingTitleIdentifiers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}preceding_succeeding_title_identifiers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrefixes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrefix2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}prefixes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePrinters(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}printers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteProxies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}proxyfor{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteProxy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}proxies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePublications(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publications{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePublicationFrequencies(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publication_frequency{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeletePublicationRanges(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}publication_range{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRawRecords(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}raw_records_lb{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRawRecord2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}raw_records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteReceiptStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}receipt_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteReceivings(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}pieces{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteReceiving2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}receivings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRecords(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}records_lb{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRecord2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}records{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRefundReasons(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}refunds{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRefundReason2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}refund_reasons{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRelationships(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}relationships{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRelationshipTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}relationship_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteReportingCodes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}reporting_code{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteReportingCode2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}reporting_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequests(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequest2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}requests{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestIdentifiers(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_identifiers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestPolicies(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}request_policy{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestPolicy2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_policies{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestPolicyRequestTypes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_policy_request_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteRequestTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}request_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteScheduledNotices(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}scheduled_notice{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteScheduledNotice2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}scheduled_notices{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSeries(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}series{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePoints(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePoint2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_points{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePointOwners(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_owners{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePointStaffSlips(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_staff_slips{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePointUsers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}service_point_user{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePointUser2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_users{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteServicePointUserServicePoints(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}service_point_user_service_points{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSettings(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}settings{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSnapshots(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_source_record_storage{(IsMySql ? "_" : ".")}snapshots_lb{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSnapshot2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}snapshots{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSources(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}holdings_records_source{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSource2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}sources{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSourceMarcs(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}source_marcs{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSourceMarcFields(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}source_marc_fields{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStaffSlips(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStaffSlip2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}staff_slips{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStatisticalCodes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStatisticalCode2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statistical_codes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStatisticalCodeTypes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_inventory_storage{(IsMySql ? "_" : ".")}statistical_code_type{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStatisticalCodeType2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statistical_code_types{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSubjects(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}subjects{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSuffixes(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSuffix2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}suffixes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteSupplementStatements(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}supplement_statements{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTags(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_tags{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTag2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTemplates(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_template_engine{(IsMySql ? "_" : ".")}template{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTemplate2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}templates{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTemplateOutputFormats(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}template_output_formats{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTitles(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTitle2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}titles{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTitleContributors(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}title_contributors{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTitleProductIds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}title_product_ids{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransactions(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_finance_storage{(IsMySql ? "_" : ".")}transaction{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransaction2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transactions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransactionTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transaction_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransferAccounts(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransferAccount2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transfer_accounts{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransferCriterias(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}transfer_criteria{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteTransferCriteria2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}transfer_criterias{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUsers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_users{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUser2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}users{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_orders_storage{(IsMySql ? "_" : ".")}acquisitions_unit_membership{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserAcquisitionsUnit2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserAddresses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_addresses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserDepartments(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_departments{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserNotes(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_notes{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserRequestPreferences(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_circulation_storage{(IsMySql ? "_" : ".")}user_request_preference{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserRequestPreference2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_request_preferences{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserSummaries(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_patron_blocks{(IsMySql ? "_" : ".")}user_summary{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserSummary2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summaries{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserSummaryOpenFeesFines(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summary_open_fees_fines{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserSummaryOpenLoans(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_summary_open_loans{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteUserTags(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}user_tags{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVouchers(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucher2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}vouchers{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherAcquisitionsUnits(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_acquisitions_units{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherItems(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_invoice_storage{(IsMySql ? "_" : ".")}voucher_lines{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherItem2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_items{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherItemFunds(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_item_fund_distributions{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherItemInvoiceItems(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_item_invoice_items{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteVoucherStatuses(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}voucher_statuses{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteWaiveReasons(string where = null, object param = null) => Execute($"DELETE FROM uchicago_mod_feesfines{(IsMySql ? "_" : ".")}waives{(where != null ? $" WHERE {where}" : "")}", param);
        public int DeleteWaiveReason2s(string where = null, object param = null) => Execute($"DELETE FROM uc{(IsMySql ? "_" : ".")}waive_reasons{(where != null ? $" WHERE {where}" : "")}", param);

        public int Execute(string sql, object param = null, int? commandTimeout = null)
        {
            traceSource.TraceEvent(TraceEventType.Verbose, 0, $"{sql} {(param is Dictionary<string, object> d ? $"{{ {string.Join(", ", d.Select(kvp => $"{kvp.Key} = {kvp.Value}"))} }}" : param)}");
            return Connection.Execute(sql, param, Transaction, commandTimeout ?? CommandTimeout);
        }

        public T ExecuteScalar<T>(string sql, object param = null, int? commandTimeout = null)
        {
            var s = Stopwatch.StartNew();
            try
            {
                return Connection.ExecuteScalar<T>(sql, param, Transaction, commandTimeout ?? CommandTimeout);
            }
            catch (NpgsqlException e)
            {
                if (e.Message == "Exception while reading from stream") traceSource.TraceEvent(TraceEventType.Verbose, 0, string.Join("\r\n", Query<string>($"EXPLAIN {sql}")));
                throw e;
            }
            finally
            {
                traceSource.TraceEvent(TraceEventType.Verbose, 0, $"{sql} {(param is Dictionary<string, object> d ? $"{{ {string.Join(", ", d.Select(kvp => $"{kvp.Key} = {kvp.Value}"))} }}" : param)} {s.Elapsed}");
            }
        }

        public int Count(string sql, object param = null, int? take = null, int? commandTimeout = null)
        {
            sql = $"SELECT COUNT (*) FROM ({sql}{(take != null ? $"{(IsMySql || IsPostgreSql ? $" LIMIT {take}" : $" OFFSET 0 ROWS FETCH NEXT {take} ROWS ONLY")}" : "")}) count";
            return ExecuteScalar<int>(sql, param, commandTimeout ?? CommandTimeout);
        }

        public IEnumerable<dynamic> Query(string sql, object param = null, int? skip = null, int? take = null, int? commandTimeout = null)
        {
            if (skip != null || take != null) sql = $"{sql}{(IsMySql ? $" LIMIT {(skip == null ? $"{take}" : $"{skip}, {take ?? int.MaxValue}")}" : IsPostgreSql ? $"{(take != null ? $" LIMIT {take}" : "")}{(skip != null ? $" OFFSET {skip}" : "")}" : $" OFFSET {skip ?? 0} ROWS{(take != null ? $" FETCH NEXT {take} ROWS ONLY" : "")}")}";
            var s = Stopwatch.StartNew();
            try
            {
                return Connection.Query(sql, param, Transaction, false, commandTimeout ?? CommandTimeout);
            }
            catch (NpgsqlException e)
            {
                if (e.Message == "Exception while reading from stream") traceSource.TraceEvent(TraceEventType.Verbose, 0, string.Join("\r\n", Query<string>($"EXPLAIN {sql}")));
                throw e;
            }
            finally
            {
                traceSource.TraceEvent(TraceEventType.Verbose, 0, $"{sql} {(param is Dictionary<string, object> d ? $"{{ {string.Join(", ", d.Select(kvp => $"{kvp.Key} = {kvp.Value}"))} }}" : param)} {s.Elapsed}");
            }
        }

        public IEnumerable<T> Query<T>(string sql, object param = null, int? skip = null, int? take = null, int? commandTimeout = null)
        {
            if (skip != null || take != null) sql = $"{sql}{(IsMySql ? $" LIMIT {(skip == null ? $"{take}" : $"{skip}, {take ?? int.MaxValue}")}" : IsPostgreSql ? $"{(take != null ? $" LIMIT {take}" : "")}{(skip != null ? $" OFFSET {skip}" : "")}" : $" OFFSET {skip ?? 0} ROWS{(take != null ? $" FETCH NEXT {take} ROWS ONLY" : "")}")}";
            var s = Stopwatch.StartNew();
            try
            {
                return Connection.Query<T>(sql, param, Transaction, false, commandTimeout ?? CommandTimeout);
            }
            catch (NpgsqlException e)
            {
                if (e.Message == "Exception while reading from stream") traceSource.TraceEvent(TraceEventType.Verbose, 0, string.Join("\r\n", Query<string>($"EXPLAIN {sql}")));
                throw e;
            }
            finally
            {
                traceSource.TraceEvent(TraceEventType.Verbose, 0, $"{sql} {(param is Dictionary<string, object> d ? $"{{ {string.Join(", ", d.Select(kvp => $"{kvp.Key} = {kvp.Value}"))} }}" : param)} {s.Elapsed}");
            }
        }

        public void Commit()
        {
            if (dbTransaction != null)
            {
                traceSource.TraceEvent(TraceEventType.Verbose, 0, "Committing transaction");
                dbTransaction.Commit();
                dbTransaction.Dispose();
                dbTransaction = dbConnection.BeginTransaction();
            }
        }

        private string SqlEncode(string value) => value.Replace("'", "''").Replace(@"\", IsMySql ? @"\\" : @"\");

        public void Dispose()
        {
            if (dbConnection != null)
            {
                dbConnection.Dispose();
            }
        }
    }

    public class DbProviderFactories
    {
        internal static DbProviderFactory GetFactory(string providerName)
        {
            if (providerName == "MySql.Data.MySqlClient" || providerName == "MySql.Data.MySqlClient2")
                throw new NotSupportedException();
            else if (providerName == "Npgsql")
                return NpgsqlFactory.Instance;
            else if (providerName == "System.Data.SqlClient")
                throw new NotSupportedException();
            throw new NotImplementedException();
        }
    }
}
