{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Custom field collection item",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "id": {
      "description": "The UUID format string",
      "type": "string",
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    },
    "name": {
      "description": "The name of the custom field",
      "example": "Department",
      "type": "string"
    },
    "refId": {
      "description": "The reference id of the custom field. Read only, autogenerated field",
      "example": "department_1",
      "readonly": true,
      "type": "string"
    },
    "type": {
      "title": "Custom Field Types Schema",
      "description": "Custom Field Types Schema",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "RADIO_BUTTON",
        "SINGLE_CHECKBOX",
        "SINGLE_SELECT_DROPDOWN",
        "MULTI_SELECT_DROPDOWN",
        "TEXTBOX_SHORT",
        "TEXTBOX_LONG"
      ]
    },
    "entityType": {
      "description": "The entity type, the custom field is assigned to",
      "example": "package",
      "type": "string"
    },
    "visible": {
      "description": "Defines visibility of the custom field",
      "example": true,
      "type": "boolean",
      "default": true
    },
    "required": {
      "description": "Defines if the custom field is required",
      "example": true,
      "type": "boolean",
      "default": false
    },
    "isRepeatable": {
      "description": "Defines if the custom field is repeatable",
      "example": true,
      "type": "boolean",
      "default": false
    },
    "order": {
      "description": "The order of the custom field to be displayed",
      "example": 1,
      "readonly": true,
      "type": "integer"
    },
    "helpText": {
      "description": "The description of the custom field",
      "example": "Provide a department",
      "type": "string"
    },
    "checkboxField": {
      "title": "Checkbox Field Schema",
      "description": "Checkbox Field Schema",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "default": {
          "description": "Defines if the custom field is default",
          "example": false,
          "type": "boolean",
          "default": false
        }
      }
    },
    "selectField": {
      "title": "Select Field Schema",
      "description": "Select Field Schema",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "multiSelect": {
          "description": "Defines if the custom field is a multi select",
          "example": false,
          "type": "boolean"
        },
        "options": {
          "description": "Select Field Options Schema",
          "javaType": "org.folio.rest.jaxrs.model.SelectFieldOptions",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "values": {
              "description": "Defines the possible values for the custom field",
              "type": "array",
              "items": {
                "description": "Select Field Option Schema",
                "javaType": "org.folio.rest.jaxrs.model.SelectFieldOption",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "id": {
                    "description": "Unique identifier for the option",
                    "example": "opt_1",
                    "type": "string",
                    "pattern": "opt_\\d{1,5}"
                  },
                  "value": {
                    "description": "Possible value of the custom field",
                    "example": "Engineering",
                    "type": "string"
                  },
                  "default": {
                    "description": "Indicates that this value is default",
                    "example": false,
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "value"
                ]
              }
            },
            "sortingOrder": {
              "description": "Defines sorting order for the custom field",
              "example": "ASC",
              "type": "string",
              "default": "CUSTOM",
              "enum": [
                "ASC",
                "DESC",
                "CUSTOM"
              ]
            }
          },
          "required": [
            "values"
          ]
        }
      },
      "required": [
        "multiSelect",
        "options"
      ]
    },
    "textField": {
      "title": "Textbox Field Schema",
      "description": "Textbox Field Schema",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "fieldFormat": {
          "description": "Defines custom field format option",
          "example": "EMAIL",
          "type": "string",
          "default": "TEXT",
          "enum": [
            "TEXT",
            "EMAIL",
            "URL",
            "NUMBER"
          ]
        }
      },
      "required": [
        "fieldFormat"
      ]
    },
    "metadata": {
      "title": "Metadata Schema",
      "description": "Metadata about creation and changes to records, provided by the server (client should not provide)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "createdDate": {
          "description": "Date and time when the record was created",
          "type": "string",
          "format": "date-time"
        },
        "createdByUserId": {
          "description": "ID of the user who created the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "createdByUsername": {
          "description": "Username of the user who created the record (when available)",
          "type": "string"
        },
        "updatedDate": {
          "description": "Date and time when the record was last updated",
          "type": "string",
          "format": "date-time"
        },
        "updatedByUserId": {
          "description": "ID of the user who last updated the record (when available)",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        },
        "updatedByUsername": {
          "description": "Username of the user who last updated the record (when available)",
          "type": "string"
        }
      },
      "required": [
        "createdDate"
      ]
    }
  },
  "required": [
    "name",
    "type",
    "entityType"
  ]
}